<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="634" onload="init(evt)" viewBox="0 0 1200 634" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="634" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python real_diff_SA_PPO.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="623.00"> </text><svg id="frames" x="10" width="1180" total_samples="5408"><g><title>run (real_diff_SA_PPO.py:1065) (18 samples, 0.33%)</title><rect x="0.0925%" y="100" width="0.3328%" height="15" fill="rgb(227,0,7)" fg:x="5" fg:w="18"/><text x="0.3425%" y="110.50"></text></g><g><title>run (real_diff_SA_PPO.py:1066) (39 samples, 0.72%)</title><rect x="0.4253%" y="100" width="0.7212%" height="15" fill="rgb(217,0,24)" fg:x="23" fg:w="39"/><text x="0.6753%" y="110.50"></text></g><g><title>print_operation_record (real_diff_SA_PPO.py:973) (29 samples, 0.54%)</title><rect x="0.6102%" y="116" width="0.5362%" height="15" fill="rgb(221,193,54)" fg:x="33" fg:w="29"/><text x="0.8602%" y="126.50"></text></g><g><title>generate_neighbor (real_diff_SA_PPO.py:1016) (9 samples, 0.17%)</title><rect x="1.1649%" y="116" width="0.1664%" height="15" fill="rgb(248,212,6)" fg:x="63" fg:w="9"/><text x="1.4149%" y="126.50"></text></g><g><title>choose_operation (real_diff_SA_PPO.py:1007) (6 samples, 0.11%)</title><rect x="1.5348%" y="132" width="0.1109%" height="15" fill="rgb(208,68,35)" fg:x="83" fg:w="6"/><text x="1.7848%" y="142.50"></text></g><g><title>choose_operation (real_diff_SA_PPO.py:1013) (16 samples, 0.30%)</title><rect x="1.7567%" y="132" width="0.2959%" height="15" fill="rgb(232,128,0)" fg:x="95" fg:w="16"/><text x="2.0067%" y="142.50"></text></g><g><title>generate_neighbor (real_diff_SA_PPO.py:1017) (40 samples, 0.74%)</title><rect x="1.3314%" y="116" width="0.7396%" height="15" fill="rgb(207,160,47)" fg:x="72" fg:w="40"/><text x="1.5814%" y="126.50"></text></g><g><title>execute (real_diff_SA_PPO.py:109) (7 samples, 0.13%)</title><rect x="2.2744%" y="148" width="0.1294%" height="15" fill="rgb(228,23,34)" fg:x="123" fg:w="7"/><text x="2.5244%" y="158.50"></text></g><g><title>check_availability (real_diff_SA_basic.py:91) (7 samples, 0.13%)</title><rect x="2.2744%" y="164" width="0.1294%" height="15" fill="rgb(218,30,26)" fg:x="123" fg:w="7"/><text x="2.5244%" y="174.50"></text></g><g><title>all (numpy/_core/fromnumeric.py:2601) (6 samples, 0.11%)</title><rect x="2.2929%" y="180" width="0.1109%" height="15" fill="rgb(220,122,19)" fg:x="124" fg:w="6"/><text x="2.5429%" y="190.50"></text></g><g><title>execute (real_diff_SA_PPO.py:113) (9 samples, 0.17%)</title><rect x="2.4223%" y="148" width="0.1664%" height="15" fill="rgb(250,228,42)" fg:x="131" fg:w="9"/><text x="2.6723%" y="158.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:362) (15 samples, 0.28%)</title><rect x="2.6257%" y="164" width="0.2774%" height="15" fill="rgb(240,193,28)" fg:x="142" fg:w="15"/><text x="2.8757%" y="174.50"></text></g><g><title>_init_blackboard (real_diff_evaluation.py:353) (8 samples, 0.15%)</title><rect x="2.7552%" y="180" width="0.1479%" height="15" fill="rgb(216,20,37)" fg:x="149" fg:w="8"/><text x="3.0052%" y="190.50"></text></g><g><title>_update_maintenance_cost (real_diff_evaluation.py:523) (7 samples, 0.13%)</title><rect x="3.2544%" y="196" width="0.1294%" height="15" fill="rgb(206,188,39)" fg:x="176" fg:w="7"/><text x="3.5044%" y="206.50"></text></g><g><title>execute (real_diff_SA_PPO.py:120) (44 samples, 0.81%)</title><rect x="2.5888%" y="148" width="0.8136%" height="15" fill="rgb(217,207,13)" fg:x="140" fg:w="44"/><text x="2.8388%" y="158.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:373) (27 samples, 0.50%)</title><rect x="2.9031%" y="164" width="0.4993%" height="15" fill="rgb(231,73,38)" fg:x="157" fg:w="27"/><text x="3.1531%" y="174.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:392) (17 samples, 0.31%)</title><rect x="3.0880%" y="180" width="0.3143%" height="15" fill="rgb(225,20,46)" fg:x="167" fg:w="17"/><text x="3.3380%" y="190.50"></text></g><g><title>execute (real_diff_SA_PPO.py:138) (41 samples, 0.76%)</title><rect x="3.4763%" y="148" width="0.7581%" height="15" fill="rgb(210,31,41)" fg:x="188" fg:w="41"/><text x="3.7263%" y="158.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (7 samples, 0.13%)</title><rect x="4.6228%" y="324" width="0.1294%" height="15" fill="rgb(221,200,47)" fg:x="250" fg:w="7"/><text x="4.8728%" y="334.50"></text></g><g><title>deepcopy (copy.py:146) (11 samples, 0.20%)</title><rect x="4.6043%" y="308" width="0.2034%" height="15" fill="rgb(226,26,5)" fg:x="249" fg:w="11"/><text x="4.8543%" y="318.50"></text></g><g><title>deepcopy (copy.py:146) (23 samples, 0.43%)</title><rect x="4.5118%" y="244" width="0.4253%" height="15" fill="rgb(249,33,26)" fg:x="244" fg:w="23"/><text x="4.7618%" y="254.50"></text></g><g><title>_deepcopy_list (copy.py:205) (22 samples, 0.41%)</title><rect x="4.5303%" y="260" width="0.4068%" height="15" fill="rgb(235,183,28)" fg:x="245" fg:w="22"/><text x="4.7803%" y="270.50"></text></g><g><title>deepcopy (copy.py:172) (20 samples, 0.37%)</title><rect x="4.5673%" y="276" width="0.3698%" height="15" fill="rgb(221,5,38)" fg:x="247" fg:w="20"/><text x="4.8173%" y="286.50"></text></g><g><title>_reconstruct (copy.py:270) (18 samples, 0.33%)</title><rect x="4.6043%" y="292" width="0.3328%" height="15" fill="rgb(247,18,42)" fg:x="249" fg:w="18"/><text x="4.8543%" y="302.50"></text></g><g><title>deepcopy (copy.py:177) (7 samples, 0.13%)</title><rect x="4.8077%" y="308" width="0.1294%" height="15" fill="rgb(241,131,45)" fg:x="260" fg:w="7"/><text x="5.0577%" y="318.50"></text></g><g><title>_reconstruct (copy.py:270) (32 samples, 0.59%)</title><rect x="4.3639%" y="196" width="0.5917%" height="15" fill="rgb(249,31,29)" fg:x="236" fg:w="32"/><text x="4.6139%" y="206.50"></text></g><g><title>deepcopy (copy.py:146) (32 samples, 0.59%)</title><rect x="4.3639%" y="212" width="0.5917%" height="15" fill="rgb(225,111,53)" fg:x="236" fg:w="32"/><text x="4.6139%" y="222.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (32 samples, 0.59%)</title><rect x="4.3639%" y="228" width="0.5917%" height="15" fill="rgb(238,160,17)" fg:x="236" fg:w="32"/><text x="4.6139%" y="238.50"></text></g><g><title>execute (real_diff_SA_PPO.py:140) (40 samples, 0.74%)</title><rect x="4.2345%" y="148" width="0.7396%" height="15" fill="rgb(214,148,48)" fg:x="229" fg:w="40"/><text x="4.4845%" y="158.50"></text></g><g><title>get_server_copy (real_diff_evaluation.py:194) (39 samples, 0.72%)</title><rect x="4.2530%" y="164" width="0.7212%" height="15" fill="rgb(232,36,49)" fg:x="230" fg:w="39"/><text x="4.5030%" y="174.50"></text></g><g><title>deepcopy (copy.py:172) (36 samples, 0.67%)</title><rect x="4.3084%" y="180" width="0.6657%" height="15" fill="rgb(209,103,24)" fg:x="233" fg:w="36"/><text x="4.5584%" y="190.50"></text></g><g><title>execute (real_diff_SA_PPO.py:178) (8 samples, 0.15%)</title><rect x="5.0481%" y="148" width="0.1479%" height="15" fill="rgb(229,88,8)" fg:x="273" fg:w="8"/><text x="5.2981%" y="158.50"></text></g><g><title>check_availability (real_diff_SA_basic.py:91) (7 samples, 0.13%)</title><rect x="5.0666%" y="164" width="0.1294%" height="15" fill="rgb(213,181,19)" fg:x="274" fg:w="7"/><text x="5.3166%" y="174.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:369) (13 samples, 0.24%)</title><rect x="5.3624%" y="164" width="0.2404%" height="15" fill="rgb(254,191,54)" fg:x="290" fg:w="13"/><text x="5.6124%" y="174.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:392) (12 samples, 0.22%)</title><rect x="5.3809%" y="180" width="0.2219%" height="15" fill="rgb(241,83,37)" fg:x="291" fg:w="12"/><text x="5.6309%" y="190.50"></text></g><g><title>execute (real_diff_SA_PPO.py:196) (38 samples, 0.70%)</title><rect x="5.2700%" y="148" width="0.7027%" height="15" fill="rgb(233,36,39)" fg:x="285" fg:w="38"/><text x="5.5200%" y="158.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:373) (20 samples, 0.37%)</title><rect x="5.6028%" y="164" width="0.3698%" height="15" fill="rgb(226,3,54)" fg:x="303" fg:w="20"/><text x="5.8528%" y="174.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:392) (13 samples, 0.24%)</title><rect x="5.7322%" y="180" width="0.2404%" height="15" fill="rgb(245,192,40)" fg:x="310" fg:w="13"/><text x="5.9822%" y="190.50"></text></g><g><title>execute (real_diff_SA_PPO.py:212) (29 samples, 0.54%)</title><rect x="6.0836%" y="148" width="0.5362%" height="15" fill="rgb(238,167,29)" fg:x="329" fg:w="29"/><text x="6.3336%" y="158.50"></text></g><g><title>_reconstruct (copy.py:264) (7 samples, 0.13%)</title><rect x="6.7862%" y="276" width="0.1294%" height="15" fill="rgb(232,182,51)" fg:x="367" fg:w="7"/><text x="7.0362%" y="286.50"></text></g><g><title>deepcopy (copy.py:172) (13 samples, 0.24%)</title><rect x="6.7123%" y="260" width="0.2404%" height="15" fill="rgb(231,60,39)" fg:x="363" fg:w="13"/><text x="6.9623%" y="270.50"></text></g><g><title>execute (real_diff_SA_PPO.py:228) (19 samples, 0.35%)</title><rect x="6.6198%" y="148" width="0.3513%" height="15" fill="rgb(208,69,12)" fg:x="358" fg:w="19"/><text x="6.8698%" y="158.50"></text></g><g><title>deepcopy (copy.py:172) (19 samples, 0.35%)</title><rect x="6.6198%" y="164" width="0.3513%" height="15" fill="rgb(235,93,37)" fg:x="358" fg:w="19"/><text x="6.8698%" y="174.50"></text></g><g><title>_reconstruct (copy.py:270) (19 samples, 0.35%)</title><rect x="6.6198%" y="180" width="0.3513%" height="15" fill="rgb(213,116,39)" fg:x="358" fg:w="19"/><text x="6.8698%" y="190.50"></text></g><g><title>deepcopy (copy.py:146) (19 samples, 0.35%)</title><rect x="6.6198%" y="196" width="0.3513%" height="15" fill="rgb(222,207,29)" fg:x="358" fg:w="19"/><text x="6.8698%" y="206.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (19 samples, 0.35%)</title><rect x="6.6198%" y="212" width="0.3513%" height="15" fill="rgb(206,96,30)" fg:x="358" fg:w="19"/><text x="6.8698%" y="222.50"></text></g><g><title>deepcopy (copy.py:146) (14 samples, 0.26%)</title><rect x="6.7123%" y="228" width="0.2589%" height="15" fill="rgb(218,138,4)" fg:x="363" fg:w="14"/><text x="6.9623%" y="238.50"></text></g><g><title>_deepcopy_list (copy.py:205) (14 samples, 0.26%)</title><rect x="6.7123%" y="244" width="0.2589%" height="15" fill="rgb(250,191,14)" fg:x="363" fg:w="14"/><text x="6.9623%" y="254.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:369) (12 samples, 0.22%)</title><rect x="7.1006%" y="164" width="0.2219%" height="15" fill="rgb(239,60,40)" fg:x="384" fg:w="12"/><text x="7.3506%" y="174.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:392) (8 samples, 0.15%)</title><rect x="7.1746%" y="180" width="0.1479%" height="15" fill="rgb(206,27,48)" fg:x="388" fg:w="8"/><text x="7.4246%" y="190.50"></text></g><g><title>execute (real_diff_SA_PPO.py:244) (27 samples, 0.50%)</title><rect x="6.9712%" y="148" width="0.4993%" height="15" fill="rgb(225,35,8)" fg:x="377" fg:w="27"/><text x="7.2212%" y="158.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:373) (8 samples, 0.15%)</title><rect x="7.3225%" y="164" width="0.1479%" height="15" fill="rgb(250,213,24)" fg:x="396" fg:w="8"/><text x="7.5725%" y="174.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:392) (6 samples, 0.11%)</title><rect x="7.3595%" y="180" width="0.1109%" height="15" fill="rgb(247,123,22)" fg:x="398" fg:w="6"/><text x="7.6095%" y="190.50"></text></g><g><title>execute (real_diff_SA_PPO.py:267) (7 samples, 0.13%)</title><rect x="7.5259%" y="148" width="0.1294%" height="15" fill="rgb(231,138,38)" fg:x="407" fg:w="7"/><text x="7.7759%" y="158.50"></text></g><g><title>deepcopy (copy.py:146) (6 samples, 0.11%)</title><rect x="7.8587%" y="228" width="0.1109%" height="15" fill="rgb(231,145,46)" fg:x="425" fg:w="6"/><text x="8.1087%" y="238.50"></text></g><g><title>deepcopy (copy.py:146) (13 samples, 0.24%)</title><rect x="7.7478%" y="196" width="0.2404%" height="15" fill="rgb(251,118,11)" fg:x="419" fg:w="13"/><text x="7.9978%" y="206.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (13 samples, 0.24%)</title><rect x="7.7478%" y="212" width="0.2404%" height="15" fill="rgb(217,147,25)" fg:x="419" fg:w="13"/><text x="7.9978%" y="222.50"></text></g><g><title>execute (real_diff_SA_PPO.py:289) (14 samples, 0.26%)</title><rect x="7.7478%" y="148" width="0.2589%" height="15" fill="rgb(247,81,37)" fg:x="419" fg:w="14"/><text x="7.9978%" y="158.50"></text></g><g><title>deepcopy (copy.py:172) (14 samples, 0.26%)</title><rect x="7.7478%" y="164" width="0.2589%" height="15" fill="rgb(209,12,38)" fg:x="419" fg:w="14"/><text x="7.9978%" y="174.50"></text></g><g><title>_reconstruct (copy.py:270) (14 samples, 0.26%)</title><rect x="7.7478%" y="180" width="0.2589%" height="15" fill="rgb(227,1,9)" fg:x="419" fg:w="14"/><text x="7.9978%" y="190.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:369) (15 samples, 0.28%)</title><rect x="8.1176%" y="164" width="0.2774%" height="15" fill="rgb(248,47,43)" fg:x="439" fg:w="15"/><text x="8.3676%" y="174.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:392) (10 samples, 0.18%)</title><rect x="8.2101%" y="180" width="0.1849%" height="15" fill="rgb(221,10,30)" fg:x="444" fg:w="10"/><text x="8.4601%" y="190.50"></text></g><g><title>_update_maintenance_cost (real_diff_evaluation.py:523) (6 samples, 0.11%)</title><rect x="8.2840%" y="196" width="0.1109%" height="15" fill="rgb(210,229,1)" fg:x="448" fg:w="6"/><text x="8.5340%" y="206.50"></text></g><g><title>execute (real_diff_SA_PPO.py:303) (28 samples, 0.52%)</title><rect x="8.0991%" y="148" width="0.5178%" height="15" fill="rgb(222,148,37)" fg:x="438" fg:w="28"/><text x="8.3491%" y="158.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:373) (12 samples, 0.22%)</title><rect x="8.3950%" y="164" width="0.2219%" height="15" fill="rgb(234,67,33)" fg:x="454" fg:w="12"/><text x="8.6450%" y="174.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:392) (7 samples, 0.13%)</title><rect x="8.4874%" y="180" width="0.1294%" height="15" fill="rgb(247,98,35)" fg:x="459" fg:w="7"/><text x="8.7374%" y="190.50"></text></g><g><title>execute (real_diff_SA_PPO.py:318) (39 samples, 0.72%)</title><rect x="8.6169%" y="148" width="0.7212%" height="15" fill="rgb(247,138,52)" fg:x="466" fg:w="39"/><text x="8.8669%" y="158.50"></text></g><g><title>_reconstruct (copy.py:270) (21 samples, 0.39%)</title><rect x="9.5044%" y="196" width="0.3883%" height="15" fill="rgb(213,79,30)" fg:x="514" fg:w="21"/><text x="9.7544%" y="206.50"></text></g><g><title>deepcopy (copy.py:146) (20 samples, 0.37%)</title><rect x="9.5229%" y="212" width="0.3698%" height="15" fill="rgb(246,177,23)" fg:x="515" fg:w="20"/><text x="9.7729%" y="222.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (19 samples, 0.35%)</title><rect x="9.5414%" y="228" width="0.3513%" height="15" fill="rgb(230,62,27)" fg:x="516" fg:w="19"/><text x="9.7914%" y="238.50"></text></g><g><title>deepcopy (copy.py:146) (12 samples, 0.22%)</title><rect x="9.6709%" y="244" width="0.2219%" height="15" fill="rgb(216,154,8)" fg:x="523" fg:w="12"/><text x="9.9209%" y="254.50"></text></g><g><title>_deepcopy_list (copy.py:205) (9 samples, 0.17%)</title><rect x="9.7263%" y="260" width="0.1664%" height="15" fill="rgb(244,35,45)" fg:x="526" fg:w="9"/><text x="9.9763%" y="270.50"></text></g><g><title>deepcopy (copy.py:172) (8 samples, 0.15%)</title><rect x="9.7448%" y="276" width="0.1479%" height="15" fill="rgb(251,115,12)" fg:x="527" fg:w="8"/><text x="9.9948%" y="286.50"></text></g><g><title>deepcopy (copy.py:172) (27 samples, 0.50%)</title><rect x="9.4120%" y="180" width="0.4993%" height="15" fill="rgb(240,54,50)" fg:x="509" fg:w="27"/><text x="9.6620%" y="190.50"></text></g><g><title>execute (real_diff_SA_PPO.py:319) (33 samples, 0.61%)</title><rect x="9.3380%" y="148" width="0.6102%" height="15" fill="rgb(233,84,52)" fg:x="505" fg:w="33"/><text x="9.5880%" y="158.50"></text></g><g><title>get_server_copy (real_diff_evaluation.py:194) (33 samples, 0.61%)</title><rect x="9.3380%" y="164" width="0.6102%" height="15" fill="rgb(207,117,47)" fg:x="505" fg:w="33"/><text x="9.5880%" y="174.50"></text></g><g><title>check_array_indexer (pandas/core/indexers/utils.py:535) (10 samples, 0.18%)</title><rect x="10.3180%" y="228" width="0.1849%" height="15" fill="rgb(249,43,39)" fg:x="558" fg:w="10"/><text x="10.5680%" y="238.50"></text></g><g><title>__getattr__ (pandas/core/generic.py:6296) (7 samples, 0.13%)</title><rect x="10.3735%" y="244" width="0.1294%" height="15" fill="rgb(209,38,44)" fg:x="561" fg:w="7"/><text x="10.6235%" y="254.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4149) (16 samples, 0.30%)</title><rect x="10.2256%" y="196" width="0.2959%" height="15" fill="rgb(236,212,23)" fg:x="553" fg:w="16"/><text x="10.4756%" y="206.50"></text></g><g><title>check_bool_indexer (pandas/core/indexing.py:2681) (12 samples, 0.22%)</title><rect x="10.2996%" y="212" width="0.2219%" height="15" fill="rgb(242,79,21)" fg:x="557" fg:w="12"/><text x="10.5496%" y="222.50"></text></g><g><title>_take_nd_ndarray (pandas/core/array_algos/take.py:133) (9 samples, 0.17%)</title><rect x="10.7433%" y="324" width="0.1664%" height="15" fill="rgb(211,96,35)" fg:x="581" fg:w="9"/><text x="10.9933%" y="334.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (13 samples, 0.24%)</title><rect x="10.7249%" y="308" width="0.2404%" height="15" fill="rgb(253,215,40)" fg:x="580" fg:w="13"/><text x="10.9749%" y="318.50"></text></g><g><title>take (pandas/core/generic.py:4133) (24 samples, 0.44%)</title><rect x="10.5399%" y="228" width="0.4438%" height="15" fill="rgb(211,81,21)" fg:x="570" fg:w="24"/><text x="10.7899%" y="238.50"></text></g><g><title>take (pandas/core/internals/managers.py:894) (15 samples, 0.28%)</title><rect x="10.7064%" y="244" width="0.2774%" height="15" fill="rgb(208,190,38)" fg:x="579" fg:w="15"/><text x="10.9564%" y="254.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:687) (15 samples, 0.28%)</title><rect x="10.7064%" y="260" width="0.2774%" height="15" fill="rgb(235,213,38)" fg:x="579" fg:w="15"/><text x="10.9564%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:688) (15 samples, 0.28%)</title><rect x="10.7064%" y="276" width="0.2774%" height="15" fill="rgb(237,122,38)" fg:x="579" fg:w="15"/><text x="10.9564%" y="286.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1307) (14 samples, 0.26%)</title><rect x="10.7249%" y="292" width="0.2589%" height="15" fill="rgb(244,218,35)" fg:x="580" fg:w="14"/><text x="10.9749%" y="302.50"></text></g><g><title>_take_with_is_copy (pandas/core/generic.py:4153) (26 samples, 0.48%)</title><rect x="10.5214%" y="212" width="0.4808%" height="15" fill="rgb(240,68,47)" fg:x="569" fg:w="26"/><text x="10.7714%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4093) (50 samples, 0.92%)</title><rect x="10.1886%" y="180" width="0.9246%" height="15" fill="rgb(210,16,53)" fg:x="551" fg:w="50"/><text x="10.4386%" y="190.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4155) (32 samples, 0.59%)</title><rect x="10.5214%" y="196" width="0.5917%" height="15" fill="rgb(235,124,12)" fg:x="569" fg:w="32"/><text x="10.7714%" y="206.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1191) (13 samples, 0.24%)</title><rect x="11.1132%" y="180" width="0.2404%" height="15" fill="rgb(224,169,11)" fg:x="601" fg:w="13"/><text x="11.3632%" y="190.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1754) (11 samples, 0.20%)</title><rect x="11.1501%" y="196" width="0.2034%" height="15" fill="rgb(250,166,2)" fg:x="603" fg:w="11"/><text x="11.4001%" y="206.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (6 samples, 0.11%)</title><rect x="11.5939%" y="244" width="0.1109%" height="15" fill="rgb(242,216,29)" fg:x="627" fg:w="6"/><text x="11.8439%" y="254.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (16 samples, 0.30%)</title><rect x="11.4830%" y="228" width="0.2959%" height="15" fill="rgb(230,116,27)" fg:x="621" fg:w="16"/><text x="11.7330%" y="238.50"></text></g><g><title>get_adjustable_time_range (real_diff_SA_PPO.py:384) (95 samples, 1.76%)</title><rect x="10.0777%" y="164" width="1.7567%" height="15" fill="rgb(228,99,48)" fg:x="545" fg:w="95"/><text x="10.3277%" y="174.50"></text></g><g><title>new_method (pandas/core/ops/common.py:76) (25 samples, 0.46%)</title><rect x="11.3720%" y="180" width="0.4623%" height="15" fill="rgb(253,11,6)" fg:x="615" fg:w="25"/><text x="11.6220%" y="190.50"></text></g><g><title>__eq__ (pandas/core/arraylike.py:40) (25 samples, 0.46%)</title><rect x="11.3720%" y="196" width="0.4623%" height="15" fill="rgb(247,143,39)" fg:x="615" fg:w="25"/><text x="11.6220%" y="206.50"></text></g><g><title>_cmp_method (pandas/core/series.py:6121) (20 samples, 0.37%)</title><rect x="11.4645%" y="212" width="0.3698%" height="15" fill="rgb(236,97,10)" fg:x="620" fg:w="20"/><text x="11.7145%" y="222.50"></text></g><g><title>execute (real_diff_SA_PPO.py:325) (106 samples, 1.96%)</title><rect x="10.0037%" y="148" width="1.9601%" height="15" fill="rgb(233,208,19)" fg:x="541" fg:w="106"/><text x="10.2537%" y="158.50">e..</text></g><g><title>apply_server_change (real_diff_evaluation.py:369) (12 samples, 0.22%)</title><rect x="12.1117%" y="196" width="0.2219%" height="15" fill="rgb(216,164,2)" fg:x="655" fg:w="12"/><text x="12.3617%" y="206.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:392) (6 samples, 0.11%)</title><rect x="12.2226%" y="212" width="0.1109%" height="15" fill="rgb(220,129,5)" fg:x="661" fg:w="6"/><text x="12.4726%" y="222.50"></text></g><g><title>execute (real_diff_SA_PPO.py:338) (27 samples, 0.50%)</title><rect x="11.9822%" y="148" width="0.4993%" height="15" fill="rgb(242,17,10)" fg:x="648" fg:w="27"/><text x="12.2322%" y="158.50"></text></g><g><title>adjust_purchase_time (real_diff_SA_PPO.py:488) (26 samples, 0.48%)</title><rect x="12.0007%" y="164" width="0.4808%" height="15" fill="rgb(242,107,0)" fg:x="649" fg:w="26"/><text x="12.2507%" y="174.50"></text></g><g><title>apply_time_adjustment (real_diff_SA_PPO.py:518) (22 samples, 0.41%)</title><rect x="12.0747%" y="180" width="0.4068%" height="15" fill="rgb(251,28,31)" fg:x="653" fg:w="22"/><text x="12.3247%" y="190.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:373) (8 samples, 0.15%)</title><rect x="12.3336%" y="196" width="0.1479%" height="15" fill="rgb(233,223,10)" fg:x="667" fg:w="8"/><text x="12.5836%" y="206.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:369) (12 samples, 0.22%)</title><rect x="12.5370%" y="196" width="0.2219%" height="15" fill="rgb(215,21,27)" fg:x="678" fg:w="12"/><text x="12.7870%" y="206.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:392) (7 samples, 0.13%)</title><rect x="12.6294%" y="212" width="0.1294%" height="15" fill="rgb(232,23,21)" fg:x="683" fg:w="7"/><text x="12.8794%" y="222.50"></text></g><g><title>execute (real_diff_SA_PPO.py:355) (18 samples, 0.33%)</title><rect x="12.5000%" y="148" width="0.3328%" height="15" fill="rgb(244,5,23)" fg:x="676" fg:w="18"/><text x="12.7500%" y="158.50"></text></g><g><title>adjust_migration_time (real_diff_SA_PPO.py:496) (18 samples, 0.33%)</title><rect x="12.5000%" y="164" width="0.3328%" height="15" fill="rgb(226,81,46)" fg:x="676" fg:w="18"/><text x="12.7500%" y="174.50"></text></g><g><title>apply_time_adjustment (real_diff_SA_PPO.py:518) (17 samples, 0.31%)</title><rect x="12.5185%" y="180" width="0.3143%" height="15" fill="rgb(247,70,30)" fg:x="677" fg:w="17"/><text x="12.7685%" y="190.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:369) (12 samples, 0.22%)</title><rect x="13.1102%" y="196" width="0.2219%" height="15" fill="rgb(212,68,19)" fg:x="709" fg:w="12"/><text x="13.3602%" y="206.50"></text></g><g><title>execute (real_diff_SA_PPO.py:369) (28 samples, 0.52%)</title><rect x="12.9993%" y="148" width="0.5178%" height="15" fill="rgb(240,187,13)" fg:x="703" fg:w="28"/><text x="13.2493%" y="158.50"></text></g><g><title>adjust_dismiss_time (real_diff_SA_PPO.py:503) (27 samples, 0.50%)</title><rect x="13.0178%" y="164" width="0.4993%" height="15" fill="rgb(223,113,26)" fg:x="704" fg:w="27"/><text x="13.2678%" y="174.50"></text></g><g><title>apply_time_adjustment (real_diff_SA_PPO.py:518) (25 samples, 0.46%)</title><rect x="13.0547%" y="180" width="0.4623%" height="15" fill="rgb(206,192,2)" fg:x="706" fg:w="25"/><text x="13.3047%" y="190.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:373) (10 samples, 0.18%)</title><rect x="13.3321%" y="196" width="0.1849%" height="15" fill="rgb(241,108,4)" fg:x="721" fg:w="10"/><text x="13.5821%" y="206.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:392) (8 samples, 0.15%)</title><rect x="13.3691%" y="212" width="0.1479%" height="15" fill="rgb(247,173,49)" fg:x="723" fg:w="8"/><text x="13.6191%" y="222.50"></text></g><g><title>_update_maintenance_cost (real_diff_evaluation.py:523) (6 samples, 0.11%)</title><rect x="13.4061%" y="228" width="0.1109%" height="15" fill="rgb(224,114,35)" fg:x="725" fg:w="6"/><text x="13.6561%" y="238.50"></text></g><g><title>delete_server (real_diff_SA_PPO.py:560) (15 samples, 0.28%)</title><rect x="13.5170%" y="164" width="0.2774%" height="15" fill="rgb(245,159,27)" fg:x="731" fg:w="15"/><text x="13.7670%" y="174.50"></text></g><g><title>delete_server (real_diff_SA_PPO.py:564) (13 samples, 0.24%)</title><rect x="13.7944%" y="164" width="0.2404%" height="15" fill="rgb(245,172,44)" fg:x="746" fg:w="13"/><text x="14.0444%" y="174.50"></text></g><g><title>get_server_copy (real_diff_evaluation.py:194) (12 samples, 0.22%)</title><rect x="13.8129%" y="180" width="0.2219%" height="15" fill="rgb(236,23,11)" fg:x="747" fg:w="12"/><text x="14.0629%" y="190.50"></text></g><g><title>deepcopy (copy.py:172) (10 samples, 0.18%)</title><rect x="13.8499%" y="196" width="0.1849%" height="15" fill="rgb(205,117,38)" fg:x="749" fg:w="10"/><text x="14.0999%" y="206.50"></text></g><g><title>_reconstruct (copy.py:270) (7 samples, 0.13%)</title><rect x="13.9053%" y="212" width="0.1294%" height="15" fill="rgb(237,72,25)" fg:x="752" fg:w="7"/><text x="14.1553%" y="222.50"></text></g><g><title>deepcopy (copy.py:146) (7 samples, 0.13%)</title><rect x="13.9053%" y="228" width="0.1294%" height="15" fill="rgb(244,70,9)" fg:x="752" fg:w="7"/><text x="14.1553%" y="238.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (7 samples, 0.13%)</title><rect x="13.9053%" y="244" width="0.1294%" height="15" fill="rgb(217,125,39)" fg:x="752" fg:w="7"/><text x="14.1553%" y="254.50"></text></g><g><title>execute (real_diff_SA_PPO.py:554) (45 samples, 0.83%)</title><rect x="13.5170%" y="148" width="0.8321%" height="15" fill="rgb(235,36,10)" fg:x="731" fg:w="45"/><text x="13.7670%" y="158.50"></text></g><g><title>delete_server (real_diff_SA_PPO.py:587) (17 samples, 0.31%)</title><rect x="14.0348%" y="164" width="0.3143%" height="15" fill="rgb(251,123,47)" fg:x="759" fg:w="17"/><text x="14.2848%" y="174.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:369) (13 samples, 0.24%)</title><rect x="14.1087%" y="180" width="0.2404%" height="15" fill="rgb(221,13,13)" fg:x="763" fg:w="13"/><text x="14.3587%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (real_diff_SA_PPO.py:593) (25 samples, 0.46%)</title><rect x="14.3491%" y="180" width="0.4623%" height="15" fill="rgb(238,131,9)" fg:x="776" fg:w="25"/><text x="14.5991%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (real_diff_SA_PPO.py:594) (11 samples, 0.20%)</title><rect x="14.8114%" y="180" width="0.2034%" height="15" fill="rgb(211,50,8)" fg:x="801" fg:w="11"/><text x="15.0614%" y="190.50"></text></g><g><title>delete_move_record (real_diff_SA_PPO.py:593) (195 samples, 3.61%)</title><rect x="14.3491%" y="164" width="3.6058%" height="15" fill="rgb(245,182,24)" fg:x="776" fg:w="195"/><text x="14.5991%" y="174.50">dele..</text></g><g><title>&lt;listcomp&gt; (real_diff_SA_PPO.py:595) (159 samples, 2.94%)</title><rect x="15.0148%" y="180" width="2.9401%" height="15" fill="rgb(242,14,37)" fg:x="812" fg:w="159"/><text x="15.2648%" y="190.50">&lt;l..</text></g><g><title>_reconstruct (copy.py:270) (6 samples, 0.11%)</title><rect x="18.1028%" y="308" width="0.1109%" height="15" fill="rgb(246,228,12)" fg:x="979" fg:w="6"/><text x="18.3528%" y="318.50"></text></g><g><title>deepcopy (copy.py:172) (8 samples, 0.15%)</title><rect x="18.0843%" y="292" width="0.1479%" height="15" fill="rgb(213,55,15)" fg:x="978" fg:w="8"/><text x="18.3343%" y="302.50"></text></g><g><title>delete_move_record (real_diff_SA_PPO.py:604) (16 samples, 0.30%)</title><rect x="17.9549%" y="164" width="0.2959%" height="15" fill="rgb(209,9,3)" fg:x="971" fg:w="16"/><text x="18.2049%" y="174.50"></text></g><g><title>get_server_copy (real_diff_evaluation.py:194) (16 samples, 0.30%)</title><rect x="17.9549%" y="180" width="0.2959%" height="15" fill="rgb(230,59,30)" fg:x="971" fg:w="16"/><text x="18.2049%" y="190.50"></text></g><g><title>deepcopy (copy.py:172) (15 samples, 0.28%)</title><rect x="17.9734%" y="196" width="0.2774%" height="15" fill="rgb(209,121,21)" fg:x="972" fg:w="15"/><text x="18.2234%" y="206.50"></text></g><g><title>_reconstruct (copy.py:270) (15 samples, 0.28%)</title><rect x="17.9734%" y="212" width="0.2774%" height="15" fill="rgb(220,109,13)" fg:x="972" fg:w="15"/><text x="18.2234%" y="222.50"></text></g><g><title>deepcopy (copy.py:146) (15 samples, 0.28%)</title><rect x="17.9734%" y="228" width="0.2774%" height="15" fill="rgb(232,18,1)" fg:x="972" fg:w="15"/><text x="18.2234%" y="238.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (15 samples, 0.28%)</title><rect x="17.9734%" y="244" width="0.2774%" height="15" fill="rgb(215,41,42)" fg:x="972" fg:w="15"/><text x="18.2234%" y="254.50"></text></g><g><title>deepcopy (copy.py:146) (13 samples, 0.24%)</title><rect x="18.0104%" y="260" width="0.2404%" height="15" fill="rgb(224,123,36)" fg:x="974" fg:w="13"/><text x="18.2604%" y="270.50"></text></g><g><title>_deepcopy_list (copy.py:205) (12 samples, 0.22%)</title><rect x="18.0288%" y="276" width="0.2219%" height="15" fill="rgb(240,125,3)" fg:x="975" fg:w="12"/><text x="18.2788%" y="286.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:384) (10 samples, 0.18%)</title><rect x="18.4357%" y="196" width="0.1849%" height="15" fill="rgb(205,98,50)" fg:x="997" fg:w="10"/><text x="18.6857%" y="206.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:369) (20 samples, 0.37%)</title><rect x="18.4172%" y="180" width="0.3698%" height="15" fill="rgb(205,185,37)" fg:x="996" fg:w="20"/><text x="18.6672%" y="190.50"></text></g><g><title>execute (real_diff_SA_PPO.py:556) (248 samples, 4.59%)</title><rect x="14.3491%" y="148" width="4.5858%" height="15" fill="rgb(238,207,15)" fg:x="776" fg:w="248"/><text x="14.5991%" y="158.50">execu..</text></g><g><title>delete_move_record (real_diff_SA_PPO.py:663) (31 samples, 0.57%)</title><rect x="18.3617%" y="164" width="0.5732%" height="15" fill="rgb(213,199,42)" fg:x="993" fg:w="31"/><text x="18.6117%" y="174.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:373) (8 samples, 0.15%)</title><rect x="18.7870%" y="180" width="0.1479%" height="15" fill="rgb(235,201,11)" fg:x="1016" fg:w="8"/><text x="19.0370%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:392) (6 samples, 0.11%)</title><rect x="18.8240%" y="196" width="0.1109%" height="15" fill="rgb(207,46,11)" fg:x="1018" fg:w="6"/><text x="19.0740%" y="206.50"></text></g><g><title>execute (real_diff_SA_PPO.py:690) (27 samples, 0.50%)</title><rect x="19.0459%" y="148" width="0.4993%" height="15" fill="rgb(241,35,35)" fg:x="1030" fg:w="27"/><text x="19.2959%" y="158.50"></text></g><g><title>execute (real_diff_SA_PPO.py:691) (55 samples, 1.02%)</title><rect x="19.5451%" y="148" width="1.0170%" height="15" fill="rgb(243,32,47)" fg:x="1057" fg:w="55"/><text x="19.7951%" y="158.50"></text></g><g><title>execute (real_diff_SA_PPO.py:692) (208 samples, 3.85%)</title><rect x="20.5621%" y="148" width="3.8462%" height="15" fill="rgb(247,202,23)" fg:x="1112" fg:w="208"/><text x="20.8121%" y="158.50">exec..</text></g><g><title>execute (real_diff_SA_PPO.py:695) (13 samples, 0.24%)</title><rect x="24.4083%" y="148" width="0.2404%" height="15" fill="rgb(219,102,11)" fg:x="1320" fg:w="13"/><text x="24.6583%" y="158.50"></text></g><g><title>execute (real_diff_SA_PPO.py:704) (28 samples, 0.52%)</title><rect x="24.6672%" y="148" width="0.5178%" height="15" fill="rgb(243,110,44)" fg:x="1334" fg:w="28"/><text x="24.9172%" y="158.50"></text></g><g><title>&lt;listcomp&gt; (real_diff_SA_PPO.py:704) (27 samples, 0.50%)</title><rect x="24.6857%" y="164" width="0.4993%" height="15" fill="rgb(222,74,54)" fg:x="1335" fg:w="27"/><text x="24.9357%" y="174.50"></text></g><g><title>_randbelow_with_getrandbits (random.py:242) (8 samples, 0.15%)</title><rect x="25.7212%" y="180" width="0.1479%" height="15" fill="rgb(216,99,12)" fg:x="1391" fg:w="8"/><text x="25.9712%" y="190.50"></text></g><g><title>_randbelow_with_getrandbits (random.py:243) (6 samples, 0.11%)</title><rect x="25.8691%" y="180" width="0.1109%" height="15" fill="rgb(226,22,26)" fg:x="1399" fg:w="6"/><text x="26.1191%" y="190.50"></text></g><g><title>_randbelow_with_getrandbits (random.py:244) (9 samples, 0.17%)</title><rect x="25.9800%" y="180" width="0.1664%" height="15" fill="rgb(217,163,10)" fg:x="1405" fg:w="9"/><text x="26.2300%" y="190.50"></text></g><g><title>_randbelow_with_getrandbits (random.py:245) (8 samples, 0.15%)</title><rect x="26.1464%" y="180" width="0.1479%" height="15" fill="rgb(213,25,53)" fg:x="1414" fg:w="8"/><text x="26.3964%" y="190.50"></text></g><g><title>sample (random.py:459) (56 samples, 1.04%)</title><rect x="25.3513%" y="164" width="1.0355%" height="15" fill="rgb(252,105,26)" fg:x="1371" fg:w="56"/><text x="25.6013%" y="174.50"></text></g><g><title>sample (random.py:460) (11 samples, 0.20%)</title><rect x="26.3868%" y="164" width="0.2034%" height="15" fill="rgb(220,39,43)" fg:x="1427" fg:w="11"/><text x="26.6368%" y="174.50"></text></g><g><title>execute (real_diff_SA_PPO.py:711) (102 samples, 1.89%)</title><rect x="25.1849%" y="148" width="1.8861%" height="15" fill="rgb(229,68,48)" fg:x="1362" fg:w="102"/><text x="25.4349%" y="158.50">e..</text></g><g><title>sample (random.py:461) (26 samples, 0.48%)</title><rect x="26.5902%" y="164" width="0.4808%" height="15" fill="rgb(252,8,32)" fg:x="1438" fg:w="26"/><text x="26.8402%" y="174.50"></text></g><g><title>execute (real_diff_SA_PPO.py:712) (59 samples, 1.09%)</title><rect x="27.0710%" y="148" width="1.0910%" height="15" fill="rgb(223,20,43)" fg:x="1464" fg:w="59"/><text x="27.3210%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4092) (7 samples, 0.13%)</title><rect x="28.2175%" y="164" width="0.1294%" height="15" fill="rgb(229,81,49)" fg:x="1526" fg:w="7"/><text x="28.4675%" y="174.50"></text></g><g><title>__getattr__ (pandas/core/generic.py:6296) (13 samples, 0.24%)</title><rect x="28.9201%" y="228" width="0.2404%" height="15" fill="rgb(236,28,36)" fg:x="1564" fg:w="13"/><text x="29.1701%" y="238.50"></text></g><g><title>_can_hold_identifiers_and_holds_name (pandas/core/indexes/base.py:5449) (6 samples, 0.11%)</title><rect x="29.0496%" y="244" width="0.1109%" height="15" fill="rgb(249,185,26)" fg:x="1571" fg:w="6"/><text x="29.2996%" y="254.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4149) (43 samples, 0.80%)</title><rect x="28.4024%" y="180" width="0.7951%" height="15" fill="rgb(249,174,33)" fg:x="1536" fg:w="43"/><text x="28.6524%" y="190.50"></text></g><g><title>check_bool_indexer (pandas/core/indexing.py:2681) (37 samples, 0.68%)</title><rect x="28.5133%" y="196" width="0.6842%" height="15" fill="rgb(233,201,37)" fg:x="1542" fg:w="37"/><text x="28.7633%" y="206.50"></text></g><g><title>check_array_indexer (pandas/core/indexers/utils.py:535) (25 samples, 0.46%)</title><rect x="28.7352%" y="212" width="0.4623%" height="15" fill="rgb(221,78,26)" fg:x="1554" fg:w="25"/><text x="28.9852%" y="222.50"></text></g><g><title>take (pandas/core/internals/managers.py:891) (8 samples, 0.15%)</title><rect x="29.3639%" y="228" width="0.1479%" height="15" fill="rgb(250,127,30)" fg:x="1588" fg:w="8"/><text x="29.6139%" y="238.50"></text></g><g><title>take (pandas/core/internals/managers.py:893) (12 samples, 0.22%)</title><rect x="29.5118%" y="228" width="0.2219%" height="15" fill="rgb(230,49,44)" fg:x="1596" fg:w="12"/><text x="29.7618%" y="238.50"></text></g><g><title>_take_preprocess_indexer_and_fill_value (pandas/core/array_algos/take.py:579) (7 samples, 0.13%)</title><rect x="29.9001%" y="324" width="0.1294%" height="15" fill="rgb(229,67,23)" fg:x="1617" fg:w="7"/><text x="30.1501%" y="334.50"></text></g><g><title>_take_preprocess_indexer_and_fill_value (pandas/core/array_algos/take.py:586) (6 samples, 0.11%)</title><rect x="30.1405%" y="324" width="0.1109%" height="15" fill="rgb(249,83,47)" fg:x="1630" fg:w="6"/><text x="30.3905%" y="334.50"></text></g><g><title>_any (numpy/_core/_methods.py:64) (6 samples, 0.11%)</title><rect x="30.1405%" y="340" width="0.1109%" height="15" fill="rgb(215,43,3)" fg:x="1630" fg:w="6"/><text x="30.3905%" y="350.50"></text></g><g><title>_take_nd_ndarray (pandas/core/array_algos/take.py:133) (21 samples, 0.39%)</title><rect x="29.9001%" y="308" width="0.3883%" height="15" fill="rgb(238,154,13)" fg:x="1617" fg:w="21"/><text x="30.1501%" y="318.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (38 samples, 0.70%)</title><rect x="29.8077%" y="292" width="0.7027%" height="15" fill="rgb(219,56,2)" fg:x="1612" fg:w="38"/><text x="30.0577%" y="302.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1307) (41 samples, 0.76%)</title><rect x="29.7892%" y="276" width="0.7581%" height="15" fill="rgb(233,0,4)" fg:x="1611" fg:w="41"/><text x="30.0392%" y="286.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:687) (45 samples, 0.83%)</title><rect x="29.7707%" y="244" width="0.8321%" height="15" fill="rgb(235,30,7)" fg:x="1610" fg:w="45"/><text x="30.0207%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:688) (45 samples, 0.83%)</title><rect x="29.7707%" y="260" width="0.8321%" height="15" fill="rgb(250,79,13)" fg:x="1610" fg:w="45"/><text x="30.0207%" y="270.50"></text></g><g><title>take (pandas/core/generic.py:4133) (75 samples, 1.39%)</title><rect x="29.3084%" y="212" width="1.3868%" height="15" fill="rgb(211,146,34)" fg:x="1585" fg:w="75"/><text x="29.5584%" y="222.50"></text></g><g><title>take (pandas/core/internals/managers.py:894) (52 samples, 0.96%)</title><rect x="29.7337%" y="228" width="0.9615%" height="15" fill="rgb(228,22,38)" fg:x="1608" fg:w="52"/><text x="29.9837%" y="238.50"></text></g><g><title>_take_with_is_copy (pandas/core/generic.py:4153) (89 samples, 1.65%)</title><rect x="29.2714%" y="196" width="1.6457%" height="15" fill="rgb(235,168,5)" fg:x="1583" fg:w="89"/><text x="29.5214%" y="206.50"></text></g><g><title>take (pandas/core/generic.py:4138) (11 samples, 0.20%)</title><rect x="30.7138%" y="212" width="0.2034%" height="15" fill="rgb(221,155,16)" fg:x="1661" fg:w="11"/><text x="30.9638%" y="222.50"></text></g><g><title>execute (real_diff_SA_PPO.py:72) (155 samples, 2.87%)</title><rect x="28.1620%" y="148" width="2.8661%" height="15" fill="rgb(215,215,53)" fg:x="1523" fg:w="155"/><text x="28.4120%" y="158.50">ex..</text></g><g><title>__getitem__ (pandas/core/frame.py:4093) (145 samples, 2.68%)</title><rect x="28.3469%" y="164" width="2.6812%" height="15" fill="rgb(223,4,10)" fg:x="1533" fg:w="145"/><text x="28.5969%" y="174.50">__..</text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4155) (96 samples, 1.78%)</title><rect x="29.2530%" y="180" width="1.7751%" height="15" fill="rgb(234,103,6)" fg:x="1582" fg:w="96"/><text x="29.5030%" y="190.50">_..</text></g><g><title>execute (real_diff_SA_PPO.py:723) (15 samples, 0.28%)</title><rect x="31.0281%" y="148" width="0.2774%" height="15" fill="rgb(227,97,0)" fg:x="1678" fg:w="15"/><text x="31.2781%" y="158.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (10 samples, 0.18%)</title><rect x="32.0821%" y="228" width="0.1849%" height="15" fill="rgb(234,150,53)" fg:x="1735" fg:w="10"/><text x="32.3321%" y="238.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6320) (8 samples, 0.15%)</title><rect x="32.1191%" y="244" width="0.1479%" height="15" fill="rgb(228,201,54)" fg:x="1737" fg:w="8"/><text x="32.3691%" y="254.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (27 samples, 0.50%)</title><rect x="31.7862%" y="212" width="0.4993%" height="15" fill="rgb(222,22,37)" fg:x="1719" fg:w="27"/><text x="32.0362%" y="222.50"></text></g><g><title>__and__ (pandas/core/arraylike.py:70) (40 samples, 0.74%)</title><rect x="31.6568%" y="180" width="0.7396%" height="15" fill="rgb(237,53,32)" fg:x="1712" fg:w="40"/><text x="31.9068%" y="190.50"></text></g><g><title>_logical_method (pandas/core/series.py:6131) (33 samples, 0.61%)</title><rect x="31.7862%" y="196" width="0.6102%" height="15" fill="rgb(233,25,53)" fg:x="1719" fg:w="33"/><text x="32.0362%" y="206.50"></text></g><g><title>_cmp_method (pandas/core/series.py:6119) (12 samples, 0.22%)</title><rect x="32.4704%" y="196" width="0.2219%" height="15" fill="rgb(210,40,34)" fg:x="1756" fg:w="12"/><text x="32.7204%" y="206.50"></text></g><g><title>comparison_op (pandas/core/ops/array_ops.py:347) (8 samples, 0.15%)</title><rect x="32.5444%" y="212" width="0.1479%" height="15" fill="rgb(241,220,44)" fg:x="1760" fg:w="8"/><text x="32.7944%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (10 samples, 0.18%)</title><rect x="32.8217%" y="228" width="0.1849%" height="15" fill="rgb(235,28,35)" fg:x="1775" fg:w="10"/><text x="33.0717%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:586) (7 samples, 0.13%)</title><rect x="33.0067%" y="228" width="0.1294%" height="15" fill="rgb(210,56,17)" fg:x="1785" fg:w="7"/><text x="33.2567%" y="238.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (39 samples, 0.72%)</title><rect x="32.6923%" y="212" width="0.7212%" height="15" fill="rgb(224,130,29)" fg:x="1768" fg:w="39"/><text x="32.9423%" y="222.50"></text></g><g><title>execute (real_diff_SA_PPO.py:73) (117 samples, 2.16%)</title><rect x="31.3240%" y="148" width="2.1635%" height="15" fill="rgb(235,212,8)" fg:x="1694" fg:w="117"/><text x="31.5740%" y="158.50">e..</text></g><g><title>new_method (pandas/core/ops/common.py:76) (99 samples, 1.83%)</title><rect x="31.6568%" y="164" width="1.8306%" height="15" fill="rgb(223,33,50)" fg:x="1712" fg:w="99"/><text x="31.9068%" y="174.50">n..</text></g><g><title>__le__ (pandas/core/arraylike.py:52) (59 samples, 1.09%)</title><rect x="32.3964%" y="180" width="1.0910%" height="15" fill="rgb(219,149,13)" fg:x="1752" fg:w="59"/><text x="32.6464%" y="190.50"></text></g><g><title>_cmp_method (pandas/core/series.py:6121) (43 samples, 0.80%)</title><rect x="32.6923%" y="196" width="0.7951%" height="15" fill="rgb(250,156,29)" fg:x="1768" fg:w="43"/><text x="32.9423%" y="206.50"></text></g><g><title>_cmp_method (pandas/core/series.py:6119) (15 samples, 0.28%)</title><rect x="33.6723%" y="196" width="0.2774%" height="15" fill="rgb(216,193,19)" fg:x="1821" fg:w="15"/><text x="33.9223%" y="206.50"></text></g><g><title>comparison_op (pandas/core/ops/array_ops.py:347) (10 samples, 0.18%)</title><rect x="33.7648%" y="212" width="0.1849%" height="15" fill="rgb(216,135,14)" fg:x="1826" fg:w="10"/><text x="34.0148%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (7 samples, 0.13%)</title><rect x="34.0791%" y="228" width="0.1294%" height="15" fill="rgb(241,47,5)" fg:x="1843" fg:w="7"/><text x="34.3291%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (6 samples, 0.11%)</title><rect x="34.2641%" y="228" width="0.1109%" height="15" fill="rgb(233,42,35)" fg:x="1853" fg:w="6"/><text x="34.5141%" y="238.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (36 samples, 0.67%)</title><rect x="33.9682%" y="212" width="0.6657%" height="15" fill="rgb(231,13,6)" fg:x="1837" fg:w="36"/><text x="34.2182%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:594) (8 samples, 0.15%)</title><rect x="34.4859%" y="228" width="0.1479%" height="15" fill="rgb(207,181,40)" fg:x="1865" fg:w="8"/><text x="34.7359%" y="238.50"></text></g><g><title>_set_axis (pandas/core/generic.py:814) (6 samples, 0.11%)</title><rect x="34.5229%" y="244" width="0.1109%" height="15" fill="rgb(254,173,49)" fg:x="1867" fg:w="6"/><text x="34.7729%" y="254.50"></text></g><g><title>execute (real_diff_SA_PPO.py:74) (64 samples, 1.18%)</title><rect x="33.4874%" y="148" width="1.1834%" height="15" fill="rgb(221,1,38)" fg:x="1811" fg:w="64"/><text x="33.7374%" y="158.50"></text></g><g><title>new_method (pandas/core/ops/common.py:76) (56 samples, 1.04%)</title><rect x="33.6354%" y="164" width="1.0355%" height="15" fill="rgb(206,124,46)" fg:x="1819" fg:w="56"/><text x="33.8854%" y="174.50"></text></g><g><title>__ge__ (pandas/core/arraylike.py:60) (56 samples, 1.04%)</title><rect x="33.6354%" y="180" width="1.0355%" height="15" fill="rgb(249,21,11)" fg:x="1819" fg:w="56"/><text x="33.8854%" y="190.50"></text></g><g><title>_cmp_method (pandas/core/series.py:6121) (39 samples, 0.72%)</title><rect x="33.9497%" y="196" width="0.7212%" height="15" fill="rgb(222,201,40)" fg:x="1836" fg:w="39"/><text x="34.1997%" y="206.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:1001) (6 samples, 0.11%)</title><rect x="34.9852%" y="212" width="0.1109%" height="15" fill="rgb(235,61,29)" fg:x="1892" fg:w="6"/><text x="35.2352%" y="222.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:1002) (7 samples, 0.13%)</title><rect x="35.0962%" y="212" width="0.1294%" height="15" fill="rgb(219,207,3)" fg:x="1898" fg:w="7"/><text x="35.3462%" y="222.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:984) (6 samples, 0.11%)</title><rect x="35.3550%" y="212" width="0.1109%" height="15" fill="rgb(222,56,46)" fg:x="1912" fg:w="6"/><text x="35.6050%" y="222.50"></text></g><g><title>_ixs (pandas/core/frame.py:3996) (30 samples, 0.55%)</title><rect x="34.9852%" y="196" width="0.5547%" height="15" fill="rgb(239,76,54)" fg:x="1892" fg:w="30"/><text x="35.2352%" y="206.50"></text></g><g><title>_constructor_sliced_from_mgr (pandas/core/frame.py:679) (7 samples, 0.13%)</title><rect x="35.6139%" y="212" width="0.1294%" height="15" fill="rgb(231,124,27)" fg:x="1926" fg:w="7"/><text x="35.8639%" y="222.50"></text></g><g><title>_from_mgr (pandas/core/generic.py:357) (7 samples, 0.13%)</title><rect x="35.6139%" y="228" width="0.1294%" height="15" fill="rgb(249,195,6)" fg:x="1926" fg:w="7"/><text x="35.8639%" y="238.50"></text></g><g><title>_ixs (pandas/core/frame.py:4000) (8 samples, 0.15%)</title><rect x="35.6139%" y="196" width="0.1479%" height="15" fill="rgb(237,174,47)" fg:x="1926" fg:w="8"/><text x="35.8639%" y="206.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1191) (57 samples, 1.05%)</title><rect x="34.8743%" y="164" width="1.0540%" height="15" fill="rgb(206,201,31)" fg:x="1886" fg:w="57"/><text x="35.1243%" y="174.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1754) (52 samples, 0.96%)</title><rect x="34.9667%" y="180" width="0.9615%" height="15" fill="rgb(231,57,52)" fg:x="1891" fg:w="52"/><text x="35.2167%" y="190.50"></text></g><g><title>sample (pandas/core/generic.py:6118) (28 samples, 0.52%)</title><rect x="36.0762%" y="164" width="0.5178%" height="15" fill="rgb(248,177,22)" fg:x="1951" fg:w="28"/><text x="36.3262%" y="174.50"></text></g><g><title>sample (pandas/core/sample.py:152) (28 samples, 0.52%)</title><rect x="36.0762%" y="180" width="0.5178%" height="15" fill="rgb(215,211,37)" fg:x="1951" fg:w="28"/><text x="36.3262%" y="190.50"></text></g><g><title>prod (numpy/_core/fromnumeric.py:3191) (10 samples, 0.18%)</title><rect x="36.4090%" y="196" width="0.1849%" height="15" fill="rgb(241,128,51)" fg:x="1969" fg:w="10"/><text x="36.6590%" y="206.50"></text></g><g><title>take (pandas/core/internals/managers.py:891) (7 samples, 0.13%)</title><rect x="36.6679%" y="196" width="0.1294%" height="15" fill="rgb(227,165,31)" fg:x="1983" fg:w="7"/><text x="36.9179%" y="206.50"></text></g><g><title>take (pandas/core/indexes/base.py:1166) (6 samples, 0.11%)</title><rect x="36.8158%" y="212" width="0.1109%" height="15" fill="rgb(228,167,24)" fg:x="1991" fg:w="6"/><text x="37.0658%" y="222.50"></text></g><g><title>take (pandas/core/internals/managers.py:893) (13 samples, 0.24%)</title><rect x="36.7973%" y="196" width="0.2404%" height="15" fill="rgb(228,143,12)" fg:x="1990" fg:w="13"/><text x="37.0473%" y="206.50"></text></g><g><title>_take_preprocess_indexer_and_fill_value (pandas/core/array_algos/take.py:585) (6 samples, 0.11%)</title><rect x="37.2041%" y="292" width="0.1109%" height="15" fill="rgb(249,149,8)" fg:x="2012" fg:w="6"/><text x="37.4541%" y="302.50"></text></g><g><title>_take_nd_ndarray (pandas/core/array_algos/take.py:133) (16 samples, 0.30%)</title><rect x="37.1117%" y="276" width="0.2959%" height="15" fill="rgb(243,35,44)" fg:x="2007" fg:w="16"/><text x="37.3617%" y="286.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (31 samples, 0.57%)</title><rect x="37.1117%" y="260" width="0.5732%" height="15" fill="rgb(246,89,9)" fg:x="2007" fg:w="31"/><text x="37.3617%" y="270.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1307) (33 samples, 0.61%)</title><rect x="37.0932%" y="244" width="0.6102%" height="15" fill="rgb(233,213,13)" fg:x="2006" fg:w="33"/><text x="37.3432%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:688) (39 samples, 0.72%)</title><rect x="37.0562%" y="228" width="0.7212%" height="15" fill="rgb(233,141,41)" fg:x="2004" fg:w="39"/><text x="37.3062%" y="238.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:687) (41 samples, 0.76%)</title><rect x="37.0562%" y="212" width="0.7581%" height="15" fill="rgb(239,167,4)" fg:x="2004" fg:w="41"/><text x="37.3062%" y="222.50"></text></g><g><title>take (pandas/core/generic.py:4133) (66 samples, 1.22%)</title><rect x="36.6309%" y="180" width="1.2204%" height="15" fill="rgb(209,217,16)" fg:x="1981" fg:w="66"/><text x="36.8809%" y="190.50"></text></g><g><title>take (pandas/core/internals/managers.py:894) (44 samples, 0.81%)</title><rect x="37.0377%" y="196" width="0.8136%" height="15" fill="rgb(219,88,35)" fg:x="2003" fg:w="44"/><text x="37.2877%" y="206.50"></text></g><g><title>execute (real_diff_SA_PPO.py:81) (182 samples, 3.37%)</title><rect x="34.7078%" y="148" width="3.3654%" height="15" fill="rgb(220,193,23)" fg:x="1877" fg:w="182"/><text x="34.9578%" y="158.50">exe..</text></g><g><title>sample (pandas/core/generic.py:6119) (80 samples, 1.48%)</title><rect x="36.5939%" y="164" width="1.4793%" height="15" fill="rgb(230,90,52)" fg:x="1979" fg:w="80"/><text x="36.8439%" y="174.50"></text></g><g><title>take (pandas/core/generic.py:4138) (9 samples, 0.17%)</title><rect x="37.9068%" y="180" width="0.1664%" height="15" fill="rgb(252,106,19)" fg:x="2050" fg:w="9"/><text x="38.1568%" y="190.50"></text></g><g><title>execute (real_diff_SA_PPO.py:84) (6 samples, 0.11%)</title><rect x="38.2396%" y="148" width="0.1109%" height="15" fill="rgb(206,74,20)" fg:x="2068" fg:w="6"/><text x="38.4896%" y="158.50"></text></g><g><title>execute (real_diff_SA_PPO.py:92) (7 samples, 0.13%)</title><rect x="38.5540%" y="148" width="0.1294%" height="15" fill="rgb(230,138,44)" fg:x="2085" fg:w="7"/><text x="38.8040%" y="158.50"></text></g><g><title>execute_and_evaluate (real_diff_SA_PPO.py:54) (1,981 samples, 36.63%)</title><rect x="2.0895%" y="132" width="36.6309%" height="15" fill="rgb(235,182,43)" fg:x="113" fg:w="1981"/><text x="2.3395%" y="142.50">execute_and_evaluate (real_diff_SA_PPO.py:54)</text></g><g><title>indices (numpy/_core/numeric.py:1829) (7 samples, 0.13%)</title><rect x="39.1457%" y="180" width="0.1294%" height="15" fill="rgb(242,16,51)" fg:x="2117" fg:w="7"/><text x="39.3957%" y="190.50"></text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:537) (91 samples, 1.68%)</title><rect x="38.9423%" y="164" width="1.6827%" height="15" fill="rgb(248,9,4)" fg:x="2106" fg:w="91"/><text x="39.1923%" y="174.50"></text></g><g><title>indices (numpy/_core/numeric.py:1835) (68 samples, 1.26%)</title><rect x="39.3676%" y="180" width="1.2574%" height="15" fill="rgb(210,31,22)" fg:x="2129" fg:w="68"/><text x="39.6176%" y="190.50"></text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:540) (190 samples, 3.51%)</title><rect x="40.6250%" y="164" width="3.5133%" height="15" fill="rgb(239,54,39)" fg:x="2197" fg:w="190"/><text x="40.8750%" y="174.50">_re..</text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:541) (181 samples, 3.35%)</title><rect x="44.1383%" y="164" width="3.3469%" height="15" fill="rgb(230,99,41)" fg:x="2387" fg:w="181"/><text x="44.3883%" y="174.50">_re..</text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:542) (180 samples, 3.33%)</title><rect x="47.4852%" y="164" width="3.3284%" height="15" fill="rgb(253,106,12)" fg:x="2568" fg:w="180"/><text x="47.7352%" y="174.50">_re..</text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:543) (143 samples, 2.64%)</title><rect x="50.8136%" y="164" width="2.6442%" height="15" fill="rgb(213,46,41)" fg:x="2748" fg:w="143"/><text x="51.0636%" y="174.50">_r..</text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:545) (29 samples, 0.54%)</title><rect x="53.4578%" y="164" width="0.5362%" height="15" fill="rgb(215,133,35)" fg:x="2891" fg:w="29"/><text x="53.7078%" y="174.50"></text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:546) (38 samples, 0.70%)</title><rect x="53.9941%" y="164" width="0.7027%" height="15" fill="rgb(213,28,5)" fg:x="2920" fg:w="38"/><text x="54.2441%" y="174.50"></text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:547) (7 samples, 0.13%)</title><rect x="54.6967%" y="164" width="0.1294%" height="15" fill="rgb(215,77,49)" fg:x="2958" fg:w="7"/><text x="54.9467%" y="174.50"></text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:548) (38 samples, 0.70%)</title><rect x="54.8262%" y="164" width="0.7027%" height="15" fill="rgb(248,100,22)" fg:x="2965" fg:w="38"/><text x="55.0762%" y="174.50"></text></g><g><title>clip (numpy/_core/fromnumeric.py:2247) (32 samples, 0.59%)</title><rect x="54.9371%" y="180" width="0.5917%" height="15" fill="rgb(208,67,9)" fg:x="2971" fg:w="32"/><text x="55.1871%" y="190.50"></text></g><g><title>_wrapfunc (numpy/_core/fromnumeric.py:57) (25 samples, 0.46%)</title><rect x="55.0666%" y="196" width="0.4623%" height="15" fill="rgb(219,133,21)" fg:x="2978" fg:w="25"/><text x="55.3166%" y="206.50"></text></g><g><title>_clip (numpy/_core/_methods.py:106) (20 samples, 0.37%)</title><rect x="55.1590%" y="212" width="0.3698%" height="15" fill="rgb(246,46,29)" fg:x="2983" fg:w="20"/><text x="55.4090%" y="222.50"></text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:569) (177 samples, 3.27%)</title><rect x="55.5288%" y="164" width="3.2729%" height="15" fill="rgb(246,185,52)" fg:x="3003" fg:w="177"/><text x="55.7788%" y="174.50">_re..</text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:590) (27 samples, 0.50%)</title><rect x="58.8018%" y="164" width="0.4993%" height="15" fill="rgb(252,136,11)" fg:x="3180" fg:w="27"/><text x="59.0518%" y="174.50"></text></g><g><title>diff_evaluation (real_diff_evaluation.py:750) (1,315 samples, 24.32%)</title><rect x="38.7944%" y="148" width="24.3158%" height="15" fill="rgb(219,138,53)" fg:x="2098" fg:w="1315"/><text x="39.0444%" y="158.50">diff_evaluation (real_diff_evaluation.p..</text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:593) (206 samples, 3.81%)</title><rect x="59.3010%" y="164" width="3.8092%" height="15" fill="rgb(211,51,23)" fg:x="3207" fg:w="206"/><text x="59.5510%" y="174.50">_rec..</text></g><g><title>sum (numpy/_core/fromnumeric.py:2389) (38 samples, 0.70%)</title><rect x="63.6095%" y="212" width="0.7027%" height="15" fill="rgb(247,221,28)" fg:x="3440" fg:w="38"/><text x="63.8595%" y="222.50"></text></g><g><title>_wrapreduction (numpy/_core/fromnumeric.py:86) (37 samples, 0.68%)</title><rect x="63.6280%" y="228" width="0.6842%" height="15" fill="rgb(251,222,45)" fg:x="3441" fg:w="37"/><text x="63.8780%" y="238.50"></text></g><g><title>_calculate_profit (real_diff_evaluation.py:698) (60 samples, 1.11%)</title><rect x="63.2212%" y="180" width="1.1095%" height="15" fill="rgb(217,162,53)" fg:x="3419" fg:w="60"/><text x="63.4712%" y="190.50"></text></g><g><title>_calculate_revenue (real_diff_evaluation.py:688) (56 samples, 1.04%)</title><rect x="63.2951%" y="196" width="1.0355%" height="15" fill="rgb(229,93,14)" fg:x="3423" fg:w="56"/><text x="63.5451%" y="206.50"></text></g><g><title>_final_calculation (real_diff_evaluation.py:717) (65 samples, 1.20%)</title><rect x="63.1842%" y="164" width="1.2019%" height="15" fill="rgb(209,67,49)" fg:x="3417" fg:w="65"/><text x="63.4342%" y="174.50"></text></g><g><title>_final_calculation (real_diff_evaluation.py:725) (23 samples, 0.43%)</title><rect x="64.3861%" y="164" width="0.4253%" height="15" fill="rgb(213,87,29)" fg:x="3482" fg:w="23"/><text x="64.6361%" y="174.50"></text></g><g><title>sum (numpy/_core/fromnumeric.py:2389) (20 samples, 0.37%)</title><rect x="64.4416%" y="180" width="0.3698%" height="15" fill="rgb(205,151,52)" fg:x="3485" fg:w="20"/><text x="64.6916%" y="190.50"></text></g><g><title>_wrapreduction (numpy/_core/fromnumeric.py:86) (18 samples, 0.33%)</title><rect x="64.4786%" y="196" width="0.3328%" height="15" fill="rgb(253,215,39)" fg:x="3487" fg:w="18"/><text x="64.7286%" y="206.50"></text></g><g><title>diff_evaluation (real_diff_evaluation.py:752) (93 samples, 1.72%)</title><rect x="63.1102%" y="148" width="1.7197%" height="15" fill="rgb(221,220,41)" fg:x="3413" fg:w="93"/><text x="63.3602%" y="158.50"></text></g><g><title>execute_and_evaluate (real_diff_SA_PPO.py:56) (1,413 samples, 26.13%)</title><rect x="38.7204%" y="132" width="26.1280%" height="15" fill="rgb(218,133,21)" fg:x="2094" fg:w="1413"/><text x="38.9704%" y="142.50">execute_and_evaluate (real_diff_SA_PPO.py:..</text></g><g><title>generate_neighbor (real_diff_SA_PPO.py:1018) (3,396 samples, 62.80%)</title><rect x="2.0710%" y="116" width="62.7959%" height="15" fill="rgb(221,193,43)" fg:x="112" fg:w="3396"/><text x="2.3210%" y="126.50">generate_neighbor (real_diff_SA_PPO.py:1018)</text></g><g><title>generate_neighbor (real_diff_SA_PPO.py:1019) (26 samples, 0.48%)</title><rect x="64.8669%" y="116" width="0.4808%" height="15" fill="rgb(240,128,52)" fg:x="3508" fg:w="26"/><text x="65.1169%" y="126.50"></text></g><g><title>run (real_diff_SA_PPO.py:1067) (3,477 samples, 64.29%)</title><rect x="1.1464%" y="100" width="64.2936%" height="15" fill="rgb(253,114,12)" fg:x="62" fg:w="3477"/><text x="1.3964%" y="110.50">run (real_diff_SA_PPO.py:1067)</text></g><g><title>run (real_diff_SA_PPO.py:1073) (8 samples, 0.15%)</title><rect x="65.4586%" y="100" width="0.1479%" height="15" fill="rgb(215,223,47)" fg:x="3540" fg:w="8"/><text x="65.7086%" y="110.50"></text></g><g><title>accept_solution (real_diff_SA_PPO.py:1037) (6 samples, 0.11%)</title><rect x="65.7544%" y="116" width="0.1109%" height="15" fill="rgb(248,225,23)" fg:x="3556" fg:w="6"/><text x="66.0044%" y="126.50"></text></g><g><title>update_slots (real_diff_SA_basic.py:105) (7 samples, 0.13%)</title><rect x="65.9024%" y="148" width="0.1294%" height="15" fill="rgb(250,108,0)" fg:x="3564" fg:w="7"/><text x="66.1524%" y="158.50"></text></g><g><title>apply_pending_updates (real_diff_SA_basic.py:116) (8 samples, 0.15%)</title><rect x="65.9024%" y="132" width="0.1479%" height="15" fill="rgb(228,208,7)" fg:x="3564" fg:w="8"/><text x="66.1524%" y="142.50"></text></g><g><title>accept_solution (real_diff_SA_PPO.py:1039) (11 samples, 0.20%)</title><rect x="65.8654%" y="116" width="0.2034%" height="15" fill="rgb(244,45,10)" fg:x="3562" fg:w="11"/><text x="66.1154%" y="126.50"></text></g><g><title>update_best_solution (real_diff_evaluation.py:877) (375 samples, 6.93%)</title><rect x="66.0688%" y="132" width="6.9342%" height="15" fill="rgb(207,125,25)" fg:x="3573" fg:w="375"/><text x="66.3188%" y="142.50">update_be..</text></g><g><title>update_best_solution (real_diff_evaluation.py:882) (198 samples, 3.66%)</title><rect x="73.0030%" y="132" width="3.6612%" height="15" fill="rgb(210,195,18)" fg:x="3948" fg:w="198"/><text x="73.2530%" y="142.50">upda..</text></g><g><title>update_best_solution (real_diff_evaluation.py:883) (188 samples, 3.48%)</title><rect x="76.6642%" y="132" width="3.4763%" height="15" fill="rgb(249,80,12)" fg:x="4146" fg:w="188"/><text x="76.9142%" y="142.50">upd..</text></g><g><title>deepcopy (copy.py:146) (6 samples, 0.11%)</title><rect x="80.2145%" y="212" width="0.1109%" height="15" fill="rgb(221,65,9)" fg:x="4338" fg:w="6"/><text x="80.4645%" y="222.50"></text></g><g><title>_deepcopy_list (copy.py:205) (6 samples, 0.11%)</title><rect x="80.2145%" y="228" width="0.1109%" height="15" fill="rgb(235,49,36)" fg:x="4338" fg:w="6"/><text x="80.4645%" y="238.50"></text></g><g><title>deepcopy (copy.py:172) (13 samples, 0.24%)</title><rect x="80.1405%" y="148" width="0.2404%" height="15" fill="rgb(225,32,20)" fg:x="4334" fg:w="13"/><text x="80.3905%" y="158.50"></text></g><g><title>_reconstruct (copy.py:270) (13 samples, 0.24%)</title><rect x="80.1405%" y="164" width="0.2404%" height="15" fill="rgb(215,141,46)" fg:x="4334" fg:w="13"/><text x="80.3905%" y="174.50"></text></g><g><title>deepcopy (copy.py:146) (13 samples, 0.24%)</title><rect x="80.1405%" y="180" width="0.2404%" height="15" fill="rgb(250,160,47)" fg:x="4334" fg:w="13"/><text x="80.3905%" y="190.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (13 samples, 0.24%)</title><rect x="80.1405%" y="196" width="0.2404%" height="15" fill="rgb(216,222,40)" fg:x="4334" fg:w="13"/><text x="80.3905%" y="206.50"></text></g><g><title>update_best_solution (real_diff_evaluation.py:885) (14 samples, 0.26%)</title><rect x="80.1405%" y="132" width="0.2589%" height="15" fill="rgb(234,217,39)" fg:x="4334" fg:w="14"/><text x="80.3905%" y="142.50"></text></g><g><title>update_best_solution (real_diff_evaluation.py:887) (111 samples, 2.05%)</title><rect x="80.3994%" y="132" width="2.0525%" height="15" fill="rgb(207,178,40)" fg:x="4348" fg:w="111"/><text x="80.6494%" y="142.50">u..</text></g><g><title>update_best_solution (real_diff_evaluation.py:889) (800 samples, 14.79%)</title><rect x="82.4519%" y="132" width="14.7929%" height="15" fill="rgb(221,136,13)" fg:x="4459" fg:w="800"/><text x="82.7019%" y="142.50">update_best_solution (r..</text></g><g><title>deepcopy (copy.py:146) (20 samples, 0.37%)</title><rect x="98.1139%" y="276" width="0.3698%" height="15" fill="rgb(249,199,10)" fg:x="5306" fg:w="20"/><text x="98.3639%" y="286.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (16 samples, 0.30%)</title><rect x="98.1879%" y="292" width="0.2959%" height="15" fill="rgb(249,222,13)" fg:x="5310" fg:w="16"/><text x="98.4379%" y="302.50"></text></g><g><title>_reconstruct (copy.py:270) (24 samples, 0.44%)</title><rect x="98.0769%" y="260" width="0.4438%" height="15" fill="rgb(244,185,38)" fg:x="5304" fg:w="24"/><text x="98.3269%" y="270.50"></text></g><g><title>deepcopy (copy.py:172) (34 samples, 0.63%)</title><rect x="97.9660%" y="244" width="0.6287%" height="15" fill="rgb(236,202,9)" fg:x="5298" fg:w="34"/><text x="98.2160%" y="254.50"></text></g><g><title>deepcopy (copy.py:146) (63 samples, 1.16%)</title><rect x="97.4482%" y="180" width="1.1649%" height="15" fill="rgb(250,229,37)" fg:x="5270" fg:w="63"/><text x="97.6982%" y="190.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (59 samples, 1.09%)</title><rect x="97.5222%" y="196" width="1.0910%" height="15" fill="rgb(206,174,23)" fg:x="5274" fg:w="59"/><text x="97.7722%" y="206.50"></text></g><g><title>deepcopy (copy.py:146) (44 samples, 0.81%)</title><rect x="97.7996%" y="212" width="0.8136%" height="15" fill="rgb(211,33,43)" fg:x="5289" fg:w="44"/><text x="98.0496%" y="222.50"></text></g><g><title>_deepcopy_list (copy.py:205) (40 samples, 0.74%)</title><rect x="97.8735%" y="228" width="0.7396%" height="15" fill="rgb(245,58,50)" fg:x="5293" fg:w="40"/><text x="98.1235%" y="238.50"></text></g><g><title>deepcopy (copy.py:172) (71 samples, 1.31%)</title><rect x="97.3373%" y="148" width="1.3129%" height="15" fill="rgb(244,68,36)" fg:x="5264" fg:w="71"/><text x="97.5873%" y="158.50"></text></g><g><title>_reconstruct (copy.py:270) (65 samples, 1.20%)</title><rect x="97.4482%" y="164" width="1.2019%" height="15" fill="rgb(232,229,15)" fg:x="5270" fg:w="65"/><text x="97.6982%" y="174.50"></text></g><g><title>accept_solution (real_diff_SA_PPO.py:1049) (1,763 samples, 32.60%)</title><rect x="66.0688%" y="116" width="32.5999%" height="15" fill="rgb(254,30,23)" fg:x="3573" fg:w="1763"/><text x="66.3188%" y="126.50">accept_solution (real_diff_SA_PPO.py:1049)</text></g><g><title>update_best_solution (real_diff_evaluation.py:891) (77 samples, 1.42%)</title><rect x="97.2448%" y="132" width="1.4238%" height="15" fill="rgb(235,160,14)" fg:x="5259" fg:w="77"/><text x="97.4948%" y="142.50"></text></g><g><title>run (real_diff_SA_PPO.py:1075) (1,800 samples, 33.28%)</title><rect x="65.6065%" y="100" width="33.2840%" height="15" fill="rgb(212,155,44)" fg:x="3548" fg:w="1800"/><text x="65.8565%" y="110.50">run (real_diff_SA_PPO.py:1075)</text></g><g><title>get_my_solution (real_diff_SA_PPO.py:1120) (5,347 samples, 98.87%)</title><rect x="0.0555%" y="84" width="98.8720%" height="15" fill="rgb(226,2,50)" fg:x="3" fg:w="5347"/><text x="0.3055%" y="94.50">get_my_solution (real_diff_SA_PPO.py:1120)</text></g><g><title>dump (json/__init__.py:179) (10 samples, 0.18%)</title><rect x="98.9645%" y="116" width="0.1849%" height="15" fill="rgb(234,177,6)" fg:x="5352" fg:w="10"/><text x="99.2145%" y="126.50"></text></g><g><title>_iterencode (json/encoder.py:431) (10 samples, 0.18%)</title><rect x="98.9645%" y="132" width="0.1849%" height="15" fill="rgb(217,24,9)" fg:x="5352" fg:w="10"/><text x="99.2145%" y="142.50"></text></g><g><title>_iterencode_dict (json/encoder.py:405) (9 samples, 0.17%)</title><rect x="98.9830%" y="148" width="0.1664%" height="15" fill="rgb(220,13,46)" fg:x="5353" fg:w="9"/><text x="99.2330%" y="158.50"></text></g><g><title>_iterencode_list (json/encoder.py:325) (9 samples, 0.17%)</title><rect x="98.9830%" y="164" width="0.1664%" height="15" fill="rgb(239,221,27)" fg:x="5353" fg:w="9"/><text x="99.2330%" y="174.50"></text></g><g><title>&lt;module&gt; (real_diff_SA_PPO.py:1128) (5,367 samples, 99.24%)</title><rect x="0.0000%" y="68" width="99.2419%" height="15" fill="rgb(222,198,25)" fg:x="0" fg:w="5367"/><text x="0.2500%" y="78.50">&lt;module&gt; (real_diff_SA_PPO.py:1128)</text></g><g><title>get_my_solution (real_diff_SA_PPO.py:1122) (17 samples, 0.31%)</title><rect x="98.9275%" y="84" width="0.3143%" height="15" fill="rgb(211,99,13)" fg:x="5350" fg:w="17"/><text x="99.1775%" y="94.50"></text></g><g><title>export_solution_to_json (real_diff_evaluation.py:863) (15 samples, 0.28%)</title><rect x="98.9645%" y="100" width="0.2774%" height="15" fill="rgb(232,111,31)" fg:x="5352" fg:w="15"/><text x="99.2145%" y="110.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_stats_py.py:37) (7 samples, 0.13%)</title><rect x="99.2788%" y="452" width="0.1294%" height="15" fill="rgb(245,82,37)" fg:x="5369" fg:w="7"/><text x="99.5288%" y="462.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1055) (7 samples, 0.13%)</title><rect x="99.2788%" y="468" width="0.1294%" height="15" fill="rgb(227,149,46)" fg:x="5369" fg:w="7"/><text x="99.5288%" y="478.50"></text></g><g><title>__getattr__ (scipy/__init__.py:134) (7 samples, 0.13%)</title><rect x="99.2788%" y="484" width="0.1294%" height="15" fill="rgb(218,36,50)" fg:x="5369" fg:w="7"/><text x="99.5288%" y="494.50"></text></g><g><title>import_module (importlib/__init__.py:127) (7 samples, 0.13%)</title><rect x="99.2788%" y="500" width="0.1294%" height="15" fill="rgb(226,80,48)" fg:x="5369" fg:w="7"/><text x="99.5288%" y="510.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1030) (7 samples, 0.13%)</title><rect x="99.2788%" y="516" width="0.1294%" height="15" fill="rgb(238,224,15)" fg:x="5369" fg:w="7"/><text x="99.5288%" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.13%)</title><rect x="99.2788%" y="532" width="0.1294%" height="15" fill="rgb(241,136,10)" fg:x="5369" fg:w="7"/><text x="99.5288%" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.13%)</title><rect x="99.2788%" y="548" width="0.1294%" height="15" fill="rgb(208,32,45)" fg:x="5369" fg:w="7"/><text x="99.5288%" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.13%)</title><rect x="99.2788%" y="564" width="0.1294%" height="15" fill="rgb(207,135,9)" fg:x="5369" fg:w="7"/><text x="99.5288%" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (7 samples, 0.13%)</title><rect x="99.2788%" y="580" width="0.1294%" height="15" fill="rgb(206,86,44)" fg:x="5369" fg:w="7"/><text x="99.5288%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.13%)</title><rect x="99.2788%" y="596" width="0.1294%" height="15" fill="rgb(245,177,15)" fg:x="5369" fg:w="7"/><text x="99.5288%" y="606.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_stats_py.py:49) (6 samples, 0.11%)</title><rect x="99.5007%" y="452" width="0.1109%" height="15" fill="rgb(206,64,50)" fg:x="5381" fg:w="6"/><text x="99.7507%" y="462.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (6 samples, 0.11%)</title><rect x="99.5007%" y="468" width="0.1109%" height="15" fill="rgb(234,36,40)" fg:x="5381" fg:w="6"/><text x="99.7507%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (6 samples, 0.11%)</title><rect x="99.5007%" y="484" width="0.1109%" height="15" fill="rgb(213,64,8)" fg:x="5381" fg:w="6"/><text x="99.7507%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (6 samples, 0.11%)</title><rect x="99.5007%" y="500" width="0.1109%" height="15" fill="rgb(210,75,36)" fg:x="5381" fg:w="6"/><text x="99.7507%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (6 samples, 0.11%)</title><rect x="99.5007%" y="516" width="0.1109%" height="15" fill="rgb(229,88,21)" fg:x="5381" fg:w="6"/><text x="99.7507%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (6 samples, 0.11%)</title><rect x="99.5007%" y="532" width="0.1109%" height="15" fill="rgb(252,204,47)" fg:x="5381" fg:w="6"/><text x="99.7507%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (6 samples, 0.11%)</title><rect x="99.5007%" y="548" width="0.1109%" height="15" fill="rgb(208,77,27)" fg:x="5381" fg:w="6"/><text x="99.7507%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (6 samples, 0.11%)</title><rect x="99.5007%" y="564" width="0.1109%" height="15" fill="rgb(221,76,26)" fg:x="5381" fg:w="6"/><text x="99.7507%" y="574.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:606) (19 samples, 0.35%)</title><rect x="99.2788%" y="356" width="0.3513%" height="15" fill="rgb(225,139,18)" fg:x="5369" fg:w="19"/><text x="99.5288%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (19 samples, 0.35%)</title><rect x="99.2788%" y="372" width="0.3513%" height="15" fill="rgb(230,137,11)" fg:x="5369" fg:w="19"/><text x="99.5288%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (19 samples, 0.35%)</title><rect x="99.2788%" y="388" width="0.3513%" height="15" fill="rgb(212,28,1)" fg:x="5369" fg:w="19"/><text x="99.5288%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (19 samples, 0.35%)</title><rect x="99.2788%" y="404" width="0.3513%" height="15" fill="rgb(248,164,17)" fg:x="5369" fg:w="19"/><text x="99.5288%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (19 samples, 0.35%)</title><rect x="99.2788%" y="420" width="0.3513%" height="15" fill="rgb(222,171,42)" fg:x="5369" fg:w="19"/><text x="99.5288%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (19 samples, 0.35%)</title><rect x="99.2788%" y="436" width="0.3513%" height="15" fill="rgb(243,84,45)" fg:x="5369" fg:w="19"/><text x="99.5288%" y="446.50"></text></g><g><title>&lt;module&gt; (real_diff_SA_PPO.py:15) (21 samples, 0.39%)</title><rect x="99.2788%" y="68" width="0.3883%" height="15" fill="rgb(252,49,23)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (21 samples, 0.39%)</title><rect x="99.2788%" y="84" width="0.3883%" height="15" fill="rgb(215,19,7)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (21 samples, 0.39%)</title><rect x="99.2788%" y="100" width="0.3883%" height="15" fill="rgb(238,81,41)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (21 samples, 0.39%)</title><rect x="99.2788%" y="116" width="0.3883%" height="15" fill="rgb(210,199,37)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (21 samples, 0.39%)</title><rect x="99.2788%" y="132" width="0.3883%" height="15" fill="rgb(244,192,49)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (21 samples, 0.39%)</title><rect x="99.2788%" y="148" width="0.3883%" height="15" fill="rgb(226,211,11)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="158.50"></text></g><g><title>&lt;module&gt; (real_diff_evaluation.py:7) (21 samples, 0.39%)</title><rect x="99.2788%" y="164" width="0.3883%" height="15" fill="rgb(236,162,54)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (21 samples, 0.39%)</title><rect x="99.2788%" y="180" width="0.3883%" height="15" fill="rgb(220,229,9)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (21 samples, 0.39%)</title><rect x="99.2788%" y="196" width="0.3883%" height="15" fill="rgb(250,87,22)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (21 samples, 0.39%)</title><rect x="99.2788%" y="212" width="0.3883%" height="15" fill="rgb(239,43,17)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (21 samples, 0.39%)</title><rect x="99.2788%" y="228" width="0.3883%" height="15" fill="rgb(231,177,25)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (21 samples, 0.39%)</title><rect x="99.2788%" y="244" width="0.3883%" height="15" fill="rgb(219,179,1)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="254.50"></text></g><g><title>&lt;module&gt; (evaluation.py:6) (21 samples, 0.39%)</title><rect x="99.2788%" y="260" width="0.3883%" height="15" fill="rgb(238,219,53)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (21 samples, 0.39%)</title><rect x="99.2788%" y="276" width="0.3883%" height="15" fill="rgb(232,167,36)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (21 samples, 0.39%)</title><rect x="99.2788%" y="292" width="0.3883%" height="15" fill="rgb(244,19,51)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (21 samples, 0.39%)</title><rect x="99.2788%" y="308" width="0.3883%" height="15" fill="rgb(224,6,22)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (21 samples, 0.39%)</title><rect x="99.2788%" y="324" width="0.3883%" height="15" fill="rgb(224,145,5)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (21 samples, 0.39%)</title><rect x="99.2788%" y="340" width="0.3883%" height="15" fill="rgb(234,130,49)" fg:x="5369" fg:w="21"/><text x="99.5288%" y="350.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:28) (6 samples, 0.11%)</title><rect x="99.8336%" y="260" width="0.1109%" height="15" fill="rgb(254,6,2)" fg:x="5399" fg:w="6"/><text x="100.0836%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (6 samples, 0.11%)</title><rect x="99.8336%" y="276" width="0.1109%" height="15" fill="rgb(208,96,46)" fg:x="5399" fg:w="6"/><text x="100.0836%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (6 samples, 0.11%)</title><rect x="99.8336%" y="292" width="0.1109%" height="15" fill="rgb(239,3,39)" fg:x="5399" fg:w="6"/><text x="100.0836%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (6 samples, 0.11%)</title><rect x="99.8336%" y="308" width="0.1109%" height="15" fill="rgb(233,210,1)" fg:x="5399" fg:w="6"/><text x="100.0836%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (6 samples, 0.11%)</title><rect x="99.8336%" y="324" width="0.1109%" height="15" fill="rgb(244,137,37)" fg:x="5399" fg:w="6"/><text x="100.0836%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (6 samples, 0.11%)</title><rect x="99.8336%" y="340" width="0.1109%" height="15" fill="rgb(240,136,2)" fg:x="5399" fg:w="6"/><text x="100.0836%" y="350.50"></text></g><g><title>all (5,408 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(239,18,37)" fg:x="0" fg:w="5408"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (real_diff_SA_PPO.py:9) (13 samples, 0.24%)</title><rect x="99.7596%" y="68" width="0.2404%" height="15" fill="rgb(218,185,22)" fg:x="5395" fg:w="13"/><text x="100.0096%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (13 samples, 0.24%)</title><rect x="99.7596%" y="84" width="0.2404%" height="15" fill="rgb(225,218,4)" fg:x="5395" fg:w="13"/><text x="100.0096%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (13 samples, 0.24%)</title><rect x="99.7596%" y="100" width="0.2404%" height="15" fill="rgb(230,182,32)" fg:x="5395" fg:w="13"/><text x="100.0096%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (13 samples, 0.24%)</title><rect x="99.7596%" y="116" width="0.2404%" height="15" fill="rgb(242,56,43)" fg:x="5395" fg:w="13"/><text x="100.0096%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (13 samples, 0.24%)</title><rect x="99.7596%" y="132" width="0.2404%" height="15" fill="rgb(233,99,24)" fg:x="5395" fg:w="13"/><text x="100.0096%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (13 samples, 0.24%)</title><rect x="99.7596%" y="148" width="0.2404%" height="15" fill="rgb(234,209,42)" fg:x="5395" fg:w="13"/><text x="100.0096%" y="158.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:49) (13 samples, 0.24%)</title><rect x="99.7596%" y="164" width="0.2404%" height="15" fill="rgb(227,7,12)" fg:x="5395" fg:w="13"/><text x="100.0096%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (13 samples, 0.24%)</title><rect x="99.7596%" y="180" width="0.2404%" height="15" fill="rgb(245,203,43)" fg:x="5395" fg:w="13"/><text x="100.0096%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (13 samples, 0.24%)</title><rect x="99.7596%" y="196" width="0.2404%" height="15" fill="rgb(238,205,33)" fg:x="5395" fg:w="13"/><text x="100.0096%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (13 samples, 0.24%)</title><rect x="99.7596%" y="212" width="0.2404%" height="15" fill="rgb(231,56,7)" fg:x="5395" fg:w="13"/><text x="100.0096%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (13 samples, 0.24%)</title><rect x="99.7596%" y="228" width="0.2404%" height="15" fill="rgb(244,186,29)" fg:x="5395" fg:w="13"/><text x="100.0096%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (13 samples, 0.24%)</title><rect x="99.7596%" y="244" width="0.2404%" height="15" fill="rgb(234,111,31)" fg:x="5395" fg:w="13"/><text x="100.0096%" y="254.50"></text></g></svg></svg>