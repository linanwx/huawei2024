<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="874" onload="init(evt)" viewBox="0 0 1200 874" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="874" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python real_diff_SA.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="863.00"> </text><svg id="frames" x="10" width="1180" total_samples="1985"><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:666) (3 samples, 0.15%)</title><rect x="0.1008%" y="788" width="0.1511%" height="15" fill="rgb(227,0,7)" fg:x="2" fg:w="3"/><text x="0.3508%" y="798.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:565) (3 samples, 0.15%)</title><rect x="0.1008%" y="804" width="0.1511%" height="15" fill="rgb(217,0,24)" fg:x="2" fg:w="3"/><text x="0.3508%" y="814.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1173) (3 samples, 0.15%)</title><rect x="0.1008%" y="820" width="0.1511%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="3"/><text x="0.3508%" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.15%)</title><rect x="0.1008%" y="836" width="0.1511%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="3"/><text x="0.3508%" y="846.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csgraph/__init__.py:186) (4 samples, 0.20%)</title><rect x="0.1008%" y="740" width="0.2015%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="4"/><text x="0.3508%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (4 samples, 0.20%)</title><rect x="0.1008%" y="756" width="0.2015%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="4"/><text x="0.3508%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (4 samples, 0.20%)</title><rect x="0.1008%" y="772" width="0.2015%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="4"/><text x="0.3508%" y="782.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_stats_py.py:37) (7 samples, 0.35%)</title><rect x="0.0504%" y="452" width="0.3526%" height="15" fill="rgb(228,23,34)" fg:x="1" fg:w="7"/><text x="0.3004%" y="462.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1055) (7 samples, 0.35%)</title><rect x="0.0504%" y="468" width="0.3526%" height="15" fill="rgb(218,30,26)" fg:x="1" fg:w="7"/><text x="0.3004%" y="478.50"></text></g><g><title>__getattr__ (scipy/__init__.py:134) (7 samples, 0.35%)</title><rect x="0.0504%" y="484" width="0.3526%" height="15" fill="rgb(220,122,19)" fg:x="1" fg:w="7"/><text x="0.3004%" y="494.50"></text></g><g><title>import_module (importlib/__init__.py:127) (7 samples, 0.35%)</title><rect x="0.0504%" y="500" width="0.3526%" height="15" fill="rgb(250,228,42)" fg:x="1" fg:w="7"/><text x="0.3004%" y="510.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1030) (7 samples, 0.35%)</title><rect x="0.0504%" y="516" width="0.3526%" height="15" fill="rgb(240,193,28)" fg:x="1" fg:w="7"/><text x="0.3004%" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.35%)</title><rect x="0.0504%" y="532" width="0.3526%" height="15" fill="rgb(216,20,37)" fg:x="1" fg:w="7"/><text x="0.3004%" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.35%)</title><rect x="0.0504%" y="548" width="0.3526%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="7"/><text x="0.3004%" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.35%)</title><rect x="0.0504%" y="564" width="0.3526%" height="15" fill="rgb(217,207,13)" fg:x="1" fg:w="7"/><text x="0.3004%" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (7 samples, 0.35%)</title><rect x="0.0504%" y="580" width="0.3526%" height="15" fill="rgb(231,73,38)" fg:x="1" fg:w="7"/><text x="0.3004%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.35%)</title><rect x="0.0504%" y="596" width="0.3526%" height="15" fill="rgb(225,20,46)" fg:x="1" fg:w="7"/><text x="0.3004%" y="606.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py:308) (6 samples, 0.30%)</title><rect x="0.1008%" y="612" width="0.3023%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="6"/><text x="0.3508%" y="622.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (6 samples, 0.30%)</title><rect x="0.1008%" y="628" width="0.3023%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="6"/><text x="0.3508%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (6 samples, 0.30%)</title><rect x="0.1008%" y="644" width="0.3023%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="6"/><text x="0.3508%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (6 samples, 0.30%)</title><rect x="0.1008%" y="660" width="0.3023%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="6"/><text x="0.3508%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (6 samples, 0.30%)</title><rect x="0.1008%" y="676" width="0.3023%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="6"/><text x="0.3508%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (6 samples, 0.30%)</title><rect x="0.1008%" y="692" width="0.3023%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="6"/><text x="0.3508%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (6 samples, 0.30%)</title><rect x="0.1008%" y="708" width="0.3023%" height="15" fill="rgb(247,18,42)" fg:x="2" fg:w="6"/><text x="0.3508%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (6 samples, 0.30%)</title><rect x="0.1008%" y="724" width="0.3023%" height="15" fill="rgb(241,131,45)" fg:x="2" fg:w="6"/><text x="0.3508%" y="734.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csgraph/__init__.py:199) (2 samples, 0.10%)</title><rect x="0.3023%" y="740" width="0.1008%" height="15" fill="rgb(249,31,29)" fg:x="6" fg:w="2"/><text x="0.5523%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (2 samples, 0.10%)</title><rect x="0.3023%" y="756" width="0.1008%" height="15" fill="rgb(225,111,53)" fg:x="6" fg:w="2"/><text x="0.5523%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (2 samples, 0.10%)</title><rect x="0.3023%" y="772" width="0.1008%" height="15" fill="rgb(238,160,17)" fg:x="6" fg:w="2"/><text x="0.5523%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:666) (2 samples, 0.10%)</title><rect x="0.3023%" y="788" width="0.1008%" height="15" fill="rgb(214,148,48)" fg:x="6" fg:w="2"/><text x="0.5523%" y="798.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:565) (2 samples, 0.10%)</title><rect x="0.3023%" y="804" width="0.1008%" height="15" fill="rgb(232,36,49)" fg:x="6" fg:w="2"/><text x="0.5523%" y="814.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1173) (2 samples, 0.10%)</title><rect x="0.3023%" y="820" width="0.1008%" height="15" fill="rgb(209,103,24)" fg:x="6" fg:w="2"/><text x="0.5523%" y="830.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (2 samples, 0.10%)</title><rect x="0.3023%" y="836" width="0.1008%" height="15" fill="rgb(229,88,8)" fg:x="6" fg:w="2"/><text x="0.5523%" y="846.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/__init__.py:113) (2 samples, 0.10%)</title><rect x="0.4030%" y="596" width="0.1008%" height="15" fill="rgb(213,181,19)" fg:x="8" fg:w="2"/><text x="0.6530%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (2 samples, 0.10%)</title><rect x="0.4030%" y="612" width="0.1008%" height="15" fill="rgb(254,191,54)" fg:x="8" fg:w="2"/><text x="0.6530%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (2 samples, 0.10%)</title><rect x="0.4030%" y="628" width="0.1008%" height="15" fill="rgb(241,83,37)" fg:x="8" fg:w="2"/><text x="0.6530%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (2 samples, 0.10%)</title><rect x="0.4030%" y="644" width="0.1008%" height="15" fill="rgb(233,36,39)" fg:x="8" fg:w="2"/><text x="0.6530%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (2 samples, 0.10%)</title><rect x="0.4030%" y="660" width="0.1008%" height="15" fill="rgb(226,3,54)" fg:x="8" fg:w="2"/><text x="0.6530%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (2 samples, 0.10%)</title><rect x="0.4030%" y="676" width="0.1008%" height="15" fill="rgb(245,192,40)" fg:x="8" fg:w="2"/><text x="0.6530%" y="686.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/_spherical_voronoi.py:16) (2 samples, 0.10%)</title><rect x="0.4030%" y="692" width="0.1008%" height="15" fill="rgb(238,167,29)" fg:x="8" fg:w="2"/><text x="0.6530%" y="702.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (2 samples, 0.10%)</title><rect x="0.4030%" y="708" width="0.1008%" height="15" fill="rgb(232,182,51)" fg:x="8" fg:w="2"/><text x="0.6530%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (2 samples, 0.10%)</title><rect x="0.4030%" y="724" width="0.1008%" height="15" fill="rgb(231,60,39)" fg:x="8" fg:w="2"/><text x="0.6530%" y="734.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (2 samples, 0.10%)</title><rect x="0.4030%" y="740" width="0.1008%" height="15" fill="rgb(208,69,12)" fg:x="8" fg:w="2"/><text x="0.6530%" y="750.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (2 samples, 0.10%)</title><rect x="0.4030%" y="756" width="0.1008%" height="15" fill="rgb(235,93,37)" fg:x="8" fg:w="2"/><text x="0.6530%" y="766.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:666) (2 samples, 0.10%)</title><rect x="0.4030%" y="772" width="0.1008%" height="15" fill="rgb(213,116,39)" fg:x="8" fg:w="2"/><text x="0.6530%" y="782.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:565) (2 samples, 0.10%)</title><rect x="0.4030%" y="788" width="0.1008%" height="15" fill="rgb(222,207,29)" fg:x="8" fg:w="2"/><text x="0.6530%" y="798.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1173) (2 samples, 0.10%)</title><rect x="0.4030%" y="804" width="0.1008%" height="15" fill="rgb(206,96,30)" fg:x="8" fg:w="2"/><text x="0.6530%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (2 samples, 0.10%)</title><rect x="0.4030%" y="820" width="0.1008%" height="15" fill="rgb(218,138,4)" fg:x="8" fg:w="2"/><text x="0.6530%" y="830.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_stats_py.py:38) (3 samples, 0.15%)</title><rect x="0.4030%" y="452" width="0.1511%" height="15" fill="rgb(250,191,14)" fg:x="8" fg:w="3"/><text x="0.6530%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (3 samples, 0.15%)</title><rect x="0.4030%" y="468" width="0.1511%" height="15" fill="rgb(239,60,40)" fg:x="8" fg:w="3"/><text x="0.6530%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:972) (3 samples, 0.15%)</title><rect x="0.4030%" y="484" width="0.1511%" height="15" fill="rgb(206,27,48)" fg:x="8" fg:w="3"/><text x="0.6530%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.15%)</title><rect x="0.4030%" y="500" width="0.1511%" height="15" fill="rgb(225,35,8)" fg:x="8" fg:w="3"/><text x="0.6530%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (3 samples, 0.15%)</title><rect x="0.4030%" y="516" width="0.1511%" height="15" fill="rgb(250,213,24)" fg:x="8" fg:w="3"/><text x="0.6530%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (3 samples, 0.15%)</title><rect x="0.4030%" y="532" width="0.1511%" height="15" fill="rgb(247,123,22)" fg:x="8" fg:w="3"/><text x="0.6530%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (3 samples, 0.15%)</title><rect x="0.4030%" y="548" width="0.1511%" height="15" fill="rgb(231,138,38)" fg:x="8" fg:w="3"/><text x="0.6530%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (3 samples, 0.15%)</title><rect x="0.4030%" y="564" width="0.1511%" height="15" fill="rgb(231,145,46)" fg:x="8" fg:w="3"/><text x="0.6530%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.15%)</title><rect x="0.4030%" y="580" width="0.1511%" height="15" fill="rgb(251,118,11)" fg:x="8" fg:w="3"/><text x="0.6530%" y="590.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_stats_py.py:42) (3 samples, 0.15%)</title><rect x="0.5542%" y="452" width="0.1511%" height="15" fill="rgb(217,147,25)" fg:x="11" fg:w="3"/><text x="0.8042%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (3 samples, 0.15%)</title><rect x="0.5542%" y="468" width="0.1511%" height="15" fill="rgb(247,81,37)" fg:x="11" fg:w="3"/><text x="0.8042%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (3 samples, 0.15%)</title><rect x="0.5542%" y="484" width="0.1511%" height="15" fill="rgb(209,12,38)" fg:x="11" fg:w="3"/><text x="0.8042%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (3 samples, 0.15%)</title><rect x="0.5542%" y="500" width="0.1511%" height="15" fill="rgb(227,1,9)" fg:x="11" fg:w="3"/><text x="0.8042%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (3 samples, 0.15%)</title><rect x="0.5542%" y="516" width="0.1511%" height="15" fill="rgb(248,47,43)" fg:x="11" fg:w="3"/><text x="0.8042%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.15%)</title><rect x="0.5542%" y="532" width="0.1511%" height="15" fill="rgb(221,10,30)" fg:x="11" fg:w="3"/><text x="0.8042%" y="542.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:2383) (2 samples, 0.10%)</title><rect x="0.7557%" y="708" width="0.1008%" height="15" fill="rgb(210,229,1)" fg:x="15" fg:w="2"/><text x="1.0057%" y="718.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:1806) (2 samples, 0.10%)</title><rect x="0.7557%" y="724" width="0.1008%" height="15" fill="rgb(222,148,37)" fg:x="15" fg:w="2"/><text x="1.0057%" y="734.50"></text></g><g><title>__init__ (scipy/stats/_distn_infrastructure.py:639) (2 samples, 0.10%)</title><rect x="0.7557%" y="740" width="0.1008%" height="15" fill="rgb(234,67,33)" fg:x="15" fg:w="2"/><text x="1.0057%" y="750.50"></text></g><g><title>getfullargspec_no_self (scipy/_lib/_util.py:398) (2 samples, 0.10%)</title><rect x="0.7557%" y="756" width="0.1008%" height="15" fill="rgb(247,98,35)" fg:x="15" fg:w="2"/><text x="1.0057%" y="766.50"></text></g><g><title>signature (inspect.py:3113) (2 samples, 0.10%)</title><rect x="0.7557%" y="772" width="0.1008%" height="15" fill="rgb(247,138,52)" fg:x="15" fg:w="2"/><text x="1.0057%" y="782.50"></text></g><g><title>from_callable (inspect.py:2862) (2 samples, 0.10%)</title><rect x="0.7557%" y="788" width="0.1008%" height="15" fill="rgb(213,79,30)" fg:x="15" fg:w="2"/><text x="1.0057%" y="798.50"></text></g><g><title>_signature_from_callable (inspect.py:2266) (2 samples, 0.10%)</title><rect x="0.7557%" y="804" width="0.1008%" height="15" fill="rgb(246,177,23)" fg:x="15" fg:w="2"/><text x="1.0057%" y="814.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (5 samples, 0.25%)</title><rect x="0.7053%" y="580" width="0.2519%" height="15" fill="rgb(230,62,27)" fg:x="14" fg:w="5"/><text x="0.9553%" y="590.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (5 samples, 0.25%)</title><rect x="0.7053%" y="596" width="0.2519%" height="15" fill="rgb(216,154,8)" fg:x="14" fg:w="5"/><text x="0.9553%" y="606.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.25%)</title><rect x="0.7053%" y="612" width="0.2519%" height="15" fill="rgb(244,35,45)" fg:x="14" fg:w="5"/><text x="0.9553%" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (5 samples, 0.25%)</title><rect x="0.7053%" y="628" width="0.2519%" height="15" fill="rgb(251,115,12)" fg:x="14" fg:w="5"/><text x="0.9553%" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (5 samples, 0.25%)</title><rect x="0.7053%" y="644" width="0.2519%" height="15" fill="rgb(240,54,50)" fg:x="14" fg:w="5"/><text x="0.9553%" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (5 samples, 0.25%)</title><rect x="0.7053%" y="660" width="0.2519%" height="15" fill="rgb(233,84,52)" fg:x="14" fg:w="5"/><text x="0.9553%" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (5 samples, 0.25%)</title><rect x="0.7053%" y="676" width="0.2519%" height="15" fill="rgb(207,117,47)" fg:x="14" fg:w="5"/><text x="0.9553%" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.25%)</title><rect x="0.7053%" y="692" width="0.2519%" height="15" fill="rgb(249,43,39)" fg:x="14" fg:w="5"/><text x="0.9553%" y="702.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_stats_py.py:49) (7 samples, 0.35%)</title><rect x="0.7053%" y="452" width="0.3526%" height="15" fill="rgb(209,38,44)" fg:x="14" fg:w="7"/><text x="0.9553%" y="462.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (7 samples, 0.35%)</title><rect x="0.7053%" y="468" width="0.3526%" height="15" fill="rgb(236,212,23)" fg:x="14" fg:w="7"/><text x="0.9553%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.35%)</title><rect x="0.7053%" y="484" width="0.3526%" height="15" fill="rgb(242,79,21)" fg:x="14" fg:w="7"/><text x="0.9553%" y="494.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.35%)</title><rect x="0.7053%" y="500" width="0.3526%" height="15" fill="rgb(211,96,35)" fg:x="14" fg:w="7"/><text x="0.9553%" y="510.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.35%)</title><rect x="0.7053%" y="516" width="0.3526%" height="15" fill="rgb(253,215,40)" fg:x="14" fg:w="7"/><text x="0.9553%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.35%)</title><rect x="0.7053%" y="532" width="0.3526%" height="15" fill="rgb(211,81,21)" fg:x="14" fg:w="7"/><text x="0.9553%" y="542.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (7 samples, 0.35%)</title><rect x="0.7053%" y="548" width="0.3526%" height="15" fill="rgb(208,190,38)" fg:x="14" fg:w="7"/><text x="0.9553%" y="558.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.35%)</title><rect x="0.7053%" y="564" width="0.3526%" height="15" fill="rgb(235,213,38)" fg:x="14" fg:w="7"/><text x="0.9553%" y="574.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:606) (24 samples, 1.21%)</title><rect x="0.0504%" y="356" width="1.2091%" height="15" fill="rgb(237,122,38)" fg:x="1" fg:w="24"/><text x="0.3004%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (24 samples, 1.21%)</title><rect x="0.0504%" y="372" width="1.2091%" height="15" fill="rgb(244,218,35)" fg:x="1" fg:w="24"/><text x="0.3004%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (24 samples, 1.21%)</title><rect x="0.0504%" y="388" width="1.2091%" height="15" fill="rgb(240,68,47)" fg:x="1" fg:w="24"/><text x="0.3004%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (24 samples, 1.21%)</title><rect x="0.0504%" y="404" width="1.2091%" height="15" fill="rgb(210,16,53)" fg:x="1" fg:w="24"/><text x="0.3004%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (24 samples, 1.21%)</title><rect x="0.0504%" y="420" width="1.2091%" height="15" fill="rgb(235,124,12)" fg:x="1" fg:w="24"/><text x="0.3004%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (24 samples, 1.21%)</title><rect x="0.0504%" y="436" width="1.2091%" height="15" fill="rgb(224,169,11)" fg:x="1" fg:w="24"/><text x="0.3004%" y="446.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_stats_py.py:56) (4 samples, 0.20%)</title><rect x="1.0579%" y="452" width="0.2015%" height="15" fill="rgb(250,166,2)" fg:x="21" fg:w="4"/><text x="1.3079%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (4 samples, 0.20%)</title><rect x="1.0579%" y="468" width="0.2015%" height="15" fill="rgb(242,216,29)" fg:x="21" fg:w="4"/><text x="1.3079%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (4 samples, 0.20%)</title><rect x="1.0579%" y="484" width="0.2015%" height="15" fill="rgb(230,116,27)" fg:x="21" fg:w="4"/><text x="1.3079%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (4 samples, 0.20%)</title><rect x="1.0579%" y="500" width="0.2015%" height="15" fill="rgb(228,99,48)" fg:x="21" fg:w="4"/><text x="1.3079%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (4 samples, 0.20%)</title><rect x="1.0579%" y="516" width="0.2015%" height="15" fill="rgb(253,11,6)" fg:x="21" fg:w="4"/><text x="1.3079%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (4 samples, 0.20%)</title><rect x="1.0579%" y="532" width="0.2015%" height="15" fill="rgb(247,143,39)" fg:x="21" fg:w="4"/><text x="1.3079%" y="542.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_hypotests.py:702) (4 samples, 0.20%)</title><rect x="1.0579%" y="548" width="0.2015%" height="15" fill="rgb(236,97,10)" fg:x="21" fg:w="4"/><text x="1.3079%" y="558.50"></text></g><g><title>dataclass (dataclasses.py:1021) (4 samples, 0.20%)</title><rect x="1.0579%" y="564" width="0.2015%" height="15" fill="rgb(233,208,19)" fg:x="21" fg:w="4"/><text x="1.3079%" y="574.50"></text></g><g><title>wrap (dataclasses.py:1013) (4 samples, 0.20%)</title><rect x="1.0579%" y="580" width="0.2015%" height="15" fill="rgb(216,164,2)" fg:x="21" fg:w="4"/><text x="1.3079%" y="590.50"></text></g><g><title>_process_class (dataclasses.py:944) (4 samples, 0.20%)</title><rect x="1.0579%" y="596" width="0.2015%" height="15" fill="rgb(220,129,5)" fg:x="21" fg:w="4"/><text x="1.3079%" y="606.50"></text></g><g><title>_repr_fn (dataclasses.py:540) (4 samples, 0.20%)</title><rect x="1.0579%" y="612" width="0.2015%" height="15" fill="rgb(242,17,10)" fg:x="21" fg:w="4"/><text x="1.3079%" y="622.50"></text></g><g><title>_create_fn (dataclasses.py:400) (4 samples, 0.20%)</title><rect x="1.0579%" y="628" width="0.2015%" height="15" fill="rgb(242,107,0)" fg:x="21" fg:w="4"/><text x="1.3079%" y="638.50"></text></g><g><title>&lt;module&gt; (real_diff_SA.py:14) (27 samples, 1.36%)</title><rect x="0.0000%" y="68" width="1.3602%" height="15" fill="rgb(251,28,31)" fg:x="0" fg:w="27"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (27 samples, 1.36%)</title><rect x="0.0000%" y="84" width="1.3602%" height="15" fill="rgb(233,223,10)" fg:x="0" fg:w="27"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (27 samples, 1.36%)</title><rect x="0.0000%" y="100" width="1.3602%" height="15" fill="rgb(215,21,27)" fg:x="0" fg:w="27"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (27 samples, 1.36%)</title><rect x="0.0000%" y="116" width="1.3602%" height="15" fill="rgb(232,23,21)" fg:x="0" fg:w="27"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (27 samples, 1.36%)</title><rect x="0.0000%" y="132" width="1.3602%" height="15" fill="rgb(244,5,23)" fg:x="0" fg:w="27"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (27 samples, 1.36%)</title><rect x="0.0000%" y="148" width="1.3602%" height="15" fill="rgb(226,81,46)" fg:x="0" fg:w="27"/><text x="0.2500%" y="158.50"></text></g><g><title>&lt;module&gt; (real_diff_evaluation.py:7) (26 samples, 1.31%)</title><rect x="0.0504%" y="164" width="1.3098%" height="15" fill="rgb(247,70,30)" fg:x="1" fg:w="26"/><text x="0.3004%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (26 samples, 1.31%)</title><rect x="0.0504%" y="180" width="1.3098%" height="15" fill="rgb(212,68,19)" fg:x="1" fg:w="26"/><text x="0.3004%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (26 samples, 1.31%)</title><rect x="0.0504%" y="196" width="1.3098%" height="15" fill="rgb(240,187,13)" fg:x="1" fg:w="26"/><text x="0.3004%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (26 samples, 1.31%)</title><rect x="0.0504%" y="212" width="1.3098%" height="15" fill="rgb(223,113,26)" fg:x="1" fg:w="26"/><text x="0.3004%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (26 samples, 1.31%)</title><rect x="0.0504%" y="228" width="1.3098%" height="15" fill="rgb(206,192,2)" fg:x="1" fg:w="26"/><text x="0.3004%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (26 samples, 1.31%)</title><rect x="0.0504%" y="244" width="1.3098%" height="15" fill="rgb(241,108,4)" fg:x="1" fg:w="26"/><text x="0.3004%" y="254.50"></text></g><g><title>&lt;module&gt; (evaluation.py:6) (26 samples, 1.31%)</title><rect x="0.0504%" y="260" width="1.3098%" height="15" fill="rgb(247,173,49)" fg:x="1" fg:w="26"/><text x="0.3004%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (26 samples, 1.31%)</title><rect x="0.0504%" y="276" width="1.3098%" height="15" fill="rgb(224,114,35)" fg:x="1" fg:w="26"/><text x="0.3004%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (26 samples, 1.31%)</title><rect x="0.0504%" y="292" width="1.3098%" height="15" fill="rgb(245,159,27)" fg:x="1" fg:w="26"/><text x="0.3004%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (26 samples, 1.31%)</title><rect x="0.0504%" y="308" width="1.3098%" height="15" fill="rgb(245,172,44)" fg:x="1" fg:w="26"/><text x="0.3004%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (26 samples, 1.31%)</title><rect x="0.0504%" y="324" width="1.3098%" height="15" fill="rgb(236,23,11)" fg:x="1" fg:w="26"/><text x="0.3004%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (26 samples, 1.31%)</title><rect x="0.0504%" y="340" width="1.3098%" height="15" fill="rgb(205,117,38)" fg:x="1" fg:w="26"/><text x="0.3004%" y="350.50"></text></g><g><title>get_my_solution (real_diff_SA.py:757) (4 samples, 0.20%)</title><rect x="1.3602%" y="84" width="0.2015%" height="15" fill="rgb(237,72,25)" fg:x="27" fg:w="4"/><text x="1.6102%" y="94.50"></text></g><g><title>__init__ (real_diff_evaluation.py:177) (4 samples, 0.20%)</title><rect x="1.3602%" y="100" width="0.2015%" height="15" fill="rgb(244,70,9)" fg:x="27" fg:w="4"/><text x="1.6102%" y="110.50"></text></g><g><title>_load_demand_data (real_diff_evaluation.py:210) (4 samples, 0.20%)</title><rect x="1.3602%" y="116" width="0.2015%" height="15" fill="rgb(217,125,39)" fg:x="27" fg:w="4"/><text x="1.6102%" y="126.50"></text></g><g><title>get_actual_demand (evaluation.py:149) (2 samples, 0.10%)</title><rect x="1.4610%" y="132" width="0.1008%" height="15" fill="rgb(235,36,10)" fg:x="29" fg:w="2"/><text x="1.7110%" y="142.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:4311) (2 samples, 0.10%)</title><rect x="1.4610%" y="148" width="0.1008%" height="15" fill="rgb(251,123,47)" fg:x="29" fg:w="2"/><text x="1.7110%" y="158.50"></text></g><g><title>run (real_diff_SA.py:729) (3 samples, 0.15%)</title><rect x="1.5617%" y="100" width="0.1511%" height="15" fill="rgb(221,13,13)" fg:x="31" fg:w="3"/><text x="1.8117%" y="110.50"></text></g><g><title>generate_neighbor (real_diff_SA.py:691) (6 samples, 0.30%)</title><rect x="1.7632%" y="116" width="0.3023%" height="15" fill="rgb(238,131,9)" fg:x="35" fg:w="6"/><text x="2.0132%" y="126.50"></text></g><g><title>choose_operation (real_diff_SA.py:687) (5 samples, 0.25%)</title><rect x="1.8136%" y="132" width="0.2519%" height="15" fill="rgb(211,50,8)" fg:x="36" fg:w="5"/><text x="2.0636%" y="142.50"></text></g><g><title>execute (real_diff_SA.py:171) (2 samples, 0.10%)</title><rect x="2.1662%" y="132" width="0.1008%" height="15" fill="rgb(245,182,24)" fg:x="43" fg:w="2"/><text x="2.4162%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4092) (4 samples, 0.20%)</title><rect x="2.4685%" y="148" width="0.2015%" height="15" fill="rgb(242,14,37)" fg:x="49" fg:w="4"/><text x="2.7185%" y="158.50"></text></g><g><title>is_bool_indexer (pandas/core/common.py:128) (3 samples, 0.15%)</title><rect x="2.5189%" y="164" width="0.1511%" height="15" fill="rgb(246,228,12)" fg:x="50" fg:w="3"/><text x="2.7689%" y="174.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4142) (4 samples, 0.20%)</title><rect x="2.7204%" y="164" width="0.2015%" height="15" fill="rgb(213,55,15)" fg:x="54" fg:w="4"/><text x="2.9704%" y="174.50"></text></g><g><title>__len__ (pandas/core/series.py:918) (4 samples, 0.20%)</title><rect x="2.7204%" y="180" width="0.2015%" height="15" fill="rgb(209,9,3)" fg:x="54" fg:w="4"/><text x="2.9704%" y="190.50"></text></g><g><title>check_bool_indexer (pandas/core/indexing.py:2659) (4 samples, 0.20%)</title><rect x="2.9219%" y="180" width="0.2015%" height="15" fill="rgb(230,59,30)" fg:x="58" fg:w="4"/><text x="3.1719%" y="190.50"></text></g><g><title>_is_dtype_type (pandas/core/dtypes/common.py:1468) (2 samples, 0.10%)</title><rect x="3.2242%" y="212" width="0.1008%" height="15" fill="rgb(209,121,21)" fg:x="64" fg:w="2"/><text x="3.4742%" y="222.50"></text></g><g><title>check_bool_indexer (pandas/core/indexing.py:2674) (6 samples, 0.30%)</title><rect x="3.1234%" y="180" width="0.3023%" height="15" fill="rgb(220,109,13)" fg:x="62" fg:w="6"/><text x="3.3734%" y="190.50"></text></g><g><title>is_object_dtype (pandas/core/dtypes/common.py:165) (5 samples, 0.25%)</title><rect x="3.1738%" y="196" width="0.2519%" height="15" fill="rgb(232,18,1)" fg:x="63" fg:w="5"/><text x="3.4238%" y="206.50"></text></g><g><title>check_bool_indexer (pandas/core/indexing.py:2677) (2 samples, 0.10%)</title><rect x="3.4257%" y="180" width="0.1008%" height="15" fill="rgb(215,41,42)" fg:x="68" fg:w="2"/><text x="3.6757%" y="190.50"></text></g><g><title>is_array_like (pandas/core/dtypes/inference.py:224) (2 samples, 0.10%)</title><rect x="3.4257%" y="196" width="0.1008%" height="15" fill="rgb(224,123,36)" fg:x="68" fg:w="2"/><text x="3.6757%" y="206.50"></text></g><g><title>check_array_indexer (pandas/core/indexers/utils.py:511) (3 samples, 0.15%)</title><rect x="3.5264%" y="196" width="0.1511%" height="15" fill="rgb(240,125,3)" fg:x="70" fg:w="3"/><text x="3.7764%" y="206.50"></text></g><g><title>check_array_indexer (pandas/core/indexers/utils.py:531) (4 samples, 0.20%)</title><rect x="3.8287%" y="196" width="0.2015%" height="15" fill="rgb(205,98,50)" fg:x="76" fg:w="4"/><text x="4.0787%" y="206.50"></text></g><g><title>is_bool_dtype (pandas/core/dtypes/common.py:1250) (3 samples, 0.15%)</title><rect x="3.8791%" y="212" width="0.1511%" height="15" fill="rgb(205,185,37)" fg:x="77" fg:w="3"/><text x="4.1291%" y="222.50"></text></g><g><title>_instancecheck (pandas/core/dtypes/generic.py:44) (2 samples, 0.10%)</title><rect x="3.9295%" y="228" width="0.1008%" height="15" fill="rgb(238,207,15)" fg:x="78" fg:w="2"/><text x="4.1795%" y="238.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:38) (2 samples, 0.10%)</title><rect x="3.9295%" y="244" width="0.1008%" height="15" fill="rgb(213,199,42)" fg:x="78" fg:w="2"/><text x="4.1795%" y="254.50"></text></g><g><title>__getattr__ (pandas/core/generic.py:6292) (2 samples, 0.10%)</title><rect x="4.2821%" y="212" width="0.1008%" height="15" fill="rgb(235,201,11)" fg:x="85" fg:w="2"/><text x="4.5321%" y="222.50"></text></g><g><title>_can_hold_identifiers_and_holds_name (pandas/core/indexes/base.py:5448) (2 samples, 0.10%)</title><rect x="4.4332%" y="228" width="0.1008%" height="15" fill="rgb(207,46,11)" fg:x="88" fg:w="2"/><text x="4.6832%" y="238.50"></text></g><g><title>is_string_dtype (pandas/core/dtypes/common.py:569) (5 samples, 0.25%)</title><rect x="4.5844%" y="244" width="0.2519%" height="15" fill="rgb(241,35,35)" fg:x="91" fg:w="5"/><text x="4.8344%" y="254.50"></text></g><g><title>is_string_dtype (pandas/core/dtypes/common.py:572) (2 samples, 0.10%)</title><rect x="4.8363%" y="244" width="0.1008%" height="15" fill="rgb(243,32,47)" fg:x="96" fg:w="2"/><text x="5.0863%" y="254.50"></text></g><g><title>_can_hold_identifiers_and_holds_name (pandas/core/indexes/base.py:5449) (13 samples, 0.65%)</title><rect x="4.5340%" y="228" width="0.6549%" height="15" fill="rgb(247,202,23)" fg:x="90" fg:w="13"/><text x="4.7840%" y="238.50"></text></g><g><title>is_string_dtype (pandas/core/dtypes/common.py:580) (5 samples, 0.25%)</title><rect x="4.9370%" y="244" width="0.2519%" height="15" fill="rgb(219,102,11)" fg:x="98" fg:w="5"/><text x="5.1870%" y="254.50"></text></g><g><title>_is_dtype (pandas/core/dtypes/common.py:1396) (3 samples, 0.15%)</title><rect x="5.0378%" y="260" width="0.1511%" height="15" fill="rgb(243,110,44)" fg:x="100" fg:w="3"/><text x="5.2878%" y="270.50"></text></g><g><title>condition (pandas/core/dtypes/common.py:576) (2 samples, 0.10%)</title><rect x="5.0882%" y="276" width="0.1008%" height="15" fill="rgb(222,74,54)" fg:x="101" fg:w="2"/><text x="5.3382%" y="286.50"></text></g><g><title>_can_hold_identifiers_and_holds_name (pandas/core/indexes/base.py:5450) (2 samples, 0.10%)</title><rect x="5.1889%" y="228" width="0.1008%" height="15" fill="rgb(216,99,12)" fg:x="103" fg:w="2"/><text x="5.4389%" y="238.50"></text></g><g><title>__getattr__ (pandas/core/generic.py:6296) (19 samples, 0.96%)</title><rect x="4.3829%" y="212" width="0.9572%" height="15" fill="rgb(226,22,26)" fg:x="87" fg:w="19"/><text x="4.6329%" y="222.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4149) (51 samples, 2.57%)</title><rect x="2.9219%" y="164" width="2.5693%" height="15" fill="rgb(217,163,10)" fg:x="58" fg:w="51"/><text x="3.1719%" y="174.50">_g..</text></g><g><title>check_bool_indexer (pandas/core/indexing.py:2681) (39 samples, 1.96%)</title><rect x="3.5264%" y="180" width="1.9647%" height="15" fill="rgb(213,25,53)" fg:x="70" fg:w="39"/><text x="3.7764%" y="190.50">c..</text></g><g><title>check_array_indexer (pandas/core/indexers/utils.py:535) (29 samples, 1.46%)</title><rect x="4.0302%" y="196" width="1.4610%" height="15" fill="rgb(252,105,26)" fg:x="80" fg:w="29"/><text x="4.2802%" y="206.50"></text></g><g><title>__getattr__ (pandas/core/generic.py:6299) (3 samples, 0.15%)</title><rect x="5.3401%" y="212" width="0.1511%" height="15" fill="rgb(220,39,43)" fg:x="106" fg:w="3"/><text x="5.5901%" y="222.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4151) (5 samples, 0.25%)</title><rect x="5.4912%" y="164" width="0.2519%" height="15" fill="rgb(229,68,48)" fg:x="109" fg:w="5"/><text x="5.7412%" y="174.50"></text></g><g><title>_all (numpy/core/_methods.py:64) (4 samples, 0.20%)</title><rect x="5.5416%" y="180" width="0.2015%" height="15" fill="rgb(252,8,32)" fg:x="110" fg:w="4"/><text x="5.7916%" y="190.50"></text></g><g><title>take (pandas/core/generic.py:4103) (2 samples, 0.10%)</title><rect x="5.7935%" y="196" width="0.1008%" height="15" fill="rgb(223,20,43)" fg:x="115" fg:w="2"/><text x="6.0435%" y="206.50"></text></g><g><title>take (pandas/core/internals/managers.py:890) (3 samples, 0.15%)</title><rect x="6.0957%" y="212" width="0.1511%" height="15" fill="rgb(229,81,49)" fg:x="121" fg:w="3"/><text x="6.3457%" y="222.50"></text></g><g><title>shape (pandas/core/internals/base.py:84) (3 samples, 0.15%)</title><rect x="6.0957%" y="228" width="0.1511%" height="15" fill="rgb(236,28,36)" fg:x="121" fg:w="3"/><text x="6.3457%" y="238.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/internals/base.py:84) (2 samples, 0.10%)</title><rect x="6.1461%" y="244" width="0.1008%" height="15" fill="rgb(249,185,26)" fg:x="122" fg:w="2"/><text x="6.3961%" y="254.50"></text></g><g><title>maybe_convert_indices (pandas/core/indexers/utils.py:274) (2 samples, 0.10%)</title><rect x="6.2469%" y="228" width="0.1008%" height="15" fill="rgb(249,174,33)" fg:x="124" fg:w="2"/><text x="6.4969%" y="238.50"></text></g><g><title>_any (numpy/core/_methods.py:57) (2 samples, 0.10%)</title><rect x="6.3980%" y="244" width="0.1008%" height="15" fill="rgb(233,201,37)" fg:x="127" fg:w="2"/><text x="6.6480%" y="254.50"></text></g><g><title>maybe_convert_indices (pandas/core/indexers/utils.py:275) (5 samples, 0.25%)</title><rect x="6.3476%" y="228" width="0.2519%" height="15" fill="rgb(221,78,26)" fg:x="126" fg:w="5"/><text x="6.5976%" y="238.50"></text></g><g><title>_any (numpy/core/_methods.py:58) (2 samples, 0.10%)</title><rect x="6.4987%" y="244" width="0.1008%" height="15" fill="rgb(250,127,30)" fg:x="129" fg:w="2"/><text x="6.7487%" y="254.50"></text></g><g><title>take (pandas/core/internals/managers.py:891) (10 samples, 0.50%)</title><rect x="6.2469%" y="212" width="0.5038%" height="15" fill="rgb(230,49,44)" fg:x="124" fg:w="10"/><text x="6.4969%" y="222.50"></text></g><g><title>maybe_convert_indices (pandas/core/indexers/utils.py:280) (3 samples, 0.15%)</title><rect x="6.5995%" y="228" width="0.1511%" height="15" fill="rgb(229,67,23)" fg:x="131" fg:w="3"/><text x="6.8495%" y="238.50"></text></g><g><title>take (pandas/core/indexes/range.py:1163) (2 samples, 0.10%)</title><rect x="6.9018%" y="228" width="0.1008%" height="15" fill="rgb(249,83,47)" fg:x="137" fg:w="2"/><text x="7.1518%" y="238.50"></text></g><g><title>_maybe_disallow_fill (pandas/core/indexes/base.py:1182) (2 samples, 0.10%)</title><rect x="6.9018%" y="244" width="0.1008%" height="15" fill="rgb(215,43,3)" fg:x="137" fg:w="2"/><text x="7.1518%" y="254.50"></text></g><g><title>take (pandas/core/indexes/range.py:1168) (3 samples, 0.15%)</title><rect x="7.0025%" y="228" width="0.1511%" height="15" fill="rgb(238,154,13)" fg:x="139" fg:w="3"/><text x="7.2525%" y="238.50"></text></g><g><title>take (pandas/core/internals/managers.py:893) (15 samples, 0.76%)</title><rect x="6.7506%" y="212" width="0.7557%" height="15" fill="rgb(219,56,2)" fg:x="134" fg:w="15"/><text x="7.0006%" y="222.50"></text></g><g><title>take (pandas/core/indexes/range.py:1187) (5 samples, 0.25%)</title><rect x="7.2544%" y="228" width="0.2519%" height="15" fill="rgb(233,0,4)" fg:x="144" fg:w="5"/><text x="7.5044%" y="238.50"></text></g><g><title>_simple_new (pandas/core/indexes/base.py:670) (2 samples, 0.10%)</title><rect x="7.4055%" y="244" width="0.1008%" height="15" fill="rgb(235,30,7)" fg:x="147" fg:w="2"/><text x="7.6555%" y="254.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:116) (2 samples, 0.10%)</title><rect x="7.6574%" y="276" width="0.1008%" height="15" fill="rgb(250,79,13)" fg:x="152" fg:w="2"/><text x="7.9074%" y="286.50"></text></g><g><title>_take_preprocess_indexer_and_fill_value (pandas/core/array_algos/take.py:579) (7 samples, 0.35%)</title><rect x="7.8086%" y="308" width="0.3526%" height="15" fill="rgb(211,146,34)" fg:x="155" fg:w="7"/><text x="8.0586%" y="318.50"></text></g><g><title>maybe_promote (pandas/core/dtypes/cast.py:579) (5 samples, 0.25%)</title><rect x="7.9093%" y="324" width="0.2519%" height="15" fill="rgb(228,22,38)" fg:x="157" fg:w="5"/><text x="8.1593%" y="334.50"></text></g><g><title>_take_preprocess_indexer_and_fill_value (pandas/core/array_algos/take.py:586) (6 samples, 0.30%)</title><rect x="8.1612%" y="308" width="0.3023%" height="15" fill="rgb(235,168,5)" fg:x="162" fg:w="6"/><text x="8.4112%" y="318.50"></text></g><g><title>_any (numpy/core/_methods.py:58) (6 samples, 0.30%)</title><rect x="8.1612%" y="324" width="0.3023%" height="15" fill="rgb(221,155,16)" fg:x="162" fg:w="6"/><text x="8.4112%" y="334.50"></text></g><g><title>_take_nd_ndarray (pandas/core/array_algos/take.py:133) (14 samples, 0.71%)</title><rect x="7.8086%" y="292" width="0.7053%" height="15" fill="rgb(215,215,53)" fg:x="155" fg:w="14"/><text x="8.0586%" y="302.50"></text></g><g><title>_take_nd_ndarray (pandas/core/array_algos/take.py:138) (2 samples, 0.10%)</title><rect x="8.5139%" y="292" width="0.1008%" height="15" fill="rgb(223,4,10)" fg:x="169" fg:w="2"/><text x="8.7639%" y="302.50"></text></g><g><title>_take_nd_ndarray (pandas/core/array_algos/take.py:157) (4 samples, 0.20%)</title><rect x="8.7154%" y="292" width="0.2015%" height="15" fill="rgb(234,103,6)" fg:x="173" fg:w="4"/><text x="8.9654%" y="302.50"></text></g><g><title>_take_nd_ndarray (pandas/core/array_algos/take.py:162) (3 samples, 0.15%)</title><rect x="8.9169%" y="292" width="0.1511%" height="15" fill="rgb(227,97,0)" fg:x="177" fg:w="3"/><text x="9.1669%" y="302.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1307) (29 samples, 1.46%)</title><rect x="7.6574%" y="260" width="1.4610%" height="15" fill="rgb(234,150,53)" fg:x="152" fg:w="29"/><text x="7.9074%" y="270.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (27 samples, 1.36%)</title><rect x="7.7582%" y="276" width="1.3602%" height="15" fill="rgb(228,201,54)" fg:x="154" fg:w="27"/><text x="8.0082%" y="286.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:688) (32 samples, 1.61%)</title><rect x="7.6574%" y="244" width="1.6121%" height="15" fill="rgb(222,22,37)" fg:x="152" fg:w="32"/><text x="7.9074%" y="254.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1325) (2 samples, 0.10%)</title><rect x="9.1688%" y="260" width="0.1008%" height="15" fill="rgb(237,53,32)" fg:x="182" fg:w="2"/><text x="9.4188%" y="270.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:687) (35 samples, 1.76%)</title><rect x="7.6071%" y="228" width="1.7632%" height="15" fill="rgb(233,25,53)" fg:x="151" fg:w="35"/><text x="7.8571%" y="238.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:692) (2 samples, 0.10%)</title><rect x="9.2695%" y="244" width="0.1008%" height="15" fill="rgb(210,40,34)" fg:x="184" fg:w="2"/><text x="9.5195%" y="254.50"></text></g><g><title>take (pandas/core/generic.py:4133) (70 samples, 3.53%)</title><rect x="6.0453%" y="196" width="3.5264%" height="15" fill="rgb(241,220,44)" fg:x="120" fg:w="70"/><text x="6.2953%" y="206.50">tak..</text></g><g><title>take (pandas/core/internals/managers.py:894) (41 samples, 2.07%)</title><rect x="7.5063%" y="212" width="2.0655%" height="15" fill="rgb(235,28,35)" fg:x="149" fg:w="41"/><text x="7.7563%" y="222.50">t..</text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:701) (3 samples, 0.15%)</title><rect x="9.4207%" y="228" width="0.1511%" height="15" fill="rgb(210,56,17)" fg:x="187" fg:w="3"/><text x="9.6707%" y="238.50"></text></g><g><title>from_blocks (pandas/core/internals/managers.py:953) (3 samples, 0.15%)</title><rect x="9.4207%" y="244" width="0.1511%" height="15" fill="rgb(224,130,29)" fg:x="187" fg:w="3"/><text x="9.6707%" y="254.50"></text></g><g><title>take (pandas/core/generic.py:4135) (2 samples, 0.10%)</title><rect x="9.5718%" y="196" width="0.1008%" height="15" fill="rgb(235,212,8)" fg:x="190" fg:w="2"/><text x="9.8218%" y="206.50"></text></g><g><title>_take_with_is_copy (pandas/core/generic.py:4153) (80 samples, 4.03%)</title><rect x="5.7935%" y="180" width="4.0302%" height="15" fill="rgb(223,33,50)" fg:x="115" fg:w="80"/><text x="6.0435%" y="190.50">_tak..</text></g><g><title>take (pandas/core/generic.py:4138) (3 samples, 0.15%)</title><rect x="9.6725%" y="196" width="0.1511%" height="15" fill="rgb(219,149,13)" fg:x="192" fg:w="3"/><text x="9.9225%" y="206.50"></text></g><g><title>execute (real_diff_SA.py:175) (153 samples, 7.71%)</title><rect x="2.3174%" y="132" width="7.7078%" height="15" fill="rgb(250,156,29)" fg:x="46" fg:w="153"/><text x="2.5674%" y="142.50">execute (re..</text></g><g><title>__getitem__ (pandas/core/frame.py:4093) (146 samples, 7.36%)</title><rect x="2.6700%" y="148" width="7.3552%" height="15" fill="rgb(216,193,19)" fg:x="53" fg:w="146"/><text x="2.9200%" y="158.50">__getitem_..</text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4155) (84 samples, 4.23%)</title><rect x="5.7935%" y="164" width="4.2317%" height="15" fill="rgb(216,135,14)" fg:x="115" fg:w="84"/><text x="6.0435%" y="174.50">_geti..</text></g><g><title>_take_with_is_copy (pandas/core/generic.py:4155) (4 samples, 0.20%)</title><rect x="9.8237%" y="180" width="0.2015%" height="15" fill="rgb(241,47,5)" fg:x="195" fg:w="4"/><text x="10.0737%" y="190.50"></text></g><g><title>equals (pandas/core/indexes/base.py:5617) (2 samples, 0.10%)</title><rect x="9.9244%" y="196" width="0.1008%" height="15" fill="rgb(233,42,35)" fg:x="197" fg:w="2"/><text x="10.1744%" y="206.50"></text></g><g><title>_logical_method (pandas/core/series.py:6124) (3 samples, 0.15%)</title><rect x="10.2267%" y="180" width="0.1511%" height="15" fill="rgb(231,13,6)" fg:x="203" fg:w="3"/><text x="10.4767%" y="190.50"></text></g><g><title>get_op_result_name (pandas/core/ops/common.py:97) (3 samples, 0.15%)</title><rect x="10.2267%" y="196" width="0.1511%" height="15" fill="rgb(207,181,40)" fg:x="203" fg:w="3"/><text x="10.4767%" y="206.50"></text></g><g><title>_logical_method (pandas/core/series.py:6128) (2 samples, 0.10%)</title><rect x="10.4786%" y="180" width="0.1008%" height="15" fill="rgb(254,173,49)" fg:x="208" fg:w="2"/><text x="10.7286%" y="190.50"></text></g><g><title>_logical_method (pandas/core/series.py:6130) (3 samples, 0.15%)</title><rect x="10.5793%" y="180" width="0.1511%" height="15" fill="rgb(221,1,38)" fg:x="210" fg:w="3"/><text x="10.8293%" y="190.50"></text></g><g><title>__init__ (pandas/core/series.py:493) (2 samples, 0.10%)</title><rect x="10.8312%" y="212" width="0.1008%" height="15" fill="rgb(206,124,46)" fg:x="215" fg:w="2"/><text x="11.0812%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:575) (2 samples, 0.10%)</title><rect x="10.9824%" y="212" width="0.1008%" height="15" fill="rgb(249,21,11)" fg:x="218" fg:w="2"/><text x="11.2324%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:586) (2 samples, 0.10%)</title><rect x="11.1335%" y="212" width="0.1008%" height="15" fill="rgb(222,201,40)" fg:x="221" fg:w="2"/><text x="11.3835%" y="222.50"></text></g><g><title>_get_option (pandas/_config/config.py:146) (2 samples, 0.10%)</title><rect x="11.1335%" y="228" width="0.1008%" height="15" fill="rgb(235,61,29)" fg:x="221" fg:w="2"/><text x="11.3835%" y="238.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1870) (2 samples, 0.10%)</title><rect x="11.2343%" y="228" width="0.1008%" height="15" fill="rgb(219,207,3)" fg:x="223" fg:w="2"/><text x="11.4843%" y="238.50"></text></g><g><title>maybe_coerce_values (pandas/core/internals/blocks.py:2662) (2 samples, 0.10%)</title><rect x="11.2343%" y="244" width="0.1008%" height="15" fill="rgb(222,56,46)" fg:x="223" fg:w="2"/><text x="11.4843%" y="254.50"></text></g><g><title>ensure_wrapped_if_datetimelike (pandas/core/construction.py:492) (2 samples, 0.10%)</title><rect x="11.2343%" y="260" width="0.1008%" height="15" fill="rgb(239,76,54)" fg:x="223" fg:w="2"/><text x="11.4843%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (4 samples, 0.20%)</title><rect x="11.2343%" y="212" width="0.2015%" height="15" fill="rgb(231,124,27)" fg:x="223" fg:w="4"/><text x="11.4843%" y="222.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1872) (2 samples, 0.10%)</title><rect x="11.3350%" y="228" width="0.1008%" height="15" fill="rgb(249,195,6)" fg:x="225" fg:w="2"/><text x="11.5850%" y="238.50"></text></g><g><title>new_block (pandas/core/internals/blocks.py:2727) (2 samples, 0.10%)</title><rect x="11.3350%" y="244" width="0.1008%" height="15" fill="rgb(237,174,47)" fg:x="225" fg:w="2"/><text x="11.5850%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (3 samples, 0.15%)</title><rect x="11.4861%" y="212" width="0.1511%" height="15" fill="rgb(206,201,31)" fg:x="228" fg:w="3"/><text x="11.7361%" y="222.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6320) (2 samples, 0.10%)</title><rect x="11.5365%" y="228" width="0.1008%" height="15" fill="rgb(231,57,52)" fg:x="229" fg:w="2"/><text x="11.7865%" y="238.50"></text></g><g><title>name (pandas/core/series.py:786) (2 samples, 0.10%)</title><rect x="11.5365%" y="244" width="0.1008%" height="15" fill="rgb(248,177,22)" fg:x="229" fg:w="2"/><text x="11.7865%" y="254.50"></text></g><g><title>validate_all_hashable (pandas/core/dtypes/common.py:1590) (2 samples, 0.10%)</title><rect x="11.5365%" y="260" width="0.1008%" height="15" fill="rgb(215,211,37)" fg:x="229" fg:w="2"/><text x="11.7865%" y="270.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (19 samples, 0.96%)</title><rect x="10.7305%" y="196" width="0.9572%" height="15" fill="rgb(241,128,51)" fg:x="213" fg:w="19"/><text x="10.9805%" y="206.50"></text></g><g><title>__and__ (pandas/core/arraylike.py:70) (31 samples, 1.56%)</title><rect x="10.2267%" y="164" width="1.5617%" height="15" fill="rgb(227,165,31)" fg:x="203" fg:w="31"/><text x="10.4767%" y="174.50"></text></g><g><title>_logical_method (pandas/core/series.py:6131) (21 samples, 1.06%)</title><rect x="10.7305%" y="180" width="1.0579%" height="15" fill="rgb(228,167,24)" fg:x="213" fg:w="21"/><text x="10.9805%" y="190.50"></text></g><g><title>_construct_result (pandas/core/series.py:6236) (2 samples, 0.10%)</title><rect x="11.6877%" y="196" width="0.1008%" height="15" fill="rgb(228,143,12)" fg:x="232" fg:w="2"/><text x="11.9377%" y="206.50"></text></g><g><title>_cmp_method (pandas/core/series.py:6119) (2 samples, 0.10%)</title><rect x="11.7884%" y="180" width="0.1008%" height="15" fill="rgb(249,149,8)" fg:x="234" fg:w="2"/><text x="12.0384%" y="190.50"></text></g><g><title>comparison_op (pandas/core/ops/array_ops.py:347) (2 samples, 0.10%)</title><rect x="11.7884%" y="196" width="0.1008%" height="15" fill="rgb(243,35,44)" fg:x="234" fg:w="2"/><text x="12.0384%" y="206.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (2 samples, 0.10%)</title><rect x="11.8892%" y="212" width="0.1008%" height="15" fill="rgb(246,89,9)" fg:x="236" fg:w="2"/><text x="12.1392%" y="222.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:659) (2 samples, 0.10%)</title><rect x="11.8892%" y="228" width="0.1008%" height="15" fill="rgb(233,213,13)" fg:x="236" fg:w="2"/><text x="12.1392%" y="238.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1870) (2 samples, 0.10%)</title><rect x="11.9899%" y="228" width="0.1008%" height="15" fill="rgb(233,141,41)" fg:x="238" fg:w="2"/><text x="12.2399%" y="238.50"></text></g><g><title>maybe_coerce_values (pandas/core/internals/blocks.py:2661) (2 samples, 0.10%)</title><rect x="11.9899%" y="244" width="0.1008%" height="15" fill="rgb(239,167,4)" fg:x="238" fg:w="2"/><text x="12.2399%" y="254.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1871) (2 samples, 0.10%)</title><rect x="12.0907%" y="228" width="0.1008%" height="15" fill="rgb(209,217,16)" fg:x="240" fg:w="2"/><text x="12.3407%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (5 samples, 0.25%)</title><rect x="11.9899%" y="212" width="0.2519%" height="15" fill="rgb(219,88,35)" fg:x="238" fg:w="5"/><text x="12.2399%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (2 samples, 0.10%)</title><rect x="12.2418%" y="212" width="0.1008%" height="15" fill="rgb(220,193,23)" fg:x="243" fg:w="2"/><text x="12.4918%" y="222.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (10 samples, 0.50%)</title><rect x="11.8892%" y="196" width="0.5038%" height="15" fill="rgb(230,90,52)" fg:x="236" fg:w="10"/><text x="12.1392%" y="206.50"></text></g><g><title>_construct_result (pandas/core/series.py:6232) (2 samples, 0.10%)</title><rect x="12.3929%" y="196" width="0.1008%" height="15" fill="rgb(252,106,19)" fg:x="246" fg:w="2"/><text x="12.6429%" y="206.50"></text></g><g><title>__finalize__ (pandas/core/generic.py:6264) (2 samples, 0.10%)</title><rect x="12.3929%" y="212" width="0.1008%" height="15" fill="rgb(206,74,20)" fg:x="246" fg:w="2"/><text x="12.6429%" y="222.50"></text></g><g><title>execute (real_diff_SA.py:176) (50 samples, 2.52%)</title><rect x="10.0252%" y="132" width="2.5189%" height="15" fill="rgb(230,138,44)" fg:x="199" fg:w="50"/><text x="10.2752%" y="142.50">ex..</text></g><g><title>new_method (pandas/core/ops/common.py:76) (46 samples, 2.32%)</title><rect x="10.2267%" y="148" width="2.3174%" height="15" fill="rgb(235,182,43)" fg:x="203" fg:w="46"/><text x="10.4767%" y="158.50">n..</text></g><g><title>__le__ (pandas/core/arraylike.py:52) (15 samples, 0.76%)</title><rect x="11.7884%" y="164" width="0.7557%" height="15" fill="rgb(242,16,51)" fg:x="234" fg:w="15"/><text x="12.0384%" y="174.50"></text></g><g><title>_cmp_method (pandas/core/series.py:6121) (13 samples, 0.65%)</title><rect x="11.8892%" y="180" width="0.6549%" height="15" fill="rgb(248,9,4)" fg:x="236" fg:w="13"/><text x="12.1392%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4063) (2 samples, 0.10%)</title><rect x="12.5945%" y="148" width="0.1008%" height="15" fill="rgb(210,31,22)" fg:x="250" fg:w="2"/><text x="12.8445%" y="158.50"></text></g><g><title>_cmp_method (pandas/core/series.py:6111) (2 samples, 0.10%)</title><rect x="12.7456%" y="180" width="0.1008%" height="15" fill="rgb(239,54,39)" fg:x="253" fg:w="2"/><text x="12.9956%" y="190.50"></text></g><g><title>_cmp_method (pandas/core/series.py:6119) (4 samples, 0.20%)</title><rect x="12.8463%" y="180" width="0.2015%" height="15" fill="rgb(230,99,41)" fg:x="255" fg:w="4"/><text x="13.0963%" y="190.50"></text></g><g><title>__init__ (pandas/core/series.py:487) (2 samples, 0.10%)</title><rect x="13.0479%" y="212" width="0.1008%" height="15" fill="rgb(253,106,12)" fg:x="259" fg:w="2"/><text x="13.2979%" y="222.50"></text></g><g><title>maybe_extract_name (pandas/core/indexes/base.py:7698) (2 samples, 0.10%)</title><rect x="13.0479%" y="228" width="0.1008%" height="15" fill="rgb(213,46,41)" fg:x="259" fg:w="2"/><text x="13.2979%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (3 samples, 0.15%)</title><rect x="13.2494%" y="212" width="0.1511%" height="15" fill="rgb(215,133,35)" fg:x="263" fg:w="3"/><text x="13.4994%" y="222.50"></text></g><g><title>_get_option (pandas/_config/config.py:146) (2 samples, 0.10%)</title><rect x="13.4509%" y="228" width="0.1008%" height="15" fill="rgb(213,28,5)" fg:x="267" fg:w="2"/><text x="13.7009%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:586) (5 samples, 0.25%)</title><rect x="13.4005%" y="212" width="0.2519%" height="15" fill="rgb(215,77,49)" fg:x="266" fg:w="5"/><text x="13.6505%" y="222.50"></text></g><g><title>_get_option (pandas/_config/config.py:149) (2 samples, 0.10%)</title><rect x="13.5516%" y="228" width="0.1008%" height="15" fill="rgb(248,100,22)" fg:x="269" fg:w="2"/><text x="13.8016%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:592) (3 samples, 0.15%)</title><rect x="13.7028%" y="212" width="0.1511%" height="15" fill="rgb(208,67,9)" fg:x="272" fg:w="3"/><text x="13.9528%" y="222.50"></text></g><g><title>__init__ (pandas/core/generic.py:283) (3 samples, 0.15%)</title><rect x="13.7028%" y="228" width="0.1511%" height="15" fill="rgb(219,133,21)" fg:x="272" fg:w="3"/><text x="13.9528%" y="238.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (2 samples, 0.10%)</title><rect x="13.8539%" y="228" width="0.1008%" height="15" fill="rgb(246,46,29)" fg:x="275" fg:w="2"/><text x="14.1039%" y="238.50"></text></g><g><title>name (pandas/core/series.py:782) (2 samples, 0.10%)</title><rect x="13.8539%" y="244" width="0.1008%" height="15" fill="rgb(246,185,52)" fg:x="275" fg:w="2"/><text x="14.1039%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (3 samples, 0.15%)</title><rect x="13.8539%" y="212" width="0.1511%" height="15" fill="rgb(252,136,11)" fg:x="275" fg:w="3"/><text x="14.1039%" y="222.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (20 samples, 1.01%)</title><rect x="13.0479%" y="196" width="1.0076%" height="15" fill="rgb(219,138,53)" fg:x="259" fg:w="20"/><text x="13.2979%" y="206.50"></text></g><g><title>__finalize__ (pandas/core/generic.py:6255) (2 samples, 0.10%)</title><rect x="14.0554%" y="212" width="0.1008%" height="15" fill="rgb(211,51,23)" fg:x="279" fg:w="2"/><text x="14.3054%" y="222.50"></text></g><g><title>__finalize__ (pandas/core/generic.py:6264) (2 samples, 0.10%)</title><rect x="14.1562%" y="212" width="0.1008%" height="15" fill="rgb(247,221,28)" fg:x="281" fg:w="2"/><text x="14.4062%" y="222.50"></text></g><g><title>_construct_result (pandas/core/series.py:6232) (5 samples, 0.25%)</title><rect x="14.0554%" y="196" width="0.2519%" height="15" fill="rgb(251,222,45)" fg:x="279" fg:w="5"/><text x="14.3054%" y="206.50"></text></g><g><title>execute (real_diff_SA.py:177) (36 samples, 1.81%)</title><rect x="12.5441%" y="132" width="1.8136%" height="15" fill="rgb(217,162,53)" fg:x="249" fg:w="36"/><text x="12.7941%" y="142.50">e..</text></g><g><title>new_method (pandas/core/ops/common.py:76) (32 samples, 1.61%)</title><rect x="12.7456%" y="148" width="1.6121%" height="15" fill="rgb(229,93,14)" fg:x="253" fg:w="32"/><text x="12.9956%" y="158.50"></text></g><g><title>__ge__ (pandas/core/arraylike.py:60) (32 samples, 1.61%)</title><rect x="12.7456%" y="164" width="1.6121%" height="15" fill="rgb(209,67,49)" fg:x="253" fg:w="32"/><text x="12.9956%" y="174.50"></text></g><g><title>_cmp_method (pandas/core/series.py:6121) (26 samples, 1.31%)</title><rect x="13.0479%" y="180" width="1.3098%" height="15" fill="rgb(213,87,29)" fg:x="259" fg:w="26"/><text x="13.2979%" y="190.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1737) (3 samples, 0.15%)</title><rect x="14.4081%" y="164" width="0.1511%" height="15" fill="rgb(205,151,52)" fg:x="286" fg:w="3"/><text x="14.6581%" y="174.50"></text></g><g><title>is_bool_indexer (pandas/core/common.py:141) (2 samples, 0.10%)</title><rect x="14.4584%" y="180" width="0.1008%" height="15" fill="rgb(253,215,39)" fg:x="287" fg:w="2"/><text x="14.7084%" y="190.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:984) (2 samples, 0.10%)</title><rect x="14.7103%" y="196" width="0.1008%" height="15" fill="rgb(221,220,41)" fg:x="292" fg:w="2"/><text x="14.9603%" y="206.50"></text></g><g><title>interleaved_dtype (pandas/core/internals/base.py:394) (2 samples, 0.10%)</title><rect x="14.7103%" y="212" width="0.1008%" height="15" fill="rgb(218,133,21)" fg:x="292" fg:w="2"/><text x="14.9603%" y="222.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:995) (2 samples, 0.10%)</title><rect x="14.8111%" y="196" width="0.1008%" height="15" fill="rgb(221,193,43)" fg:x="294" fg:w="2"/><text x="15.0611%" y="206.50"></text></g><g><title>_ixs (pandas/core/frame.py:3996) (7 samples, 0.35%)</title><rect x="14.6096%" y="180" width="0.3526%" height="15" fill="rgb(240,128,52)" fg:x="290" fg:w="7"/><text x="14.8596%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1191) (14 samples, 0.71%)</title><rect x="14.4081%" y="148" width="0.7053%" height="15" fill="rgb(253,114,12)" fg:x="286" fg:w="14"/><text x="14.6581%" y="158.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1754) (10 samples, 0.50%)</title><rect x="14.6096%" y="164" width="0.5038%" height="15" fill="rgb(215,223,47)" fg:x="290" fg:w="10"/><text x="14.8596%" y="174.50"></text></g><g><title>sample (pandas/core/generic.py:6118) (3 samples, 0.15%)</title><rect x="15.2141%" y="148" width="0.1511%" height="15" fill="rgb(248,225,23)" fg:x="302" fg:w="3"/><text x="15.4641%" y="158.50"></text></g><g><title>sample (pandas/core/sample.py:152) (3 samples, 0.15%)</title><rect x="15.2141%" y="164" width="0.1511%" height="15" fill="rgb(250,108,0)" fg:x="302" fg:w="3"/><text x="15.4641%" y="174.50"></text></g><g><title>_take_preprocess_indexer_and_fill_value (pandas/core/array_algos/take.py:579) (3 samples, 0.15%)</title><rect x="15.6171%" y="276" width="0.1511%" height="15" fill="rgb(228,208,7)" fg:x="310" fg:w="3"/><text x="15.8671%" y="286.50"></text></g><g><title>_take_nd_ndarray (pandas/core/array_algos/take.py:133) (5 samples, 0.25%)</title><rect x="15.6171%" y="260" width="0.2519%" height="15" fill="rgb(244,45,10)" fg:x="310" fg:w="5"/><text x="15.8671%" y="270.50"></text></g><g><title>_take_preprocess_indexer_and_fill_value (pandas/core/array_algos/take.py:586) (2 samples, 0.10%)</title><rect x="15.7683%" y="276" width="0.1008%" height="15" fill="rgb(207,125,25)" fg:x="313" fg:w="2"/><text x="16.0183%" y="286.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1307) (9 samples, 0.45%)</title><rect x="15.5668%" y="228" width="0.4534%" height="15" fill="rgb(210,195,18)" fg:x="309" fg:w="9"/><text x="15.8168%" y="238.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (8 samples, 0.40%)</title><rect x="15.6171%" y="244" width="0.4030%" height="15" fill="rgb(249,80,12)" fg:x="310" fg:w="8"/><text x="15.8671%" y="254.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:688) (11 samples, 0.55%)</title><rect x="15.5164%" y="212" width="0.5542%" height="15" fill="rgb(221,65,9)" fg:x="308" fg:w="11"/><text x="15.7664%" y="222.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:687) (12 samples, 0.60%)</title><rect x="15.5164%" y="196" width="0.6045%" height="15" fill="rgb(235,49,36)" fg:x="308" fg:w="12"/><text x="15.7664%" y="206.50"></text></g><g><title>take (pandas/core/generic.py:4133) (15 samples, 0.76%)</title><rect x="15.4156%" y="164" width="0.7557%" height="15" fill="rgb(225,32,20)" fg:x="306" fg:w="15"/><text x="15.6656%" y="174.50"></text></g><g><title>take (pandas/core/internals/managers.py:894) (13 samples, 0.65%)</title><rect x="15.5164%" y="180" width="0.6549%" height="15" fill="rgb(215,141,46)" fg:x="308" fg:w="13"/><text x="15.7664%" y="190.50"></text></g><g><title>execute (real_diff_SA.py:184) (38 samples, 1.91%)</title><rect x="14.4081%" y="132" width="1.9144%" height="15" fill="rgb(250,160,47)" fg:x="286" fg:w="38"/><text x="14.6581%" y="142.50">e..</text></g><g><title>sample (pandas/core/generic.py:6119) (19 samples, 0.96%)</title><rect x="15.3652%" y="148" width="0.9572%" height="15" fill="rgb(216,222,40)" fg:x="305" fg:w="19"/><text x="15.6152%" y="158.50"></text></g><g><title>take (pandas/core/generic.py:4138) (3 samples, 0.15%)</title><rect x="16.1713%" y="164" width="0.1511%" height="15" fill="rgb(234,217,39)" fg:x="321" fg:w="3"/><text x="16.4213%" y="174.50"></text></g><g><title>_constructor_from_mgr (pandas/core/frame.py:660) (3 samples, 0.15%)</title><rect x="16.1713%" y="180" width="0.1511%" height="15" fill="rgb(207,178,40)" fg:x="321" fg:w="3"/><text x="16.4213%" y="190.50"></text></g><g><title>_from_mgr (pandas/core/generic.py:357) (2 samples, 0.10%)</title><rect x="16.2217%" y="196" width="0.1008%" height="15" fill="rgb(221,136,13)" fg:x="322" fg:w="2"/><text x="16.4717%" y="206.50"></text></g><g><title>__init__ (pandas/core/generic.py:283) (2 samples, 0.10%)</title><rect x="16.2217%" y="212" width="0.1008%" height="15" fill="rgb(249,199,10)" fg:x="322" fg:w="2"/><text x="16.4717%" y="222.50"></text></g><g><title>execute (real_diff_SA.py:185) (2 samples, 0.10%)</title><rect x="16.3224%" y="132" width="0.1008%" height="15" fill="rgb(249,222,13)" fg:x="324" fg:w="2"/><text x="16.5724%" y="142.50"></text></g><g><title>execute (real_diff_SA.py:186) (3 samples, 0.15%)</title><rect x="16.4232%" y="132" width="0.1511%" height="15" fill="rgb(244,185,38)" fg:x="326" fg:w="3"/><text x="16.6732%" y="142.50"></text></g><g><title>execute (real_diff_SA.py:195) (2 samples, 0.10%)</title><rect x="16.6751%" y="132" width="0.1008%" height="15" fill="rgb(236,202,9)" fg:x="331" fg:w="2"/><text x="16.9251%" y="142.50"></text></g><g><title>get_maximum_available_slots (real_diff_SA.py:51) (2 samples, 0.10%)</title><rect x="16.6751%" y="148" width="0.1008%" height="15" fill="rgb(250,229,37)" fg:x="331" fg:w="2"/><text x="16.9251%" y="158.50"></text></g><g><title>min (numpy/core/fromnumeric.py:2953) (2 samples, 0.10%)</title><rect x="16.6751%" y="164" width="0.1008%" height="15" fill="rgb(206,174,23)" fg:x="331" fg:w="2"/><text x="16.9251%" y="174.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:88) (2 samples, 0.10%)</title><rect x="16.6751%" y="180" width="0.1008%" height="15" fill="rgb(211,33,43)" fg:x="331" fg:w="2"/><text x="16.9251%" y="190.50"></text></g><g><title>execute (real_diff_SA.py:215) (3 samples, 0.15%)</title><rect x="16.8766%" y="132" width="0.1511%" height="15" fill="rgb(245,58,50)" fg:x="335" fg:w="3"/><text x="17.1266%" y="142.50"></text></g><g><title>check_availability (real_diff_SA.py:46) (3 samples, 0.15%)</title><rect x="16.8766%" y="148" width="0.1511%" height="15" fill="rgb(244,68,36)" fg:x="335" fg:w="3"/><text x="17.1266%" y="158.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:291) (2 samples, 0.10%)</title><rect x="17.2292%" y="148" width="0.1008%" height="15" fill="rgb(232,229,15)" fg:x="342" fg:w="2"/><text x="17.4792%" y="158.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:293) (2 samples, 0.10%)</title><rect x="17.3300%" y="148" width="0.1008%" height="15" fill="rgb(254,30,23)" fg:x="344" fg:w="2"/><text x="17.5800%" y="158.50"></text></g><g><title>_update_lifespan (real_diff_evaluation.py:352) (2 samples, 0.10%)</title><rect x="17.5819%" y="180" width="0.1008%" height="15" fill="rgb(235,160,14)" fg:x="349" fg:w="2"/><text x="17.8319%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:317) (6 samples, 0.30%)</title><rect x="17.4307%" y="164" width="0.3023%" height="15" fill="rgb(212,155,44)" fg:x="346" fg:w="6"/><text x="17.6807%" y="174.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:319) (3 samples, 0.15%)</title><rect x="17.7330%" y="164" width="0.1511%" height="15" fill="rgb(226,2,50)" fg:x="352" fg:w="3"/><text x="17.9830%" y="174.50"></text></g><g><title>_update_fleet_size (real_diff_evaluation.py:374) (3 samples, 0.15%)</title><rect x="17.7330%" y="180" width="0.1511%" height="15" fill="rgb(234,177,6)" fg:x="352" fg:w="3"/><text x="17.9830%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:321) (4 samples, 0.20%)</title><rect x="17.8841%" y="164" width="0.2015%" height="15" fill="rgb(217,24,9)" fg:x="355" fg:w="4"/><text x="18.1341%" y="174.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:539) (2 samples, 0.10%)</title><rect x="17.9849%" y="180" width="0.1008%" height="15" fill="rgb(220,13,46)" fg:x="357" fg:w="2"/><text x="18.2349%" y="190.50"></text></g><g><title>execute (real_diff_SA.py:226) (21 samples, 1.06%)</title><rect x="17.1285%" y="132" width="1.0579%" height="15" fill="rgb(239,221,27)" fg:x="340" fg:w="21"/><text x="17.3785%" y="142.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:310) (15 samples, 0.76%)</title><rect x="17.4307%" y="148" width="0.7557%" height="15" fill="rgb(222,198,25)" fg:x="346" fg:w="15"/><text x="17.6807%" y="158.50"></text></g><g><title>execute (real_diff_SA.py:244) (2 samples, 0.10%)</title><rect x="18.2368%" y="132" width="0.1008%" height="15" fill="rgb(211,99,13)" fg:x="362" fg:w="2"/><text x="18.4868%" y="142.50"></text></g><g><title>deepcopy (copy.py:138) (2 samples, 0.10%)</title><rect x="18.5894%" y="228" width="0.1008%" height="15" fill="rgb(232,111,31)" fg:x="369" fg:w="2"/><text x="18.8394%" y="238.50"></text></g><g><title>deepcopy (copy.py:172) (5 samples, 0.25%)</title><rect x="18.6902%" y="260" width="0.2519%" height="15" fill="rgb(245,82,37)" fg:x="371" fg:w="5"/><text x="18.9402%" y="270.50"></text></g><g><title>_reconstruct (copy.py:270) (5 samples, 0.25%)</title><rect x="18.6902%" y="276" width="0.2519%" height="15" fill="rgb(227,149,46)" fg:x="371" fg:w="5"/><text x="18.9402%" y="286.50"></text></g><g><title>deepcopy (copy.py:146) (5 samples, 0.25%)</title><rect x="18.6902%" y="292" width="0.2519%" height="15" fill="rgb(218,36,50)" fg:x="371" fg:w="5"/><text x="18.9402%" y="302.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (4 samples, 0.20%)</title><rect x="18.7406%" y="308" width="0.2015%" height="15" fill="rgb(226,80,48)" fg:x="372" fg:w="4"/><text x="18.9906%" y="318.50"></text></g><g><title>deepcopy (copy.py:146) (3 samples, 0.15%)</title><rect x="18.7909%" y="324" width="0.1511%" height="15" fill="rgb(238,224,15)" fg:x="373" fg:w="3"/><text x="19.0409%" y="334.50"></text></g><g><title>deepcopy (copy.py:146) (11 samples, 0.55%)</title><rect x="18.4887%" y="196" width="0.5542%" height="15" fill="rgb(241,136,10)" fg:x="367" fg:w="11"/><text x="18.7387%" y="206.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (11 samples, 0.55%)</title><rect x="18.4887%" y="212" width="0.5542%" height="15" fill="rgb(208,32,45)" fg:x="367" fg:w="11"/><text x="18.7387%" y="222.50"></text></g><g><title>deepcopy (copy.py:146) (7 samples, 0.35%)</title><rect x="18.6902%" y="228" width="0.3526%" height="15" fill="rgb(207,135,9)" fg:x="371" fg:w="7"/><text x="18.9402%" y="238.50"></text></g><g><title>_deepcopy_list (copy.py:205) (7 samples, 0.35%)</title><rect x="18.6902%" y="244" width="0.3526%" height="15" fill="rgb(206,86,44)" fg:x="371" fg:w="7"/><text x="18.9402%" y="254.50"></text></g><g><title>execute (real_diff_SA.py:246) (15 samples, 0.76%)</title><rect x="18.3375%" y="132" width="0.7557%" height="15" fill="rgb(245,177,15)" fg:x="364" fg:w="15"/><text x="18.5875%" y="142.50"></text></g><g><title>get_server_copy (real_diff_evaluation.py:187) (15 samples, 0.76%)</title><rect x="18.3375%" y="148" width="0.7557%" height="15" fill="rgb(206,64,50)" fg:x="364" fg:w="15"/><text x="18.5875%" y="158.50"></text></g><g><title>deepcopy (copy.py:172) (13 samples, 0.65%)</title><rect x="18.4383%" y="164" width="0.6549%" height="15" fill="rgb(234,36,40)" fg:x="366" fg:w="13"/><text x="18.6883%" y="174.50"></text></g><g><title>_reconstruct (copy.py:270) (12 samples, 0.60%)</title><rect x="18.4887%" y="180" width="0.6045%" height="15" fill="rgb(213,64,8)" fg:x="367" fg:w="12"/><text x="18.7387%" y="190.50"></text></g><g><title>execute (real_diff_SA.py:284) (2 samples, 0.10%)</title><rect x="19.2443%" y="132" width="0.1008%" height="15" fill="rgb(210,75,36)" fg:x="382" fg:w="2"/><text x="19.4943%" y="142.50"></text></g><g><title>_update_lifespan (real_diff_evaluation.py:346) (2 samples, 0.10%)</title><rect x="19.5466%" y="180" width="0.1008%" height="15" fill="rgb(229,88,21)" fg:x="388" fg:w="2"/><text x="19.7966%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:317) (4 samples, 0.20%)</title><rect x="19.5466%" y="164" width="0.2015%" height="15" fill="rgb(252,204,47)" fg:x="388" fg:w="4"/><text x="19.7966%" y="174.50"></text></g><g><title>_update_lifespan (real_diff_evaluation.py:356) (2 samples, 0.10%)</title><rect x="19.6474%" y="180" width="0.1008%" height="15" fill="rgb(208,77,27)" fg:x="390" fg:w="2"/><text x="19.8974%" y="190.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:535) (4 samples, 0.20%)</title><rect x="19.8489%" y="180" width="0.2015%" height="15" fill="rgb(221,76,26)" fg:x="394" fg:w="4"/><text x="20.0989%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:321) (10 samples, 0.50%)</title><rect x="19.7481%" y="164" width="0.5038%" height="15" fill="rgb(225,139,18)" fg:x="392" fg:w="10"/><text x="19.9981%" y="174.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:539) (3 samples, 0.15%)</title><rect x="20.1008%" y="180" width="0.1511%" height="15" fill="rgb(230,137,11)" fg:x="399" fg:w="3"/><text x="20.3508%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:327) (4 samples, 0.20%)</title><rect x="20.3023%" y="164" width="0.2015%" height="15" fill="rgb(212,28,1)" fg:x="403" fg:w="4"/><text x="20.5523%" y="174.50"></text></g><g><title>_update_energy_cost (real_diff_evaluation.py:429) (3 samples, 0.15%)</title><rect x="20.3526%" y="180" width="0.1511%" height="15" fill="rgb(248,164,17)" fg:x="404" fg:w="3"/><text x="20.6026%" y="190.50"></text></g><g><title>_update_maintenance_cost (real_diff_evaluation.py:460) (6 samples, 0.30%)</title><rect x="20.6045%" y="180" width="0.3023%" height="15" fill="rgb(222,171,42)" fg:x="409" fg:w="6"/><text x="20.8545%" y="190.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:306) (29 samples, 1.46%)</title><rect x="19.4962%" y="148" width="1.4610%" height="15" fill="rgb(243,84,45)" fg:x="387" fg:w="29"/><text x="19.7462%" y="158.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:329) (9 samples, 0.45%)</title><rect x="20.5038%" y="164" width="0.4534%" height="15" fill="rgb(252,49,23)" fg:x="407" fg:w="9"/><text x="20.7538%" y="174.50"></text></g><g><title>_update_lifespan (real_diff_evaluation.py:346) (3 samples, 0.15%)</title><rect x="20.9572%" y="180" width="0.1511%" height="15" fill="rgb(215,19,7)" fg:x="416" fg:w="3"/><text x="21.2072%" y="190.50"></text></g><g><title>_update_lifespan (real_diff_evaluation.py:347) (4 samples, 0.20%)</title><rect x="21.1083%" y="180" width="0.2015%" height="15" fill="rgb(238,81,41)" fg:x="419" fg:w="4"/><text x="21.3583%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:317) (10 samples, 0.50%)</title><rect x="20.9572%" y="164" width="0.5038%" height="15" fill="rgb(210,199,37)" fg:x="416" fg:w="10"/><text x="21.2072%" y="174.50"></text></g><g><title>_update_lifespan (real_diff_evaluation.py:352) (3 samples, 0.15%)</title><rect x="21.3098%" y="180" width="0.1511%" height="15" fill="rgb(244,192,49)" fg:x="423" fg:w="3"/><text x="21.5598%" y="190.50"></text></g><g><title>_update_fleet_size (real_diff_evaluation.py:374) (3 samples, 0.15%)</title><rect x="21.4610%" y="180" width="0.1511%" height="15" fill="rgb(226,211,11)" fg:x="426" fg:w="3"/><text x="21.7110%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:319) (4 samples, 0.20%)</title><rect x="21.4610%" y="164" width="0.2015%" height="15" fill="rgb(236,162,54)" fg:x="426" fg:w="4"/><text x="21.7110%" y="174.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:535) (5 samples, 0.25%)</title><rect x="21.7632%" y="180" width="0.2519%" height="15" fill="rgb(220,229,9)" fg:x="432" fg:w="5"/><text x="22.0132%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:321) (28 samples, 1.41%)</title><rect x="21.6625%" y="164" width="1.4106%" height="15" fill="rgb(250,87,22)" fg:x="430" fg:w="28"/><text x="21.9125%" y="174.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:539) (20 samples, 1.01%)</title><rect x="22.0655%" y="180" width="1.0076%" height="15" fill="rgb(239,43,17)" fg:x="438" fg:w="20"/><text x="22.3155%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:325) (2 samples, 0.10%)</title><rect x="23.1234%" y="164" width="0.1008%" height="15" fill="rgb(231,177,25)" fg:x="459" fg:w="2"/><text x="23.3734%" y="174.50"></text></g><g><title>_update_moving_cost (real_diff_evaluation.py:400) (2 samples, 0.10%)</title><rect x="23.1234%" y="180" width="0.1008%" height="15" fill="rgb(219,179,1)" fg:x="459" fg:w="2"/><text x="23.3734%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:327) (11 samples, 0.55%)</title><rect x="23.2242%" y="164" width="0.5542%" height="15" fill="rgb(238,219,53)" fg:x="461" fg:w="11"/><text x="23.4742%" y="174.50"></text></g><g><title>_update_energy_cost (real_diff_evaluation.py:429) (10 samples, 0.50%)</title><rect x="23.2746%" y="180" width="0.5038%" height="15" fill="rgb(232,167,36)" fg:x="462" fg:w="10"/><text x="23.5246%" y="190.50"></text></g><g><title>_update_maintenance_cost (real_diff_evaluation.py:455) (2 samples, 0.10%)</title><rect x="23.8287%" y="180" width="0.1008%" height="15" fill="rgb(244,19,51)" fg:x="473" fg:w="2"/><text x="24.0787%" y="190.50"></text></g><g><title>_update_maintenance_cost (real_diff_evaluation.py:457) (2 samples, 0.10%)</title><rect x="23.9295%" y="180" width="0.1008%" height="15" fill="rgb(224,6,22)" fg:x="475" fg:w="2"/><text x="24.1795%" y="190.50"></text></g><g><title>_update_maintenance_cost (real_diff_evaluation.py:460) (6 samples, 0.30%)</title><rect x="24.0302%" y="180" width="0.3023%" height="15" fill="rgb(224,145,5)" fg:x="477" fg:w="6"/><text x="24.2802%" y="190.50"></text></g><g><title>execute (real_diff_SA.py:302) (99 samples, 4.99%)</title><rect x="19.3955%" y="132" width="4.9874%" height="15" fill="rgb(234,130,49)" fg:x="385" fg:w="99"/><text x="19.6455%" y="142.50">execut..</text></g><g><title>apply_server_change (real_diff_evaluation.py:310) (68 samples, 3.43%)</title><rect x="20.9572%" y="148" width="3.4257%" height="15" fill="rgb(254,6,2)" fg:x="416" fg:w="68"/><text x="21.2072%" y="158.50">app..</text></g><g><title>_apply_change (real_diff_evaluation.py:329) (12 samples, 0.60%)</title><rect x="23.7783%" y="164" width="0.6045%" height="15" fill="rgb(208,96,46)" fg:x="472" fg:w="12"/><text x="24.0283%" y="174.50"></text></g><g><title>deepcopy (copy.py:146) (2 samples, 0.10%)</title><rect x="24.4836%" y="276" width="0.1008%" height="15" fill="rgb(239,3,39)" fg:x="486" fg:w="2"/><text x="24.7336%" y="286.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (2 samples, 0.10%)</title><rect x="24.4836%" y="292" width="0.1008%" height="15" fill="rgb(233,210,1)" fg:x="486" fg:w="2"/><text x="24.7336%" y="302.50"></text></g><g><title>execute (real_diff_SA.py:326) (4 samples, 0.20%)</title><rect x="24.4332%" y="132" width="0.2015%" height="15" fill="rgb(244,137,37)" fg:x="485" fg:w="4"/><text x="24.6832%" y="142.50"></text></g><g><title>deepcopy (copy.py:172) (4 samples, 0.20%)</title><rect x="24.4332%" y="148" width="0.2015%" height="15" fill="rgb(240,136,2)" fg:x="485" fg:w="4"/><text x="24.6832%" y="158.50"></text></g><g><title>_reconstruct (copy.py:270) (4 samples, 0.20%)</title><rect x="24.4332%" y="164" width="0.2015%" height="15" fill="rgb(239,18,37)" fg:x="485" fg:w="4"/><text x="24.6832%" y="174.50"></text></g><g><title>deepcopy (copy.py:146) (4 samples, 0.20%)</title><rect x="24.4332%" y="180" width="0.2015%" height="15" fill="rgb(218,185,22)" fg:x="485" fg:w="4"/><text x="24.6832%" y="190.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (4 samples, 0.20%)</title><rect x="24.4332%" y="196" width="0.2015%" height="15" fill="rgb(225,218,4)" fg:x="485" fg:w="4"/><text x="24.6832%" y="206.50"></text></g><g><title>deepcopy (copy.py:146) (4 samples, 0.20%)</title><rect x="24.4332%" y="212" width="0.2015%" height="15" fill="rgb(230,182,32)" fg:x="485" fg:w="4"/><text x="24.6832%" y="222.50"></text></g><g><title>_deepcopy_list (copy.py:205) (4 samples, 0.20%)</title><rect x="24.4332%" y="228" width="0.2015%" height="15" fill="rgb(242,56,43)" fg:x="485" fg:w="4"/><text x="24.6832%" y="238.50"></text></g><g><title>deepcopy (copy.py:172) (3 samples, 0.15%)</title><rect x="24.4836%" y="244" width="0.1511%" height="15" fill="rgb(233,99,24)" fg:x="486" fg:w="3"/><text x="24.7336%" y="254.50"></text></g><g><title>_reconstruct (copy.py:270) (3 samples, 0.15%)</title><rect x="24.4836%" y="260" width="0.1511%" height="15" fill="rgb(234,209,42)" fg:x="486" fg:w="3"/><text x="24.7336%" y="270.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:317) (2 samples, 0.10%)</title><rect x="24.7859%" y="164" width="0.1008%" height="15" fill="rgb(227,7,12)" fg:x="492" fg:w="2"/><text x="25.0359%" y="174.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:321) (2 samples, 0.10%)</title><rect x="24.8866%" y="164" width="0.1008%" height="15" fill="rgb(245,203,43)" fg:x="494" fg:w="2"/><text x="25.1366%" y="174.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:306) (10 samples, 0.50%)</title><rect x="24.7859%" y="148" width="0.5038%" height="15" fill="rgb(238,205,33)" fg:x="492" fg:w="10"/><text x="25.0359%" y="158.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:329) (3 samples, 0.15%)</title><rect x="25.1385%" y="164" width="0.1511%" height="15" fill="rgb(231,56,7)" fg:x="499" fg:w="3"/><text x="25.3885%" y="174.50"></text></g><g><title>_update_maintenance_cost (real_diff_evaluation.py:460) (3 samples, 0.15%)</title><rect x="25.1385%" y="180" width="0.1511%" height="15" fill="rgb(244,186,29)" fg:x="499" fg:w="3"/><text x="25.3885%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:317) (3 samples, 0.15%)</title><rect x="25.2897%" y="164" width="0.1511%" height="15" fill="rgb(234,111,31)" fg:x="502" fg:w="3"/><text x="25.5397%" y="174.50"></text></g><g><title>_update_lifespan (real_diff_evaluation.py:352) (2 samples, 0.10%)</title><rect x="25.3401%" y="180" width="0.1008%" height="15" fill="rgb(241,149,10)" fg:x="503" fg:w="2"/><text x="25.5901%" y="190.50"></text></g><g><title>_update_fleet_size (real_diff_evaluation.py:374) (2 samples, 0.10%)</title><rect x="25.4912%" y="180" width="0.1008%" height="15" fill="rgb(249,206,44)" fg:x="506" fg:w="2"/><text x="25.7412%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:319) (4 samples, 0.20%)</title><rect x="25.4408%" y="164" width="0.2015%" height="15" fill="rgb(251,153,30)" fg:x="505" fg:w="4"/><text x="25.6908%" y="174.50"></text></g><g><title>execute (real_diff_SA.py:342) (23 samples, 1.16%)</title><rect x="24.6348%" y="132" width="1.1587%" height="15" fill="rgb(239,152,38)" fg:x="489" fg:w="23"/><text x="24.8848%" y="142.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:310) (10 samples, 0.50%)</title><rect x="25.2897%" y="148" width="0.5038%" height="15" fill="rgb(249,139,47)" fg:x="502" fg:w="10"/><text x="25.5397%" y="158.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:327) (2 samples, 0.10%)</title><rect x="25.6927%" y="164" width="0.1008%" height="15" fill="rgb(244,64,35)" fg:x="510" fg:w="2"/><text x="25.9427%" y="174.50"></text></g><g><title>execute (real_diff_SA.py:385) (2 samples, 0.10%)</title><rect x="25.7935%" y="132" width="0.1008%" height="15" fill="rgb(216,46,15)" fg:x="512" fg:w="2"/><text x="26.0435%" y="142.50"></text></g><g><title>deepcopy (copy.py:172) (2 samples, 0.10%)</title><rect x="25.7935%" y="148" width="0.1008%" height="15" fill="rgb(250,74,19)" fg:x="512" fg:w="2"/><text x="26.0435%" y="158.50"></text></g><g><title>_reconstruct (copy.py:270) (2 samples, 0.10%)</title><rect x="25.7935%" y="164" width="0.1008%" height="15" fill="rgb(249,42,33)" fg:x="512" fg:w="2"/><text x="26.0435%" y="174.50"></text></g><g><title>deepcopy (copy.py:146) (2 samples, 0.10%)</title><rect x="25.7935%" y="180" width="0.1008%" height="15" fill="rgb(242,149,17)" fg:x="512" fg:w="2"/><text x="26.0435%" y="190.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (2 samples, 0.10%)</title><rect x="25.7935%" y="196" width="0.1008%" height="15" fill="rgb(244,29,21)" fg:x="512" fg:w="2"/><text x="26.0435%" y="206.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:317) (2 samples, 0.10%)</title><rect x="25.9950%" y="164" width="0.1008%" height="15" fill="rgb(220,130,37)" fg:x="516" fg:w="2"/><text x="26.2450%" y="174.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:327) (2 samples, 0.10%)</title><rect x="26.1965%" y="164" width="0.1008%" height="15" fill="rgb(211,67,2)" fg:x="520" fg:w="2"/><text x="26.4465%" y="174.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:306) (8 samples, 0.40%)</title><rect x="25.9950%" y="148" width="0.4030%" height="15" fill="rgb(235,68,52)" fg:x="516" fg:w="8"/><text x="26.2450%" y="158.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:329) (2 samples, 0.10%)</title><rect x="26.2972%" y="164" width="0.1008%" height="15" fill="rgb(246,142,3)" fg:x="522" fg:w="2"/><text x="26.5472%" y="174.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:535) (2 samples, 0.10%)</title><rect x="26.3980%" y="180" width="0.1008%" height="15" fill="rgb(241,25,7)" fg:x="524" fg:w="2"/><text x="26.6480%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:321) (5 samples, 0.25%)</title><rect x="26.3980%" y="164" width="0.2519%" height="15" fill="rgb(242,119,39)" fg:x="524" fg:w="5"/><text x="26.6480%" y="174.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:539) (2 samples, 0.10%)</title><rect x="26.5491%" y="180" width="0.1008%" height="15" fill="rgb(241,98,45)" fg:x="527" fg:w="2"/><text x="26.7991%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:327) (3 samples, 0.15%)</title><rect x="26.6499%" y="164" width="0.1511%" height="15" fill="rgb(254,28,30)" fg:x="529" fg:w="3"/><text x="26.8999%" y="174.50"></text></g><g><title>execute (real_diff_SA.py:399) (20 samples, 1.01%)</title><rect x="25.8942%" y="132" width="1.0076%" height="15" fill="rgb(241,142,54)" fg:x="514" fg:w="20"/><text x="26.1442%" y="142.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:310) (10 samples, 0.50%)</title><rect x="26.3980%" y="148" width="0.5038%" height="15" fill="rgb(222,85,15)" fg:x="524" fg:w="10"/><text x="26.6480%" y="158.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:329) (2 samples, 0.10%)</title><rect x="26.8010%" y="164" width="0.1008%" height="15" fill="rgb(210,85,47)" fg:x="532" fg:w="2"/><text x="27.0510%" y="174.50"></text></g><g><title>execute (real_diff_SA.py:410) (3 samples, 0.15%)</title><rect x="27.0529%" y="132" width="0.1511%" height="15" fill="rgb(224,206,25)" fg:x="537" fg:w="3"/><text x="27.3029%" y="142.50"></text></g><g><title>deepcopy (copy.py:138) (2 samples, 0.10%)</title><rect x="27.5063%" y="228" width="0.1008%" height="15" fill="rgb(243,201,19)" fg:x="546" fg:w="2"/><text x="27.7563%" y="238.50"></text></g><g><title>deepcopy (copy.py:137) (2 samples, 0.10%)</title><rect x="28.1612%" y="324" width="0.1008%" height="15" fill="rgb(236,59,4)" fg:x="559" fg:w="2"/><text x="28.4112%" y="334.50"></text></g><g><title>deepcopy (copy.py:146) (11 samples, 0.55%)</title><rect x="27.9093%" y="292" width="0.5542%" height="15" fill="rgb(254,179,45)" fg:x="554" fg:w="11"/><text x="28.1593%" y="302.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (10 samples, 0.50%)</title><rect x="27.9597%" y="308" width="0.5038%" height="15" fill="rgb(226,14,10)" fg:x="555" fg:w="10"/><text x="28.2097%" y="318.50"></text></g><g><title>deepcopy (copy.py:146) (3 samples, 0.15%)</title><rect x="28.3123%" y="324" width="0.1511%" height="15" fill="rgb(244,27,41)" fg:x="562" fg:w="3"/><text x="28.5623%" y="334.50"></text></g><g><title>deepcopy (copy.py:146) (20 samples, 1.01%)</title><rect x="27.6574%" y="228" width="1.0076%" height="15" fill="rgb(235,35,32)" fg:x="549" fg:w="20"/><text x="27.9074%" y="238.50"></text></g><g><title>_deepcopy_list (copy.py:205) (18 samples, 0.91%)</title><rect x="27.7582%" y="244" width="0.9068%" height="15" fill="rgb(218,68,31)" fg:x="551" fg:w="18"/><text x="28.0082%" y="254.50"></text></g><g><title>deepcopy (copy.py:172) (17 samples, 0.86%)</title><rect x="27.8086%" y="260" width="0.8564%" height="15" fill="rgb(207,120,37)" fg:x="552" fg:w="17"/><text x="28.0586%" y="270.50"></text></g><g><title>_reconstruct (copy.py:270) (15 samples, 0.76%)</title><rect x="27.9093%" y="276" width="0.7557%" height="15" fill="rgb(227,98,0)" fg:x="554" fg:w="15"/><text x="28.1593%" y="286.50"></text></g><g><title>deepcopy (copy.py:177) (3 samples, 0.15%)</title><rect x="28.5139%" y="292" width="0.1511%" height="15" fill="rgb(207,7,3)" fg:x="566" fg:w="3"/><text x="28.7639%" y="302.50"></text></g><g><title>_keep_alive (copy.py:253) (3 samples, 0.15%)</title><rect x="28.5139%" y="308" width="0.1511%" height="15" fill="rgb(206,98,19)" fg:x="566" fg:w="3"/><text x="28.7639%" y="318.50"></text></g><g><title>_reconstruct (copy.py:270) (28 samples, 1.41%)</title><rect x="27.3048%" y="180" width="1.4106%" height="15" fill="rgb(217,5,26)" fg:x="542" fg:w="28"/><text x="27.5548%" y="190.50"></text></g><g><title>deepcopy (copy.py:146) (28 samples, 1.41%)</title><rect x="27.3048%" y="196" width="1.4106%" height="15" fill="rgb(235,190,38)" fg:x="542" fg:w="28"/><text x="27.5548%" y="206.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (28 samples, 1.41%)</title><rect x="27.3048%" y="212" width="1.4106%" height="15" fill="rgb(247,86,24)" fg:x="542" fg:w="28"/><text x="27.5548%" y="222.50"></text></g><g><title>execute (real_diff_SA.py:411) (32 samples, 1.61%)</title><rect x="27.2040%" y="132" width="1.6121%" height="15" fill="rgb(205,101,16)" fg:x="540" fg:w="32"/><text x="27.4540%" y="142.50"></text></g><g><title>get_server_copy (real_diff_evaluation.py:187) (32 samples, 1.61%)</title><rect x="27.2040%" y="148" width="1.6121%" height="15" fill="rgb(246,168,33)" fg:x="540" fg:w="32"/><text x="27.4540%" y="158.50"></text></g><g><title>deepcopy (copy.py:172) (31 samples, 1.56%)</title><rect x="27.2544%" y="164" width="1.5617%" height="15" fill="rgb(231,114,1)" fg:x="541" fg:w="31"/><text x="27.5044%" y="174.50"></text></g><g><title>execute (real_diff_SA.py:414) (2 samples, 0.10%)</title><rect x="28.8161%" y="132" width="0.1008%" height="15" fill="rgb(207,184,53)" fg:x="572" fg:w="2"/><text x="29.0661%" y="142.50"></text></g><g><title>choice (random.py:346) (2 samples, 0.10%)</title><rect x="28.8161%" y="148" width="0.1008%" height="15" fill="rgb(224,95,51)" fg:x="572" fg:w="2"/><text x="29.0661%" y="158.50"></text></g><g><title>get_adjustable_time_range (real_diff_SA.py:462) (6 samples, 0.30%)</title><rect x="28.9673%" y="148" width="0.3023%" height="15" fill="rgb(212,188,45)" fg:x="575" fg:w="6"/><text x="29.2173%" y="158.50"></text></g><g><title>wrapper (dataclasses.py:370) (5 samples, 0.25%)</title><rect x="29.0176%" y="164" width="0.2519%" height="15" fill="rgb(223,154,38)" fg:x="576" fg:w="5"/><text x="29.2676%" y="174.50"></text></g><g><title>__repr__ (&lt;string&gt;:3) (5 samples, 0.25%)</title><rect x="29.0176%" y="180" width="0.2519%" height="15" fill="rgb(251,22,52)" fg:x="576" fg:w="5"/><text x="29.2676%" y="190.50"></text></g><g><title>wrapper (dataclasses.py:370) (3 samples, 0.15%)</title><rect x="29.1184%" y="196" width="0.1511%" height="15" fill="rgb(229,209,22)" fg:x="578" fg:w="3"/><text x="29.3684%" y="206.50"></text></g><g><title>__repr__ (&lt;string&gt;:3) (3 samples, 0.15%)</title><rect x="29.1184%" y="212" width="0.1511%" height="15" fill="rgb(234,138,34)" fg:x="578" fg:w="3"/><text x="29.3684%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4063) (2 samples, 0.10%)</title><rect x="29.3703%" y="164" width="0.1008%" height="15" fill="rgb(212,95,11)" fg:x="583" fg:w="2"/><text x="29.6203%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4075) (2 samples, 0.10%)</title><rect x="29.5718%" y="164" width="0.1008%" height="15" fill="rgb(240,179,47)" fg:x="587" fg:w="2"/><text x="29.8218%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4092) (3 samples, 0.15%)</title><rect x="29.6725%" y="164" width="0.1511%" height="15" fill="rgb(240,163,11)" fg:x="589" fg:w="3"/><text x="29.9225%" y="174.50"></text></g><g><title>check_bool_indexer (pandas/core/indexing.py:2674) (6 samples, 0.30%)</title><rect x="29.9748%" y="196" width="0.3023%" height="15" fill="rgb(236,37,12)" fg:x="595" fg:w="6"/><text x="30.2248%" y="206.50"></text></g><g><title>is_object_dtype (pandas/core/dtypes/common.py:165) (6 samples, 0.30%)</title><rect x="29.9748%" y="212" width="0.3023%" height="15" fill="rgb(232,164,16)" fg:x="595" fg:w="6"/><text x="30.2248%" y="222.50"></text></g><g><title>_is_dtype_type (pandas/core/dtypes/common.py:1475) (2 samples, 0.10%)</title><rect x="30.1763%" y="228" width="0.1008%" height="15" fill="rgb(244,205,15)" fg:x="599" fg:w="2"/><text x="30.4263%" y="238.50"></text></g><g><title>check_array_indexer (pandas/core/indexers/utils.py:511) (2 samples, 0.10%)</title><rect x="30.3275%" y="212" width="0.1008%" height="15" fill="rgb(223,117,47)" fg:x="602" fg:w="2"/><text x="30.5775%" y="222.50"></text></g><g><title>check_array_indexer (pandas/core/indexers/utils.py:530) (3 samples, 0.15%)</title><rect x="30.4282%" y="212" width="0.1511%" height="15" fill="rgb(244,107,35)" fg:x="604" fg:w="3"/><text x="30.6782%" y="222.50"></text></g><g><title>dtype (pandas/core/series.py:718) (3 samples, 0.15%)</title><rect x="30.4282%" y="228" width="0.1511%" height="15" fill="rgb(205,140,8)" fg:x="604" fg:w="3"/><text x="30.6782%" y="238.50"></text></g><g><title>check_array_indexer (pandas/core/indexers/utils.py:531) (2 samples, 0.10%)</title><rect x="30.5793%" y="212" width="0.1008%" height="15" fill="rgb(228,84,46)" fg:x="607" fg:w="2"/><text x="30.8293%" y="222.50"></text></g><g><title>is_bool_dtype (pandas/core/dtypes/common.py:1242) (2 samples, 0.10%)</title><rect x="30.5793%" y="228" width="0.1008%" height="15" fill="rgb(254,188,9)" fg:x="607" fg:w="2"/><text x="30.8293%" y="238.50"></text></g><g><title>__array__ (pandas/core/series.py:1031) (2 samples, 0.10%)</title><rect x="30.8312%" y="228" width="0.1008%" height="15" fill="rgb(206,112,54)" fg:x="612" fg:w="2"/><text x="31.0812%" y="238.50"></text></g><g><title>_can_hold_identifiers_and_holds_name (pandas/core/indexes/base.py:5448) (3 samples, 0.15%)</title><rect x="31.0831%" y="244" width="0.1511%" height="15" fill="rgb(216,84,49)" fg:x="617" fg:w="3"/><text x="31.3331%" y="254.50"></text></g><g><title>is_object_dtype (pandas/core/dtypes/common.py:165) (2 samples, 0.10%)</title><rect x="31.1335%" y="260" width="0.1008%" height="15" fill="rgb(214,194,35)" fg:x="618" fg:w="2"/><text x="31.3835%" y="270.50"></text></g><g><title>condition (pandas/core/dtypes/common.py:573) (2 samples, 0.10%)</title><rect x="31.3854%" y="292" width="0.1008%" height="15" fill="rgb(249,28,3)" fg:x="623" fg:w="2"/><text x="31.6354%" y="302.50"></text></g><g><title>is_string_or_object_np_dtype (pandas/core/dtypes/common.py:533) (2 samples, 0.10%)</title><rect x="31.3854%" y="308" width="0.1008%" height="15" fill="rgb(222,56,52)" fg:x="623" fg:w="2"/><text x="31.6354%" y="318.50"></text></g><g><title>_can_hold_identifiers_and_holds_name (pandas/core/indexes/base.py:5449) (6 samples, 0.30%)</title><rect x="31.2343%" y="244" width="0.3023%" height="15" fill="rgb(245,217,50)" fg:x="620" fg:w="6"/><text x="31.4843%" y="254.50"></text></g><g><title>is_string_dtype (pandas/core/dtypes/common.py:580) (3 samples, 0.15%)</title><rect x="31.3854%" y="260" width="0.1511%" height="15" fill="rgb(213,201,24)" fg:x="623" fg:w="3"/><text x="31.6354%" y="270.50"></text></g><g><title>_is_dtype (pandas/core/dtypes/common.py:1396) (3 samples, 0.15%)</title><rect x="31.3854%" y="276" width="0.1511%" height="15" fill="rgb(248,116,28)" fg:x="623" fg:w="3"/><text x="31.6354%" y="286.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4149) (34 samples, 1.71%)</title><rect x="29.8741%" y="180" width="1.7128%" height="15" fill="rgb(219,72,43)" fg:x="593" fg:w="34"/><text x="30.1241%" y="190.50"></text></g><g><title>check_bool_indexer (pandas/core/indexing.py:2681) (25 samples, 1.26%)</title><rect x="30.3275%" y="196" width="1.2594%" height="15" fill="rgb(209,138,14)" fg:x="602" fg:w="25"/><text x="30.5775%" y="206.50"></text></g><g><title>check_array_indexer (pandas/core/indexers/utils.py:535) (18 samples, 0.91%)</title><rect x="30.6801%" y="212" width="0.9068%" height="15" fill="rgb(222,18,33)" fg:x="609" fg:w="18"/><text x="30.9301%" y="222.50"></text></g><g><title>__getattr__ (pandas/core/generic.py:6296) (10 samples, 0.50%)</title><rect x="31.0831%" y="228" width="0.5038%" height="15" fill="rgb(213,199,7)" fg:x="617" fg:w="10"/><text x="31.3331%" y="238.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4151) (7 samples, 0.35%)</title><rect x="31.5869%" y="180" width="0.3526%" height="15" fill="rgb(250,110,10)" fg:x="627" fg:w="7"/><text x="31.8369%" y="190.50"></text></g><g><title>_all (numpy/core/_methods.py:64) (7 samples, 0.35%)</title><rect x="31.5869%" y="196" width="0.3526%" height="15" fill="rgb(248,123,6)" fg:x="627" fg:w="7"/><text x="31.8369%" y="206.50"></text></g><g><title>take (pandas/core/generic.py:4103) (2 samples, 0.10%)</title><rect x="32.0403%" y="212" width="0.1008%" height="15" fill="rgb(206,91,31)" fg:x="636" fg:w="2"/><text x="32.2903%" y="222.50"></text></g><g><title>take (pandas/core/internals/managers.py:890) (2 samples, 0.10%)</title><rect x="32.1914%" y="228" width="0.1008%" height="15" fill="rgb(211,154,13)" fg:x="639" fg:w="2"/><text x="32.4414%" y="238.50"></text></g><g><title>shape (pandas/core/internals/base.py:84) (2 samples, 0.10%)</title><rect x="32.1914%" y="244" width="0.1008%" height="15" fill="rgb(225,148,7)" fg:x="639" fg:w="2"/><text x="32.4414%" y="254.50"></text></g><g><title>maybe_convert_indices (pandas/core/indexers/utils.py:274) (4 samples, 0.20%)</title><rect x="32.2922%" y="244" width="0.2015%" height="15" fill="rgb(220,160,43)" fg:x="641" fg:w="4"/><text x="32.5422%" y="254.50"></text></g><g><title>maybe_convert_indices (pandas/core/indexers/utils.py:275) (5 samples, 0.25%)</title><rect x="32.4937%" y="244" width="0.2519%" height="15" fill="rgb(213,52,39)" fg:x="645" fg:w="5"/><text x="32.7437%" y="254.50"></text></g><g><title>_any (numpy/core/_methods.py:58) (3 samples, 0.15%)</title><rect x="32.5945%" y="260" width="0.1511%" height="15" fill="rgb(243,137,7)" fg:x="647" fg:w="3"/><text x="32.8445%" y="270.50"></text></g><g><title>maybe_convert_indices (pandas/core/indexers/utils.py:280) (2 samples, 0.10%)</title><rect x="32.7456%" y="244" width="0.1008%" height="15" fill="rgb(230,79,13)" fg:x="650" fg:w="2"/><text x="32.9956%" y="254.50"></text></g><g><title>take (pandas/core/internals/managers.py:891) (14 samples, 0.71%)</title><rect x="32.2922%" y="228" width="0.7053%" height="15" fill="rgb(247,105,23)" fg:x="641" fg:w="14"/><text x="32.5422%" y="238.50"></text></g><g><title>maybe_convert_indices (pandas/core/indexers/utils.py:281) (3 samples, 0.15%)</title><rect x="32.8463%" y="244" width="0.1511%" height="15" fill="rgb(223,179,41)" fg:x="652" fg:w="3"/><text x="33.0963%" y="254.50"></text></g><g><title>_any (numpy/core/_methods.py:58) (3 samples, 0.15%)</title><rect x="32.8463%" y="260" width="0.1511%" height="15" fill="rgb(218,9,34)" fg:x="652" fg:w="3"/><text x="33.0963%" y="270.50"></text></g><g><title>take (pandas/core/indexes/range.py:1173) (5 samples, 0.25%)</title><rect x="33.0982%" y="244" width="0.2519%" height="15" fill="rgb(222,106,8)" fg:x="657" fg:w="5"/><text x="33.3482%" y="254.50"></text></g><g><title>_amin (numpy/core/_methods.py:45) (3 samples, 0.15%)</title><rect x="33.1990%" y="260" width="0.1511%" height="15" fill="rgb(211,220,0)" fg:x="659" fg:w="3"/><text x="33.4490%" y="270.50"></text></g><g><title>take (pandas/core/indexes/range.py:1178) (2 samples, 0.10%)</title><rect x="33.3501%" y="244" width="0.1008%" height="15" fill="rgb(229,52,16)" fg:x="662" fg:w="2"/><text x="33.6001%" y="254.50"></text></g><g><title>take (pandas/core/internals/managers.py:893) (12 samples, 0.60%)</title><rect x="32.9975%" y="228" width="0.6045%" height="15" fill="rgb(212,155,18)" fg:x="655" fg:w="12"/><text x="33.2475%" y="238.50"></text></g><g><title>take (pandas/core/indexes/range.py:1187) (2 samples, 0.10%)</title><rect x="33.5013%" y="244" width="0.1008%" height="15" fill="rgb(242,21,14)" fg:x="665" fg:w="2"/><text x="33.7513%" y="254.50"></text></g><g><title>_simple_new (pandas/core/indexes/base.py:670) (2 samples, 0.10%)</title><rect x="33.5013%" y="260" width="0.1008%" height="15" fill="rgb(222,19,48)" fg:x="665" fg:w="2"/><text x="33.7513%" y="270.50"></text></g><g><title>maybe_promote (pandas/core/dtypes/cast.py:579) (6 samples, 0.30%)</title><rect x="34.0050%" y="340" width="0.3023%" height="15" fill="rgb(232,45,27)" fg:x="675" fg:w="6"/><text x="34.2550%" y="350.50"></text></g><g><title>_take_preprocess_indexer_and_fill_value (pandas/core/array_algos/take.py:579) (11 samples, 0.55%)</title><rect x="33.8539%" y="324" width="0.5542%" height="15" fill="rgb(249,103,42)" fg:x="672" fg:w="11"/><text x="34.1039%" y="334.50"></text></g><g><title>_take_preprocess_indexer_and_fill_value (pandas/core/array_algos/take.py:585) (2 samples, 0.10%)</title><rect x="34.4584%" y="324" width="0.1008%" height="15" fill="rgb(246,81,33)" fg:x="684" fg:w="2"/><text x="34.7084%" y="334.50"></text></g><g><title>_take_preprocess_indexer_and_fill_value (pandas/core/array_algos/take.py:586) (2 samples, 0.10%)</title><rect x="34.5592%" y="324" width="0.1008%" height="15" fill="rgb(252,33,42)" fg:x="686" fg:w="2"/><text x="34.8092%" y="334.50"></text></g><g><title>_take_nd_ndarray (pandas/core/array_algos/take.py:133) (18 samples, 0.91%)</title><rect x="33.8035%" y="308" width="0.9068%" height="15" fill="rgb(209,212,41)" fg:x="671" fg:w="18"/><text x="34.0535%" y="318.50"></text></g><g><title>_take_nd_ndarray (pandas/core/array_algos/take.py:149) (2 samples, 0.10%)</title><rect x="34.7607%" y="308" width="0.1008%" height="15" fill="rgb(207,154,6)" fg:x="690" fg:w="2"/><text x="35.0107%" y="318.50"></text></g><g><title>_take_nd_ndarray (pandas/core/array_algos/take.py:159) (2 samples, 0.10%)</title><rect x="34.9622%" y="308" width="0.1008%" height="15" fill="rgb(223,64,47)" fg:x="694" fg:w="2"/><text x="35.2122%" y="318.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1307) (31 samples, 1.56%)</title><rect x="33.7028%" y="276" width="1.5617%" height="15" fill="rgb(211,161,38)" fg:x="669" fg:w="31"/><text x="33.9528%" y="286.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (30 samples, 1.51%)</title><rect x="33.7531%" y="292" width="1.5113%" height="15" fill="rgb(219,138,40)" fg:x="670" fg:w="30"/><text x="34.0031%" y="302.50"></text></g><g><title>_take_nd_ndarray (pandas/core/array_algos/take.py:162) (4 samples, 0.20%)</title><rect x="35.0630%" y="308" width="0.2015%" height="15" fill="rgb(241,228,46)" fg:x="696" fg:w="4"/><text x="35.3130%" y="318.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:688) (39 samples, 1.96%)</title><rect x="33.6524%" y="260" width="1.9647%" height="15" fill="rgb(223,209,38)" fg:x="668" fg:w="39"/><text x="33.9024%" y="270.50">&lt;..</text></g><g><title>take_nd (pandas/core/internals/blocks.py:1325) (5 samples, 0.25%)</title><rect x="35.3652%" y="276" width="0.2519%" height="15" fill="rgb(236,164,45)" fg:x="702" fg:w="5"/><text x="35.6152%" y="286.50"></text></g><g><title>make_block_same_class (pandas/core/internals/blocks.py:306) (2 samples, 0.10%)</title><rect x="35.5164%" y="292" width="0.1008%" height="15" fill="rgb(231,15,5)" fg:x="705" fg:w="2"/><text x="35.7664%" y="302.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:687) (40 samples, 2.02%)</title><rect x="33.6524%" y="244" width="2.0151%" height="15" fill="rgb(252,35,15)" fg:x="668" fg:w="40"/><text x="33.9024%" y="254.50">r..</text></g><g><title>take (pandas/core/generic.py:4133) (72 samples, 3.63%)</title><rect x="32.1411%" y="212" width="3.6272%" height="15" fill="rgb(248,181,18)" fg:x="638" fg:w="72"/><text x="32.3911%" y="222.50">take..</text></g><g><title>take (pandas/core/internals/managers.py:894) (43 samples, 2.17%)</title><rect x="33.6020%" y="228" width="2.1662%" height="15" fill="rgb(233,39,42)" fg:x="667" fg:w="43"/><text x="33.8520%" y="238.50">t..</text></g><g><title>_take_with_is_copy (pandas/core/generic.py:4153) (77 samples, 3.88%)</title><rect x="32.0403%" y="196" width="3.8791%" height="15" fill="rgb(238,110,33)" fg:x="636" fg:w="77"/><text x="32.2903%" y="206.50">_tak..</text></g><g><title>take (pandas/core/generic.py:4138) (3 samples, 0.15%)</title><rect x="35.7683%" y="212" width="0.1511%" height="15" fill="rgb(233,195,10)" fg:x="710" fg:w="3"/><text x="36.0183%" y="222.50"></text></g><g><title>_constructor_from_mgr (pandas/core/frame.py:660) (2 samples, 0.10%)</title><rect x="35.8186%" y="228" width="0.1008%" height="15" fill="rgb(254,105,3)" fg:x="711" fg:w="2"/><text x="36.0686%" y="238.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4093) (123 samples, 6.20%)</title><rect x="29.8237%" y="164" width="6.1965%" height="15" fill="rgb(221,225,9)" fg:x="592" fg:w="123"/><text x="30.0737%" y="174.50">__getite..</text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4155) (80 samples, 4.03%)</title><rect x="31.9899%" y="180" width="4.0302%" height="15" fill="rgb(224,227,45)" fg:x="635" fg:w="80"/><text x="32.2399%" y="190.50">_get..</text></g><g><title>fast_xs (pandas/core/internals/managers.py:1001) (2 samples, 0.10%)</title><rect x="36.0705%" y="212" width="0.1008%" height="15" fill="rgb(229,198,43)" fg:x="716" fg:w="2"/><text x="36.3205%" y="222.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:1002) (4 samples, 0.20%)</title><rect x="36.1713%" y="212" width="0.2015%" height="15" fill="rgb(206,209,35)" fg:x="718" fg:w="4"/><text x="36.4213%" y="222.50"></text></g><g><title>fast_xs (pandas/core/internals/managers.py:984) (2 samples, 0.10%)</title><rect x="36.4232%" y="212" width="0.1008%" height="15" fill="rgb(245,195,53)" fg:x="723" fg:w="2"/><text x="36.6732%" y="222.50"></text></g><g><title>_ixs (pandas/core/frame.py:3996) (10 samples, 0.50%)</title><rect x="36.0705%" y="196" width="0.5038%" height="15" fill="rgb(240,92,26)" fg:x="716" fg:w="10"/><text x="36.3205%" y="206.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1191) (12 samples, 0.60%)</title><rect x="36.0202%" y="164" width="0.6045%" height="15" fill="rgb(207,40,23)" fg:x="715" fg:w="12"/><text x="36.2702%" y="174.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1754) (11 samples, 0.55%)</title><rect x="36.0705%" y="180" width="0.5542%" height="15" fill="rgb(223,111,35)" fg:x="716" fg:w="11"/><text x="36.3205%" y="190.50"></text></g><g><title>_cmp_method (pandas/core/series.py:6111) (2 samples, 0.10%)</title><rect x="36.6751%" y="196" width="0.1008%" height="15" fill="rgb(229,147,28)" fg:x="728" fg:w="2"/><text x="36.9251%" y="206.50"></text></g><g><title>comparison_op (pandas/core/ops/array_ops.py:332) (2 samples, 0.10%)</title><rect x="36.8766%" y="212" width="0.1008%" height="15" fill="rgb(211,29,28)" fg:x="732" fg:w="2"/><text x="37.1266%" y="222.50"></text></g><g><title>isna (pandas/core/dtypes/missing.py:178) (2 samples, 0.10%)</title><rect x="36.8766%" y="228" width="0.1008%" height="15" fill="rgb(228,72,33)" fg:x="732" fg:w="2"/><text x="37.1266%" y="238.50"></text></g><g><title>_cmp_method (pandas/core/series.py:6119) (6 samples, 0.30%)</title><rect x="36.8262%" y="196" width="0.3023%" height="15" fill="rgb(205,214,31)" fg:x="731" fg:w="6"/><text x="37.0762%" y="206.50"></text></g><g><title>comparison_op (pandas/core/ops/array_ops.py:344) (2 samples, 0.10%)</title><rect x="37.0277%" y="212" width="0.1008%" height="15" fill="rgb(224,111,15)" fg:x="735" fg:w="2"/><text x="37.2777%" y="222.50"></text></g><g><title>comp_method_OBJECT_ARRAY (pandas/core/ops/array_ops.py:129) (2 samples, 0.10%)</title><rect x="37.0277%" y="228" width="0.1008%" height="15" fill="rgb(253,21,26)" fg:x="735" fg:w="2"/><text x="37.2777%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (2 samples, 0.10%)</title><rect x="37.2796%" y="228" width="0.1008%" height="15" fill="rgb(245,139,43)" fg:x="740" fg:w="2"/><text x="37.5296%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:586) (3 samples, 0.15%)</title><rect x="37.3804%" y="228" width="0.1511%" height="15" fill="rgb(252,170,7)" fg:x="742" fg:w="3"/><text x="37.6304%" y="238.50"></text></g><g><title>_get_option (pandas/_config/config.py:149) (3 samples, 0.15%)</title><rect x="37.3804%" y="244" width="0.1511%" height="15" fill="rgb(231,118,14)" fg:x="742" fg:w="3"/><text x="37.6304%" y="254.50"></text></g><g><title>_get_root (pandas/_config/config.py:636) (2 samples, 0.10%)</title><rect x="37.4307%" y="260" width="0.1008%" height="15" fill="rgb(238,83,0)" fg:x="743" fg:w="2"/><text x="37.6807%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (2 samples, 0.10%)</title><rect x="37.5315%" y="228" width="0.1008%" height="15" fill="rgb(221,39,39)" fg:x="745" fg:w="2"/><text x="37.7815%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:592) (4 samples, 0.20%)</title><rect x="37.6322%" y="228" width="0.2015%" height="15" fill="rgb(222,119,46)" fg:x="747" fg:w="4"/><text x="37.8822%" y="238.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (4 samples, 0.20%)</title><rect x="37.8338%" y="244" width="0.2015%" height="15" fill="rgb(222,165,49)" fg:x="751" fg:w="4"/><text x="38.0838%" y="254.50"></text></g><g><title>name (pandas/core/series.py:782) (3 samples, 0.15%)</title><rect x="37.8841%" y="260" width="0.1511%" height="15" fill="rgb(219,113,52)" fg:x="752" fg:w="3"/><text x="38.1341%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (6 samples, 0.30%)</title><rect x="37.8338%" y="228" width="0.3023%" height="15" fill="rgb(214,7,15)" fg:x="751" fg:w="6"/><text x="38.0838%" y="238.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6320) (2 samples, 0.10%)</title><rect x="38.0353%" y="244" width="0.1008%" height="15" fill="rgb(235,32,4)" fg:x="755" fg:w="2"/><text x="38.2853%" y="254.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (20 samples, 1.01%)</title><rect x="37.1788%" y="212" width="1.0076%" height="15" fill="rgb(238,90,54)" fg:x="738" fg:w="20"/><text x="37.4288%" y="222.50"></text></g><g><title>_construct_result (pandas/core/series.py:6232) (3 samples, 0.15%)</title><rect x="38.1864%" y="212" width="0.1511%" height="15" fill="rgb(213,208,19)" fg:x="758" fg:w="3"/><text x="38.4364%" y="222.50"></text></g><g><title>execute (real_diff_SA.py:417) (188 samples, 9.47%)</title><rect x="28.9169%" y="132" width="9.4710%" height="15" fill="rgb(233,156,4)" fg:x="574" fg:w="188"/><text x="29.1669%" y="142.50">execute (real_..</text></g><g><title>get_adjustable_time_range (real_diff_SA.py:463) (181 samples, 9.12%)</title><rect x="29.2695%" y="148" width="9.1184%" height="15" fill="rgb(207,194,5)" fg:x="581" fg:w="181"/><text x="29.5195%" y="158.50">get_adjustabl..</text></g><g><title>new_method (pandas/core/ops/common.py:76) (34 samples, 1.71%)</title><rect x="36.6751%" y="164" width="1.7128%" height="15" fill="rgb(206,111,30)" fg:x="728" fg:w="34"/><text x="36.9251%" y="174.50"></text></g><g><title>__eq__ (pandas/core/arraylike.py:40) (34 samples, 1.71%)</title><rect x="36.6751%" y="180" width="1.7128%" height="15" fill="rgb(243,70,54)" fg:x="728" fg:w="34"/><text x="36.9251%" y="190.50"></text></g><g><title>_cmp_method (pandas/core/series.py:6121) (25 samples, 1.26%)</title><rect x="37.1285%" y="196" width="1.2594%" height="15" fill="rgb(242,28,8)" fg:x="737" fg:w="25"/><text x="37.3785%" y="206.50"></text></g><g><title>execute (real_diff_SA.py:423) (2 samples, 0.10%)</title><rect x="38.3879%" y="132" width="0.1008%" height="15" fill="rgb(219,106,18)" fg:x="762" fg:w="2"/><text x="38.6379%" y="142.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:317) (2 samples, 0.10%)</title><rect x="38.5390%" y="196" width="0.1008%" height="15" fill="rgb(244,222,10)" fg:x="765" fg:w="2"/><text x="38.7890%" y="206.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:321) (4 samples, 0.20%)</title><rect x="38.6398%" y="196" width="0.2015%" height="15" fill="rgb(236,179,52)" fg:x="767" fg:w="4"/><text x="38.8898%" y="206.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:539) (3 samples, 0.15%)</title><rect x="38.6902%" y="212" width="0.1511%" height="15" fill="rgb(213,23,39)" fg:x="768" fg:w="3"/><text x="38.9402%" y="222.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:306) (11 samples, 0.55%)</title><rect x="38.5390%" y="180" width="0.5542%" height="15" fill="rgb(238,48,10)" fg:x="765" fg:w="11"/><text x="38.7890%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:329) (3 samples, 0.15%)</title><rect x="38.9421%" y="196" width="0.1511%" height="15" fill="rgb(251,196,23)" fg:x="773" fg:w="3"/><text x="39.1921%" y="206.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:321) (5 samples, 0.25%)</title><rect x="39.1436%" y="196" width="0.2519%" height="15" fill="rgb(250,152,24)" fg:x="777" fg:w="5"/><text x="39.3936%" y="206.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:539) (5 samples, 0.25%)</title><rect x="39.1436%" y="212" width="0.2519%" height="15" fill="rgb(209,150,17)" fg:x="777" fg:w="5"/><text x="39.3936%" y="222.50"></text></g><g><title>execute (real_diff_SA.py:425) (21 samples, 1.06%)</title><rect x="38.4887%" y="132" width="1.0579%" height="15" fill="rgb(234,202,34)" fg:x="764" fg:w="21"/><text x="38.7387%" y="142.50"></text></g><g><title>adjust_purchase_time (real_diff_SA.py:567) (21 samples, 1.06%)</title><rect x="38.4887%" y="148" width="1.0579%" height="15" fill="rgb(253,148,53)" fg:x="764" fg:w="21"/><text x="38.7387%" y="158.50"></text></g><g><title>apply_time_adjustment (real_diff_SA.py:597) (21 samples, 1.06%)</title><rect x="38.4887%" y="164" width="1.0579%" height="15" fill="rgb(218,129,16)" fg:x="764" fg:w="21"/><text x="38.7387%" y="174.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:310) (9 samples, 0.45%)</title><rect x="39.0932%" y="180" width="0.4534%" height="15" fill="rgb(216,85,19)" fg:x="776" fg:w="9"/><text x="39.3432%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:329) (3 samples, 0.15%)</title><rect x="39.3955%" y="196" width="0.1511%" height="15" fill="rgb(235,228,7)" fg:x="782" fg:w="3"/><text x="39.6455%" y="206.50"></text></g><g><title>_update_maintenance_cost (real_diff_evaluation.py:460) (3 samples, 0.15%)</title><rect x="39.3955%" y="212" width="0.1511%" height="15" fill="rgb(245,175,0)" fg:x="782" fg:w="3"/><text x="39.6455%" y="222.50"></text></g><g><title>apply_time_adjustment (real_diff_SA.py:591) (2 samples, 0.10%)</title><rect x="39.6474%" y="164" width="0.1008%" height="15" fill="rgb(208,168,36)" fg:x="787" fg:w="2"/><text x="39.8974%" y="174.50"></text></g><g><title>_update_lifespan (real_diff_evaluation.py:347) (2 samples, 0.10%)</title><rect x="40.0000%" y="212" width="0.1008%" height="15" fill="rgb(246,171,24)" fg:x="794" fg:w="2"/><text x="40.2500%" y="222.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:317) (6 samples, 0.30%)</title><rect x="39.8992%" y="196" width="0.3023%" height="15" fill="rgb(215,142,24)" fg:x="792" fg:w="6"/><text x="40.1492%" y="206.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:319) (2 samples, 0.10%)</title><rect x="40.2015%" y="196" width="0.1008%" height="15" fill="rgb(250,187,7)" fg:x="798" fg:w="2"/><text x="40.4515%" y="206.50"></text></g><g><title>_update_fleet_size (real_diff_evaluation.py:374) (2 samples, 0.10%)</title><rect x="40.2015%" y="212" width="0.1008%" height="15" fill="rgb(228,66,33)" fg:x="798" fg:w="2"/><text x="40.4515%" y="222.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:535) (3 samples, 0.15%)</title><rect x="40.3526%" y="212" width="0.1511%" height="15" fill="rgb(234,215,21)" fg:x="801" fg:w="3"/><text x="40.6026%" y="222.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:321) (9 samples, 0.45%)</title><rect x="40.3023%" y="196" width="0.4534%" height="15" fill="rgb(222,191,20)" fg:x="800" fg:w="9"/><text x="40.5523%" y="206.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:539) (5 samples, 0.25%)</title><rect x="40.5038%" y="212" width="0.2519%" height="15" fill="rgb(245,79,54)" fg:x="804" fg:w="5"/><text x="40.7538%" y="222.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:323) (2 samples, 0.10%)</title><rect x="40.7557%" y="196" width="0.1008%" height="15" fill="rgb(240,10,37)" fg:x="809" fg:w="2"/><text x="41.0057%" y="206.50"></text></g><g><title>_update_energy_cost (real_diff_evaluation.py:409) (2 samples, 0.10%)</title><rect x="40.9068%" y="212" width="0.1008%" height="15" fill="rgb(214,192,32)" fg:x="812" fg:w="2"/><text x="41.1568%" y="222.50"></text></g><g><title>_update_energy_cost (real_diff_evaluation.py:411) (2 samples, 0.10%)</title><rect x="41.0076%" y="212" width="0.1008%" height="15" fill="rgb(209,36,54)" fg:x="814" fg:w="2"/><text x="41.2576%" y="222.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:327) (14 samples, 0.71%)</title><rect x="40.8564%" y="196" width="0.7053%" height="15" fill="rgb(220,10,11)" fg:x="811" fg:w="14"/><text x="41.1064%" y="206.50"></text></g><g><title>_update_energy_cost (real_diff_evaluation.py:429) (6 samples, 0.30%)</title><rect x="41.2594%" y="212" width="0.3023%" height="15" fill="rgb(221,106,17)" fg:x="819" fg:w="6"/><text x="41.5094%" y="222.50"></text></g><g><title>_update_maintenance_cost (real_diff_evaluation.py:460) (9 samples, 0.45%)</title><rect x="41.7632%" y="212" width="0.4534%" height="15" fill="rgb(251,142,44)" fg:x="829" fg:w="9"/><text x="42.0132%" y="222.50"></text></g><g><title>_update_maintenance_cost (real_diff_evaluation.py:463) (2 samples, 0.10%)</title><rect x="42.2166%" y="212" width="0.1008%" height="15" fill="rgb(238,13,15)" fg:x="838" fg:w="2"/><text x="42.4666%" y="222.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:306) (49 samples, 2.47%)</title><rect x="39.8992%" y="180" width="2.4685%" height="15" fill="rgb(208,107,27)" fg:x="792" fg:w="49"/><text x="40.1492%" y="190.50">ap..</text></g><g><title>_apply_change (real_diff_evaluation.py:329) (16 samples, 0.81%)</title><rect x="41.5617%" y="196" width="0.8060%" height="15" fill="rgb(205,136,37)" fg:x="825" fg:w="16"/><text x="41.8117%" y="206.50"></text></g><g><title>_update_lifespan (real_diff_evaluation.py:352) (3 samples, 0.15%)</title><rect x="42.4685%" y="212" width="0.1511%" height="15" fill="rgb(250,205,27)" fg:x="843" fg:w="3"/><text x="42.7185%" y="222.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:317) (6 samples, 0.30%)</title><rect x="42.3678%" y="196" width="0.3023%" height="15" fill="rgb(210,80,43)" fg:x="841" fg:w="6"/><text x="42.6178%" y="206.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:535) (4 samples, 0.20%)</title><rect x="42.7708%" y="212" width="0.2015%" height="15" fill="rgb(247,160,36)" fg:x="849" fg:w="4"/><text x="43.0208%" y="222.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:321) (8 samples, 0.40%)</title><rect x="42.7204%" y="196" width="0.4030%" height="15" fill="rgb(234,13,49)" fg:x="848" fg:w="8"/><text x="42.9704%" y="206.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:539) (3 samples, 0.15%)</title><rect x="42.9723%" y="212" width="0.1511%" height="15" fill="rgb(234,122,0)" fg:x="853" fg:w="3"/><text x="43.2223%" y="222.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:323) (2 samples, 0.10%)</title><rect x="43.1234%" y="196" width="0.1008%" height="15" fill="rgb(207,146,38)" fg:x="856" fg:w="2"/><text x="43.3734%" y="206.50"></text></g><g><title>_update_buy_cost (real_diff_evaluation.py:385) (2 samples, 0.10%)</title><rect x="43.1234%" y="212" width="0.1008%" height="15" fill="rgb(207,177,25)" fg:x="856" fg:w="2"/><text x="43.3734%" y="222.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:327) (2 samples, 0.10%)</title><rect x="43.2242%" y="196" width="0.1008%" height="15" fill="rgb(211,178,42)" fg:x="858" fg:w="2"/><text x="43.4742%" y="206.50"></text></g><g><title>_update_maintenance_cost (real_diff_evaluation.py:460) (3 samples, 0.15%)</title><rect x="43.4761%" y="212" width="0.1511%" height="15" fill="rgb(230,69,54)" fg:x="863" fg:w="3"/><text x="43.7261%" y="222.50"></text></g><g><title>execute (real_diff_SA.py:438) (81 samples, 4.08%)</title><rect x="39.5970%" y="132" width="4.0806%" height="15" fill="rgb(214,135,41)" fg:x="786" fg:w="81"/><text x="39.8470%" y="142.50">exec..</text></g><g><title>adjust_migration_time (real_diff_SA.py:575) (81 samples, 4.08%)</title><rect x="39.5970%" y="148" width="4.0806%" height="15" fill="rgb(237,67,25)" fg:x="786" fg:w="81"/><text x="39.8470%" y="158.50">adju..</text></g><g><title>apply_time_adjustment (real_diff_SA.py:597) (78 samples, 3.93%)</title><rect x="39.7481%" y="164" width="3.9295%" height="15" fill="rgb(222,189,50)" fg:x="789" fg:w="78"/><text x="39.9981%" y="174.50">appl..</text></g><g><title>apply_server_change (real_diff_evaluation.py:310) (26 samples, 1.31%)</title><rect x="42.3678%" y="180" width="1.3098%" height="15" fill="rgb(245,148,34)" fg:x="841" fg:w="26"/><text x="42.6178%" y="190.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:329) (7 samples, 0.35%)</title><rect x="43.3249%" y="196" width="0.3526%" height="15" fill="rgb(222,29,6)" fg:x="860" fg:w="7"/><text x="43.5749%" y="206.50"></text></g><g><title>adjust_dismiss_time (real_diff_SA.py:580) (2 samples, 0.10%)</title><rect x="43.7280%" y="148" width="0.1008%" height="15" fill="rgb(221,189,43)" fg:x="868" fg:w="2"/><text x="43.9780%" y="158.50"></text></g><g><title>check_time_sequence (real_diff_SA.py:616) (2 samples, 0.10%)</title><rect x="43.7280%" y="164" width="0.1008%" height="15" fill="rgb(207,36,27)" fg:x="868" fg:w="2"/><text x="43.9780%" y="174.50"></text></g><g><title>_update_lifespan (real_diff_evaluation.py:347) (2 samples, 0.10%)</title><rect x="44.0302%" y="212" width="0.1008%" height="15" fill="rgb(217,90,24)" fg:x="874" fg:w="2"/><text x="44.2802%" y="222.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:317) (6 samples, 0.30%)</title><rect x="43.9798%" y="196" width="0.3023%" height="15" fill="rgb(224,66,35)" fg:x="873" fg:w="6"/><text x="44.2298%" y="206.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:535) (3 samples, 0.15%)</title><rect x="44.3829%" y="212" width="0.1511%" height="15" fill="rgb(221,13,50)" fg:x="881" fg:w="3"/><text x="44.6329%" y="222.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:321) (9 samples, 0.45%)</title><rect x="44.3325%" y="196" width="0.4534%" height="15" fill="rgb(236,68,49)" fg:x="880" fg:w="9"/><text x="44.5825%" y="206.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:539) (5 samples, 0.25%)</title><rect x="44.5340%" y="212" width="0.2519%" height="15" fill="rgb(229,146,28)" fg:x="884" fg:w="5"/><text x="44.7840%" y="222.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:327) (9 samples, 0.45%)</title><rect x="44.8363%" y="196" width="0.4534%" height="15" fill="rgb(225,31,38)" fg:x="890" fg:w="9"/><text x="45.0863%" y="206.50"></text></g><g><title>_update_energy_cost (real_diff_evaluation.py:429) (4 samples, 0.20%)</title><rect x="45.0882%" y="212" width="0.2015%" height="15" fill="rgb(250,208,3)" fg:x="895" fg:w="4"/><text x="45.3382%" y="222.50"></text></g><g><title>_update_maintenance_cost (real_diff_evaluation.py:455) (3 samples, 0.15%)</title><rect x="45.3401%" y="212" width="0.1511%" height="15" fill="rgb(246,54,23)" fg:x="900" fg:w="3"/><text x="45.5901%" y="222.50"></text></g><g><title>apply_server_change (real_diff_evaluation.py:306) (39 samples, 1.96%)</title><rect x="43.9798%" y="180" width="1.9647%" height="15" fill="rgb(243,76,11)" fg:x="873" fg:w="39"/><text x="44.2298%" y="190.50">a..</text></g><g><title>_apply_change (real_diff_evaluation.py:329) (13 samples, 0.65%)</title><rect x="45.2897%" y="196" width="0.6549%" height="15" fill="rgb(245,21,50)" fg:x="899" fg:w="13"/><text x="45.5397%" y="206.50"></text></g><g><title>_update_maintenance_cost (real_diff_evaluation.py:460) (8 samples, 0.40%)</title><rect x="45.5416%" y="212" width="0.4030%" height="15" fill="rgb(228,9,43)" fg:x="904" fg:w="8"/><text x="45.7916%" y="222.50"></text></g><g><title>_update_lifespan (real_diff_evaluation.py:347) (3 samples, 0.15%)</title><rect x="45.9446%" y="212" width="0.1511%" height="15" fill="rgb(208,100,47)" fg:x="912" fg:w="3"/><text x="46.1946%" y="222.50"></text></g><g><title>_update_lifespan (real_diff_evaluation.py:352) (5 samples, 0.25%)</title><rect x="46.0957%" y="212" width="0.2519%" height="15" fill="rgb(232,26,8)" fg:x="915" fg:w="5"/><text x="46.3457%" y="222.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:317) (10 samples, 0.50%)</title><rect x="45.9446%" y="196" width="0.5038%" height="15" fill="rgb(216,166,38)" fg:x="912" fg:w="10"/><text x="46.1946%" y="206.50"></text></g><g><title>_update_fleet_size (real_diff_evaluation.py:374) (3 samples, 0.15%)</title><rect x="46.4484%" y="212" width="0.1511%" height="15" fill="rgb(251,202,51)" fg:x="922" fg:w="3"/><text x="46.6984%" y="222.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:319) (5 samples, 0.25%)</title><rect x="46.4484%" y="196" width="0.2519%" height="15" fill="rgb(254,216,34)" fg:x="922" fg:w="5"/><text x="46.6984%" y="206.50"></text></g><g><title>_update_fleet_size (real_diff_evaluation.py:377) (2 samples, 0.10%)</title><rect x="46.5995%" y="212" width="0.1008%" height="15" fill="rgb(251,32,27)" fg:x="925" fg:w="2"/><text x="46.8495%" y="222.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:527) (3 samples, 0.15%)</title><rect x="46.8010%" y="212" width="0.1511%" height="15" fill="rgb(208,127,28)" fg:x="929" fg:w="3"/><text x="47.0510%" y="222.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:535) (6 samples, 0.30%)</title><rect x="47.0025%" y="212" width="0.3023%" height="15" fill="rgb(224,137,22)" fg:x="933" fg:w="6"/><text x="47.2525%" y="222.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:321) (21 samples, 1.06%)</title><rect x="46.7003%" y="196" width="1.0579%" height="15" fill="rgb(254,70,32)" fg:x="927" fg:w="21"/><text x="46.9503%" y="206.50"></text></g><g><title>_update_capacity (real_diff_evaluation.py:539) (8 samples, 0.40%)</title><rect x="47.3552%" y="212" width="0.4030%" height="15" fill="rgb(229,75,37)" fg:x="940" fg:w="8"/><text x="47.6052%" y="222.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:325) (2 samples, 0.10%)</title><rect x="47.7582%" y="196" width="0.1008%" height="15" fill="rgb(252,64,23)" fg:x="948" fg:w="2"/><text x="48.0082%" y="206.50"></text></g><g><title>_apply_change (real_diff_evaluation.py:327) (5 samples, 0.25%)</title><rect x="47.8589%" y="196" width="0.2519%" height="15" fill="rgb(232,162,48)" fg:x="950" fg:w="5"/><text x="48.1089%" y="206.50"></text></g><g><title>_update_energy_cost (real_diff_evaluation.py:429) (5 samples, 0.25%)</title><rect x="47.8589%" y="212" width="0.2519%" height="15" fill="rgb(246,160,12)" fg:x="950" fg:w="5"/><text x="48.1089%" y="222.50"></text></g><g><title>_update_maintenance_cost (real_diff_evaluation.py:455) (3 samples, 0.15%)</title><rect x="48.1108%" y="212" width="0.1511%" height="15" fill="rgb(247,166,0)" fg:x="955" fg:w="3"/><text x="48.3608%" y="222.50"></text></g><g><title>_update_maintenance_cost (real_diff_evaluation.py:457) (2 samples, 0.10%)</title><rect x="48.2620%" y="212" width="0.1008%" height="15" fill="rgb(249,219,21)" fg:x="958" fg:w="2"/><text x="48.5120%" y="222.50"></text></g><g><title>apply_time_adjustment (real_diff_SA.py:597) (94 samples, 4.74%)</title><rect x="43.8791%" y="164" width="4.7355%" height="15" fill="rgb(205,209,3)" fg:x="871" fg:w="94"/><text x="44.1291%" y="174.50">apply_..</text></g><g><title>apply_server_change (real_diff_evaluation.py:310) (53 samples, 2.67%)</title><rect x="45.9446%" y="180" width="2.6700%" height="15" fill="rgb(243,44,1)" fg:x="912" fg:w="53"/><text x="46.1946%" y="190.50">ap..</text></g><g><title>_apply_change (real_diff_evaluation.py:329) (10 samples, 0.50%)</title><rect x="48.1108%" y="196" width="0.5038%" height="15" fill="rgb(206,159,16)" fg:x="955" fg:w="10"/><text x="48.3608%" y="206.50"></text></g><g><title>_update_maintenance_cost (real_diff_evaluation.py:460) (5 samples, 0.25%)</title><rect x="48.3627%" y="212" width="0.2519%" height="15" fill="rgb(244,77,30)" fg:x="960" fg:w="5"/><text x="48.6127%" y="222.50"></text></g><g><title>run (real_diff_SA.py:731) (932 samples, 46.95%)</title><rect x="1.7128%" y="100" width="46.9521%" height="15" fill="rgb(218,69,12)" fg:x="34" fg:w="932"/><text x="1.9628%" y="110.50">run (real_diff_SA.py:731)</text></g><g><title>generate_neighbor (real_diff_SA.py:692) (925 samples, 46.60%)</title><rect x="2.0655%" y="116" width="46.5995%" height="15" fill="rgb(212,87,7)" fg:x="41" fg:w="925"/><text x="2.3155%" y="126.50">generate_neighbor (real_diff_SA.py:692)</text></g><g><title>execute (real_diff_SA.py:448) (98 samples, 4.94%)</title><rect x="43.7280%" y="132" width="4.9370%" height="15" fill="rgb(245,114,25)" fg:x="868" fg:w="98"/><text x="43.9780%" y="142.50">execut..</text></g><g><title>adjust_dismiss_time (real_diff_SA.py:582) (96 samples, 4.84%)</title><rect x="43.8287%" y="148" width="4.8363%" height="15" fill="rgb(210,61,42)" fg:x="870" fg:w="96"/><text x="44.0787%" y="158.50">adjust..</text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:474) (8 samples, 0.40%)</title><rect x="48.8665%" y="132" width="0.4030%" height="15" fill="rgb(211,52,33)" fg:x="970" fg:w="8"/><text x="49.1165%" y="142.50"></text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:479) (63 samples, 3.17%)</title><rect x="49.3199%" y="132" width="3.1738%" height="15" fill="rgb(234,58,33)" fg:x="979" fg:w="63"/><text x="49.5699%" y="142.50">_re..</text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:480) (2 samples, 0.10%)</title><rect x="52.4937%" y="132" width="0.1008%" height="15" fill="rgb(220,115,36)" fg:x="1042" fg:w="2"/><text x="52.7437%" y="142.50"></text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:485) (8 samples, 0.40%)</title><rect x="52.6448%" y="132" width="0.4030%" height="15" fill="rgb(243,153,54)" fg:x="1045" fg:w="8"/><text x="52.8948%" y="142.50"></text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:486) (5 samples, 0.25%)</title><rect x="53.0479%" y="132" width="0.2519%" height="15" fill="rgb(251,47,18)" fg:x="1053" fg:w="5"/><text x="53.2979%" y="142.50"></text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:489) (5 samples, 0.25%)</title><rect x="53.2997%" y="132" width="0.2519%" height="15" fill="rgb(242,102,42)" fg:x="1058" fg:w="5"/><text x="53.5497%" y="142.50"></text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:492) (8 samples, 0.40%)</title><rect x="53.5516%" y="132" width="0.4030%" height="15" fill="rgb(234,31,38)" fg:x="1063" fg:w="8"/><text x="53.8016%" y="142.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:111) (3 samples, 0.15%)</title><rect x="54.2065%" y="164" width="0.1511%" height="15" fill="rgb(221,117,51)" fg:x="1076" fg:w="3"/><text x="54.4565%" y="174.50"></text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:496) (10 samples, 0.50%)</title><rect x="53.9547%" y="132" width="0.5038%" height="15" fill="rgb(212,20,18)" fg:x="1071" fg:w="10"/><text x="54.2047%" y="142.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:431) (8 samples, 0.40%)</title><rect x="54.0554%" y="148" width="0.4030%" height="15" fill="rgb(245,133,36)" fg:x="1073" fg:w="8"/><text x="54.3054%" y="158.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:122) (2 samples, 0.10%)</title><rect x="54.3577%" y="164" width="0.1008%" height="15" fill="rgb(212,6,19)" fg:x="1079" fg:w="2"/><text x="54.6077%" y="174.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:436) (4 samples, 0.20%)</title><rect x="54.7103%" y="148" width="0.2015%" height="15" fill="rgb(218,1,36)" fg:x="1086" fg:w="4"/><text x="54.9603%" y="158.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:111) (3 samples, 0.15%)</title><rect x="54.7607%" y="164" width="0.1511%" height="15" fill="rgb(246,84,54)" fg:x="1087" fg:w="3"/><text x="55.0107%" y="174.50"></text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:497) (10 samples, 0.50%)</title><rect x="54.4584%" y="132" width="0.5038%" height="15" fill="rgb(242,110,6)" fg:x="1081" fg:w="10"/><text x="54.7084%" y="142.50"></text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:498) (6 samples, 0.30%)</title><rect x="54.9622%" y="132" width="0.3023%" height="15" fill="rgb(214,47,5)" fg:x="1091" fg:w="6"/><text x="55.2122%" y="142.50"></text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:499) (2 samples, 0.10%)</title><rect x="55.2645%" y="132" width="0.1008%" height="15" fill="rgb(218,159,25)" fg:x="1097" fg:w="2"/><text x="55.5145%" y="142.50"></text></g><g><title>diff_evaluation (real_diff_evaluation.py:654) (134 samples, 6.75%)</title><rect x="48.7657%" y="116" width="6.7506%" height="15" fill="rgb(215,211,28)" fg:x="968" fg:w="134"/><text x="49.0157%" y="126.50">diff_eval..</text></g><g><title>_recalculate_satisfaction (real_diff_evaluation.py:503) (3 samples, 0.15%)</title><rect x="55.3652%" y="132" width="0.1511%" height="15" fill="rgb(238,59,32)" fg:x="1099" fg:w="3"/><text x="55.6152%" y="142.50"></text></g><g><title>_calculate_average_utilization (real_diff_evaluation.py:550) (34 samples, 1.71%)</title><rect x="55.6675%" y="148" width="1.7128%" height="15" fill="rgb(226,82,3)" fg:x="1105" fg:w="34"/><text x="55.9175%" y="158.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py:336) (5 samples, 0.25%)</title><rect x="57.5819%" y="180" width="0.2519%" height="15" fill="rgb(240,164,32)" fg:x="1143" fg:w="5"/><text x="57.8319%" y="190.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py:338) (2 samples, 0.10%)</title><rect x="57.8338%" y="180" width="0.1008%" height="15" fill="rgb(232,46,7)" fg:x="1148" fg:w="2"/><text x="58.0838%" y="190.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py:339) (4 samples, 0.20%)</title><rect x="57.9345%" y="180" width="0.2015%" height="15" fill="rgb(229,129,53)" fg:x="1150" fg:w="4"/><text x="58.1845%" y="190.50"></text></g><g><title>unique (numpy/lib/arraysetops.py:274) (15 samples, 0.76%)</title><rect x="57.5819%" y="164" width="0.7557%" height="15" fill="rgb(234,188,29)" fg:x="1143" fg:w="15"/><text x="57.8319%" y="174.50"></text></g><g><title>_unique1d (numpy/lib/arraysetops.py:352) (4 samples, 0.20%)</title><rect x="58.1360%" y="180" width="0.2015%" height="15" fill="rgb(246,141,4)" fg:x="1154" fg:w="4"/><text x="58.3860%" y="190.50"></text></g><g><title>_calculate_average_utilization (real_diff_evaluation.py:554) (20 samples, 1.01%)</title><rect x="57.3804%" y="148" width="1.0076%" height="15" fill="rgb(229,23,39)" fg:x="1139" fg:w="20"/><text x="57.6304%" y="158.50"></text></g><g><title>_calculate_average_utilization (real_diff_evaluation.py:557) (10 samples, 0.50%)</title><rect x="58.3879%" y="148" width="0.5038%" height="15" fill="rgb(206,12,3)" fg:x="1159" fg:w="10"/><text x="58.6379%" y="158.50"></text></g><g><title>_calculate_average_utilization (real_diff_evaluation.py:558) (90 samples, 4.53%)</title><rect x="58.8917%" y="148" width="4.5340%" height="15" fill="rgb(252,226,20)" fg:x="1169" fg:w="90"/><text x="59.1417%" y="158.50">_calc..</text></g><g><title>sum (numpy/core/fromnumeric.py:2300) (5 samples, 0.25%)</title><rect x="63.9295%" y="164" width="0.2519%" height="15" fill="rgb(216,123,35)" fg:x="1269" fg:w="5"/><text x="64.1795%" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:72) (6 samples, 0.30%)</title><rect x="65.8438%" y="196" width="0.3023%" height="15" fill="rgb(212,68,40)" fg:x="1307" fg:w="6"/><text x="66.0938%" y="206.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:72) (25 samples, 1.26%)</title><rect x="65.1889%" y="180" width="1.2594%" height="15" fill="rgb(254,125,32)" fg:x="1294" fg:w="25"/><text x="65.4389%" y="190.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:73) (6 samples, 0.30%)</title><rect x="66.1461%" y="196" width="0.3023%" height="15" fill="rgb(253,97,22)" fg:x="1313" fg:w="6"/><text x="66.3961%" y="206.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:75) (3 samples, 0.15%)</title><rect x="66.4484%" y="180" width="0.1511%" height="15" fill="rgb(241,101,14)" fg:x="1319" fg:w="3"/><text x="66.6984%" y="190.50"></text></g><g><title>_calculate_average_utilization (real_diff_evaluation.py:559) (154 samples, 7.76%)</title><rect x="63.4257%" y="148" width="7.7582%" height="15" fill="rgb(238,103,29)" fg:x="1259" fg:w="154"/><text x="63.6757%" y="158.50">_calculate_..</text></g><g><title>sum (numpy/core/fromnumeric.py:2313) (139 samples, 7.00%)</title><rect x="64.1814%" y="164" width="7.0025%" height="15" fill="rgb(233,195,47)" fg:x="1274" fg:w="139"/><text x="64.4314%" y="174.50">sum (nump..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:88) (91 samples, 4.58%)</title><rect x="66.5995%" y="180" width="4.5844%" height="15" fill="rgb(246,218,30)" fg:x="1322" fg:w="91"/><text x="66.8495%" y="190.50">_wrap..</text></g><g><title>sum (numpy/core/fromnumeric.py:2300) (4 samples, 0.20%)</title><rect x="72.1914%" y="164" width="0.2015%" height="15" fill="rgb(219,145,47)" fg:x="1433" fg:w="4"/><text x="72.4414%" y="174.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:72) (6 samples, 0.30%)</title><rect x="74.2569%" y="196" width="0.3023%" height="15" fill="rgb(243,12,26)" fg:x="1474" fg:w="6"/><text x="74.5069%" y="206.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:72) (22 samples, 1.11%)</title><rect x="73.6524%" y="180" width="1.1083%" height="15" fill="rgb(214,87,16)" fg:x="1462" fg:w="22"/><text x="73.9024%" y="190.50"></text></g><g><title>&lt;dictcomp&gt; (numpy/core/fromnumeric.py:73) (4 samples, 0.20%)</title><rect x="74.5592%" y="196" width="0.2015%" height="15" fill="rgb(208,99,42)" fg:x="1480" fg:w="4"/><text x="74.8092%" y="206.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:75) (6 samples, 0.30%)</title><rect x="74.7607%" y="180" width="0.3023%" height="15" fill="rgb(253,99,2)" fg:x="1484" fg:w="6"/><text x="75.0107%" y="190.50"></text></g><g><title>_calculate_average_utilization (real_diff_evaluation.py:560) (168 samples, 8.46%)</title><rect x="71.1839%" y="148" width="8.4635%" height="15" fill="rgb(220,168,23)" fg:x="1413" fg:w="168"/><text x="71.4339%" y="158.50">_calculate_a..</text></g><g><title>sum (numpy/core/fromnumeric.py:2313) (144 samples, 7.25%)</title><rect x="72.3929%" y="164" width="7.2544%" height="15" fill="rgb(242,38,24)" fg:x="1437" fg:w="144"/><text x="72.6429%" y="174.50">sum (numpy..</text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:88) (91 samples, 4.58%)</title><rect x="75.0630%" y="180" width="4.5844%" height="15" fill="rgb(225,182,9)" fg:x="1490" fg:w="91"/><text x="75.3130%" y="190.50">_wrap..</text></g><g><title>_calculate_average_utilization (real_diff_evaluation.py:562) (6 samples, 0.30%)</title><rect x="79.6474%" y="148" width="0.3023%" height="15" fill="rgb(243,178,37)" fg:x="1581" fg:w="6"/><text x="79.8974%" y="158.50"></text></g><g><title>_final_calculation (real_diff_evaluation.py:614) (501 samples, 25.24%)</title><rect x="55.5164%" y="132" width="25.2393%" height="15" fill="rgb(232,139,19)" fg:x="1102" fg:w="501"/><text x="55.7664%" y="142.50">_final_calculation (real_diff_evaluation..</text></g><g><title>_calculate_average_utilization (real_diff_evaluation.py:563) (16 samples, 0.81%)</title><rect x="79.9496%" y="148" width="0.8060%" height="15" fill="rgb(225,201,24)" fg:x="1587" fg:w="16"/><text x="80.1996%" y="158.50"></text></g><g><title>_calculate_average_lifespan (real_diff_evaluation.py:572) (3 samples, 0.15%)</title><rect x="80.7557%" y="148" width="0.1511%" height="15" fill="rgb(221,47,46)" fg:x="1603" fg:w="3"/><text x="81.0057%" y="158.50"></text></g><g><title>_calculate_average_lifespan (real_diff_evaluation.py:578) (3 samples, 0.15%)</title><rect x="80.9068%" y="148" width="0.1511%" height="15" fill="rgb(249,23,13)" fg:x="1606" fg:w="3"/><text x="81.1568%" y="158.50"></text></g><g><title>_calculate_average_lifespan (real_diff_evaluation.py:582) (3 samples, 0.15%)</title><rect x="81.1083%" y="148" width="0.1511%" height="15" fill="rgb(219,9,5)" fg:x="1610" fg:w="3"/><text x="81.3583%" y="158.50"></text></g><g><title>zeros_like (numpy/core/numeric.py:132) (2 samples, 0.10%)</title><rect x="81.1587%" y="164" width="0.1008%" height="15" fill="rgb(254,171,16)" fg:x="1611" fg:w="2"/><text x="81.4087%" y="174.50"></text></g><g><title>_calculate_average_lifespan (real_diff_evaluation.py:583) (3 samples, 0.15%)</title><rect x="81.2594%" y="148" width="0.1511%" height="15" fill="rgb(230,171,20)" fg:x="1613" fg:w="3"/><text x="81.5094%" y="158.50"></text></g><g><title>_final_calculation (real_diff_evaluation.py:617) (14 samples, 0.71%)</title><rect x="80.7557%" y="132" width="0.7053%" height="15" fill="rgb(210,71,41)" fg:x="1603" fg:w="14"/><text x="81.0057%" y="142.50"></text></g><g><title>_calculate_profit (real_diff_evaluation.py:601) (15 samples, 0.76%)</title><rect x="81.5113%" y="148" width="0.7557%" height="15" fill="rgb(206,173,20)" fg:x="1618" fg:w="15"/><text x="81.7613%" y="158.50"></text></g><g><title>_calculate_revenue (real_diff_evaluation.py:592) (15 samples, 0.76%)</title><rect x="81.5113%" y="164" width="0.7557%" height="15" fill="rgb(233,88,34)" fg:x="1618" fg:w="15"/><text x="81.7613%" y="174.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2313) (8 samples, 0.40%)</title><rect x="81.8640%" y="180" width="0.4030%" height="15" fill="rgb(223,209,46)" fg:x="1625" fg:w="8"/><text x="82.1140%" y="190.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:88) (7 samples, 0.35%)</title><rect x="81.9144%" y="196" width="0.3526%" height="15" fill="rgb(250,43,18)" fg:x="1626" fg:w="7"/><text x="82.1644%" y="206.50"></text></g><g><title>_final_calculation (real_diff_evaluation.py:620) (24 samples, 1.21%)</title><rect x="81.4610%" y="132" width="1.2091%" height="15" fill="rgb(208,13,10)" fg:x="1617" fg:w="24"/><text x="81.7110%" y="142.50"></text></g><g><title>_calculate_profit (real_diff_evaluation.py:604) (8 samples, 0.40%)</title><rect x="82.2670%" y="148" width="0.4030%" height="15" fill="rgb(212,200,36)" fg:x="1633" fg:w="8"/><text x="82.5170%" y="158.50"></text></g><g><title>run (real_diff_SA.py:732) (677 samples, 34.11%)</title><rect x="48.6650%" y="100" width="34.1058%" height="15" fill="rgb(225,90,30)" fg:x="966" fg:w="677"/><text x="48.9150%" y="110.50">run (real_diff_SA.py:732)</text></g><g><title>diff_evaluation (real_diff_evaluation.py:656) (541 samples, 27.25%)</title><rect x="55.5164%" y="116" width="27.2544%" height="15" fill="rgb(236,182,39)" fg:x="1102" fg:w="541"/><text x="55.7664%" y="126.50">diff_evaluation (real_diff_evaluation.py:656)</text></g><g><title>_final_calculation (real_diff_evaluation.py:626) (2 samples, 0.10%)</title><rect x="82.6700%" y="132" width="0.1008%" height="15" fill="rgb(212,144,35)" fg:x="1641" fg:w="2"/><text x="82.9200%" y="142.50"></text></g><g><title>sum (numpy/core/fromnumeric.py:2313) (2 samples, 0.10%)</title><rect x="82.6700%" y="148" width="0.1008%" height="15" fill="rgb(228,63,44)" fg:x="1641" fg:w="2"/><text x="82.9200%" y="158.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:88) (2 samples, 0.10%)</title><rect x="82.6700%" y="164" width="0.1008%" height="15" fill="rgb(228,109,6)" fg:x="1641" fg:w="2"/><text x="82.9200%" y="174.50"></text></g><g><title>run (real_diff_SA.py:735) (13 samples, 0.65%)</title><rect x="82.8715%" y="100" width="0.6549%" height="15" fill="rgb(238,117,24)" fg:x="1645" fg:w="13"/><text x="83.1215%" y="110.50"></text></g><g><title>accept_solution (real_diff_SA.py:705) (4 samples, 0.20%)</title><rect x="83.5264%" y="116" width="0.2015%" height="15" fill="rgb(242,26,26)" fg:x="1658" fg:w="4"/><text x="83.7764%" y="126.50"></text></g><g><title>commit_server_changes (real_diff_evaluation.py:280) (3 samples, 0.15%)</title><rect x="83.5768%" y="132" width="0.1511%" height="15" fill="rgb(221,92,48)" fg:x="1659" fg:w="3"/><text x="83.8268%" y="142.50"></text></g><g><title>update_slots (real_diff_SA.py:56) (2 samples, 0.10%)</title><rect x="83.8287%" y="148" width="0.1008%" height="15" fill="rgb(209,209,32)" fg:x="1664" fg:w="2"/><text x="84.0787%" y="158.50"></text></g><g><title>apply_pending_updates (real_diff_SA.py:69) (9 samples, 0.45%)</title><rect x="83.7783%" y="132" width="0.4534%" height="15" fill="rgb(221,70,22)" fg:x="1663" fg:w="9"/><text x="84.0283%" y="142.50"></text></g><g><title>update_slots (real_diff_SA.py:58) (6 samples, 0.30%)</title><rect x="83.9295%" y="148" width="0.3023%" height="15" fill="rgb(248,145,5)" fg:x="1666" fg:w="6"/><text x="84.1795%" y="158.50"></text></g><g><title>accept_solution (real_diff_SA.py:712) (11 samples, 0.55%)</title><rect x="83.7280%" y="116" width="0.5542%" height="15" fill="rgb(226,116,26)" fg:x="1662" fg:w="11"/><text x="83.9780%" y="126.50"></text></g><g><title>update_best_solution (real_diff_evaluation.py:712) (2 samples, 0.10%)</title><rect x="84.4332%" y="132" width="0.1008%" height="15" fill="rgb(244,5,17)" fg:x="1676" fg:w="2"/><text x="84.6832%" y="142.50"></text></g><g><title>__eq__ (&lt;string&gt;:3) (3 samples, 0.15%)</title><rect x="84.8866%" y="148" width="0.1511%" height="15" fill="rgb(252,159,33)" fg:x="1685" fg:w="3"/><text x="85.1366%" y="158.50"></text></g><g><title>__eq__ (&lt;string&gt;:2) (2 samples, 0.10%)</title><rect x="89.4710%" y="164" width="0.1008%" height="15" fill="rgb(206,71,0)" fg:x="1776" fg:w="2"/><text x="89.7210%" y="174.50"></text></g><g><title>__eq__ (&lt;string&gt;:3) (20 samples, 1.01%)</title><rect x="89.5718%" y="164" width="1.0076%" height="15" fill="rgb(233,118,54)" fg:x="1778" fg:w="20"/><text x="89.8218%" y="174.50"></text></g><g><title>update_best_solution (real_diff_evaluation.py:713) (226 samples, 11.39%)</title><rect x="84.5340%" y="132" width="11.3854%" height="15" fill="rgb(234,83,48)" fg:x="1678" fg:w="226"/><text x="84.7840%" y="142.50">update_best_solut..</text></g><g><title>__eq__ (&lt;string&gt;:4) (216 samples, 10.88%)</title><rect x="85.0378%" y="148" width="10.8816%" height="15" fill="rgb(228,3,54)" fg:x="1688" fg:w="216"/><text x="85.2878%" y="158.50">__eq__ (&lt;string&gt;..</text></g><g><title>__eq__ (&lt;string&gt;:4) (106 samples, 5.34%)</title><rect x="90.5793%" y="164" width="5.3401%" height="15" fill="rgb(226,155,13)" fg:x="1798" fg:w="106"/><text x="90.8293%" y="174.50">__eq__ ..</text></g><g><title>_reconstruct (copy.py:264) (2 samples, 0.10%)</title><rect x="96.3224%" y="260" width="0.1008%" height="15" fill="rgb(241,28,37)" fg:x="1912" fg:w="2"/><text x="96.5724%" y="270.50"></text></g><g><title>_reconstruct (copy.py:270) (3 samples, 0.15%)</title><rect x="96.4232%" y="260" width="0.1511%" height="15" fill="rgb(233,93,10)" fg:x="1914" fg:w="3"/><text x="96.6732%" y="270.50"></text></g><g><title>deepcopy (copy.py:146) (3 samples, 0.15%)</title><rect x="96.4232%" y="276" width="0.1511%" height="15" fill="rgb(225,113,19)" fg:x="1914" fg:w="3"/><text x="96.6732%" y="286.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (3 samples, 0.15%)</title><rect x="96.4232%" y="292" width="0.1511%" height="15" fill="rgb(241,2,18)" fg:x="1914" fg:w="3"/><text x="96.6732%" y="302.50"></text></g><g><title>deepcopy (copy.py:172) (7 samples, 0.35%)</title><rect x="96.3224%" y="244" width="0.3526%" height="15" fill="rgb(228,207,21)" fg:x="1912" fg:w="7"/><text x="96.5724%" y="254.50"></text></g><g><title>_reconstruct (copy.py:279) (2 samples, 0.10%)</title><rect x="96.5743%" y="260" width="0.1008%" height="15" fill="rgb(213,211,35)" fg:x="1917" fg:w="2"/><text x="96.8243%" y="270.50"></text></g><g><title>deepcopy (copy.py:146) (13 samples, 0.65%)</title><rect x="96.0705%" y="180" width="0.6549%" height="15" fill="rgb(209,83,10)" fg:x="1907" fg:w="13"/><text x="96.3205%" y="190.50"></text></g><g><title>_deepcopy_dict (copy.py:230) (13 samples, 0.65%)</title><rect x="96.0705%" y="196" width="0.6549%" height="15" fill="rgb(209,164,1)" fg:x="1907" fg:w="13"/><text x="96.3205%" y="206.50"></text></g><g><title>deepcopy (copy.py:146) (9 samples, 0.45%)</title><rect x="96.2720%" y="212" width="0.4534%" height="15" fill="rgb(213,184,43)" fg:x="1911" fg:w="9"/><text x="96.5220%" y="222.50"></text></g><g><title>_deepcopy_list (copy.py:205) (9 samples, 0.45%)</title><rect x="96.2720%" y="228" width="0.4534%" height="15" fill="rgb(231,61,34)" fg:x="1911" fg:w="9"/><text x="96.5220%" y="238.50"></text></g><g><title>_reconstruct (copy.py:270) (15 samples, 0.76%)</title><rect x="96.0705%" y="164" width="0.7557%" height="15" fill="rgb(235,75,3)" fg:x="1907" fg:w="15"/><text x="96.3205%" y="174.50"></text></g><g><title>deepcopy (copy.py:177) (2 samples, 0.10%)</title><rect x="96.7254%" y="180" width="0.1008%" height="15" fill="rgb(220,106,47)" fg:x="1920" fg:w="2"/><text x="96.9754%" y="190.50"></text></g><g><title>_keep_alive (copy.py:253) (2 samples, 0.10%)</title><rect x="96.7254%" y="196" width="0.1008%" height="15" fill="rgb(210,196,33)" fg:x="1920" fg:w="2"/><text x="96.9754%" y="206.50"></text></g><g><title>accept_solution (real_diff_SA.py:714) (250 samples, 12.59%)</title><rect x="84.2821%" y="116" width="12.5945%" height="15" fill="rgb(229,154,42)" fg:x="1673" fg:w="250"/><text x="84.5321%" y="126.50">accept_solution (re..</text></g><g><title>update_best_solution (real_diff_evaluation.py:715) (19 samples, 0.96%)</title><rect x="95.9194%" y="132" width="0.9572%" height="15" fill="rgb(228,114,26)" fg:x="1904" fg:w="19"/><text x="96.1694%" y="142.50"></text></g><g><title>deepcopy (copy.py:172) (17 samples, 0.86%)</title><rect x="96.0202%" y="148" width="0.8564%" height="15" fill="rgb(208,144,1)" fg:x="1906" fg:w="17"/><text x="96.2702%" y="158.50"></text></g><g><title>accept_solution (real_diff_SA.py:716) (3 samples, 0.15%)</title><rect x="96.8766%" y="116" width="0.1511%" height="15" fill="rgb(239,112,37)" fg:x="1923" fg:w="3"/><text x="97.1266%" y="126.50"></text></g><g><title>run (real_diff_SA.py:736) (276 samples, 13.90%)</title><rect x="83.5264%" y="100" width="13.9043%" height="15" fill="rgb(210,96,50)" fg:x="1658" fg:w="276"/><text x="83.7764%" y="110.50">run (real_diff_SA.py:..</text></g><g><title>accept_solution (real_diff_SA.py:720) (8 samples, 0.40%)</title><rect x="97.0277%" y="116" width="0.4030%" height="15" fill="rgb(222,178,2)" fg:x="1926" fg:w="8"/><text x="97.2777%" y="126.50"></text></g><g><title>discard_server_changes (real_diff_evaluation.py:253) (8 samples, 0.40%)</title><rect x="97.0277%" y="132" width="0.4030%" height="15" fill="rgb(226,74,18)" fg:x="1926" fg:w="8"/><text x="97.2777%" y="142.50"></text></g><g><title>get_my_solution (real_diff_SA.py:770) (1,905 samples, 95.97%)</title><rect x="1.5617%" y="84" width="95.9698%" height="15" fill="rgb(225,67,54)" fg:x="31" fg:w="1905"/><text x="1.8117%" y="94.50">get_my_solution (real_diff_SA.py:770)</text></g><g><title>_iterencode_dict (json/encoder.py:382) (2 samples, 0.10%)</title><rect x="98.4887%" y="164" width="0.1008%" height="15" fill="rgb(251,92,32)" fg:x="1955" fg:w="2"/><text x="98.7387%" y="174.50"></text></g><g><title>_iterencode_dict (json/encoder.py:385) (2 samples, 0.10%)</title><rect x="98.6398%" y="164" width="0.1008%" height="15" fill="rgb(228,149,22)" fg:x="1958" fg:w="2"/><text x="98.8898%" y="174.50"></text></g><g><title>dump (json/__init__.py:179) (24 samples, 1.21%)</title><rect x="97.6322%" y="116" width="1.2091%" height="15" fill="rgb(243,54,13)" fg:x="1938" fg:w="24"/><text x="97.8822%" y="126.50"></text></g><g><title>_iterencode (json/encoder.py:429) (23 samples, 1.16%)</title><rect x="97.6826%" y="132" width="1.1587%" height="15" fill="rgb(243,180,28)" fg:x="1939" fg:w="23"/><text x="97.9326%" y="142.50"></text></g><g><title>_iterencode_list (json/encoder.py:325) (13 samples, 0.65%)</title><rect x="98.1864%" y="148" width="0.6549%" height="15" fill="rgb(208,167,24)" fg:x="1949" fg:w="13"/><text x="98.4364%" y="158.50"></text></g><g><title>&lt;module&gt; (real_diff_SA.py:778) (1,947 samples, 98.09%)</title><rect x="1.3602%" y="68" width="98.0856%" height="15" fill="rgb(245,73,45)" fg:x="27" fg:w="1947"/><text x="1.6102%" y="78.50">&lt;module&gt; (real_diff_SA.py:778)</text></g><g><title>get_my_solution (real_diff_SA.py:772) (38 samples, 1.91%)</title><rect x="97.5315%" y="84" width="1.9144%" height="15" fill="rgb(237,203,48)" fg:x="1936" fg:w="38"/><text x="97.7815%" y="94.50">g..</text></g><g><title>export_solution_to_json (real_diff_evaluation.py:688) (36 samples, 1.81%)</title><rect x="97.6322%" y="100" width="1.8136%" height="15" fill="rgb(211,197,16)" fg:x="1938" fg:w="36"/><text x="97.8822%" y="110.50">e..</text></g><g><title>dump (json/__init__.py:180) (12 samples, 0.60%)</title><rect x="98.8413%" y="116" width="0.6045%" height="15" fill="rgb(243,99,51)" fg:x="1962" fg:w="12"/><text x="99.0913%" y="126.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:28) (3 samples, 0.15%)</title><rect x="99.5466%" y="260" width="0.1511%" height="15" fill="rgb(215,123,29)" fg:x="1976" fg:w="3"/><text x="99.7966%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (3 samples, 0.15%)</title><rect x="99.5466%" y="276" width="0.1511%" height="15" fill="rgb(239,186,37)" fg:x="1976" fg:w="3"/><text x="99.7966%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (3 samples, 0.15%)</title><rect x="99.5466%" y="292" width="0.1511%" height="15" fill="rgb(252,136,39)" fg:x="1976" fg:w="3"/><text x="99.7966%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (3 samples, 0.15%)</title><rect x="99.5466%" y="308" width="0.1511%" height="15" fill="rgb(223,213,32)" fg:x="1976" fg:w="3"/><text x="99.7966%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (3 samples, 0.15%)</title><rect x="99.5466%" y="324" width="0.1511%" height="15" fill="rgb(233,115,5)" fg:x="1976" fg:w="3"/><text x="99.7966%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.15%)</title><rect x="99.5466%" y="340" width="0.1511%" height="15" fill="rgb(207,226,44)" fg:x="1976" fg:w="3"/><text x="99.7966%" y="350.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/__init__.py:19) (2 samples, 0.10%)</title><rect x="99.5970%" y="356" width="0.1008%" height="15" fill="rgb(208,126,0)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (2 samples, 0.10%)</title><rect x="99.5970%" y="372" width="0.1008%" height="15" fill="rgb(244,66,21)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (2 samples, 0.10%)</title><rect x="99.5970%" y="388" width="0.1008%" height="15" fill="rgb(222,97,12)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (2 samples, 0.10%)</title><rect x="99.5970%" y="404" width="0.1008%" height="15" fill="rgb(219,213,19)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (2 samples, 0.10%)</title><rect x="99.5970%" y="420" width="0.1008%" height="15" fill="rgb(252,169,30)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (2 samples, 0.10%)</title><rect x="99.5970%" y="436" width="0.1008%" height="15" fill="rgb(206,32,51)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="446.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/sparse/__init__.py:1) (2 samples, 0.10%)</title><rect x="99.5970%" y="452" width="0.1008%" height="15" fill="rgb(250,172,42)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (2 samples, 0.10%)</title><rect x="99.5970%" y="468" width="0.1008%" height="15" fill="rgb(209,34,43)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (2 samples, 0.10%)</title><rect x="99.5970%" y="484" width="0.1008%" height="15" fill="rgb(223,11,35)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (2 samples, 0.10%)</title><rect x="99.5970%" y="500" width="0.1008%" height="15" fill="rgb(251,219,26)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (2 samples, 0.10%)</title><rect x="99.5970%" y="516" width="0.1008%" height="15" fill="rgb(231,119,3)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (2 samples, 0.10%)</title><rect x="99.5970%" y="532" width="0.1008%" height="15" fill="rgb(216,97,11)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="542.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/sparse/accessor.py:17) (2 samples, 0.10%)</title><rect x="99.5970%" y="548" width="0.1008%" height="15" fill="rgb(223,59,9)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (2 samples, 0.10%)</title><rect x="99.5970%" y="564" width="0.1008%" height="15" fill="rgb(233,93,31)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (2 samples, 0.10%)</title><rect x="99.5970%" y="580" width="0.1008%" height="15" fill="rgb(239,81,33)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (2 samples, 0.10%)</title><rect x="99.5970%" y="596" width="0.1008%" height="15" fill="rgb(213,120,34)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (2 samples, 0.10%)</title><rect x="99.5970%" y="612" width="0.1008%" height="15" fill="rgb(243,49,53)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (2 samples, 0.10%)</title><rect x="99.5970%" y="628" width="0.1008%" height="15" fill="rgb(247,216,33)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="638.50"></text></g><g><title>&lt;module&gt; (pandas/core/arrays/sparse/array.py:287) (2 samples, 0.10%)</title><rect x="99.5970%" y="644" width="0.1008%" height="15" fill="rgb(226,26,14)" fg:x="1977" fg:w="2"/><text x="99.8470%" y="654.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:152) (3 samples, 0.15%)</title><rect x="99.6977%" y="644" width="0.1511%" height="15" fill="rgb(215,49,53)" fg:x="1979" fg:w="3"/><text x="99.9477%" y="654.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (3 samples, 0.15%)</title><rect x="99.6977%" y="660" width="0.1511%" height="15" fill="rgb(245,162,40)" fg:x="1979" fg:w="3"/><text x="99.9477%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.15%)</title><rect x="99.6977%" y="676" width="0.1511%" height="15" fill="rgb(229,68,17)" fg:x="1979" fg:w="3"/><text x="99.9477%" y="686.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (3 samples, 0.15%)</title><rect x="99.6977%" y="692" width="0.1511%" height="15" fill="rgb(213,182,10)" fg:x="1979" fg:w="3"/><text x="99.9477%" y="702.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (3 samples, 0.15%)</title><rect x="99.6977%" y="708" width="0.1511%" height="15" fill="rgb(245,125,30)" fg:x="1979" fg:w="3"/><text x="99.9477%" y="718.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (3 samples, 0.15%)</title><rect x="99.6977%" y="724" width="0.1511%" height="15" fill="rgb(232,202,2)" fg:x="1979" fg:w="3"/><text x="99.9477%" y="734.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (3 samples, 0.15%)</title><rect x="99.6977%" y="740" width="0.1511%" height="15" fill="rgb(237,140,51)" fg:x="1979" fg:w="3"/><text x="99.9477%" y="750.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.15%)</title><rect x="99.6977%" y="756" width="0.1511%" height="15" fill="rgb(236,157,25)" fg:x="1979" fg:w="3"/><text x="99.9477%" y="766.50"></text></g><g><title>&lt;module&gt; (pandas/core/indexing.py:1564) (3 samples, 0.15%)</title><rect x="99.6977%" y="772" width="0.1511%" height="15" fill="rgb(219,209,0)" fg:x="1979" fg:w="3"/><text x="99.9477%" y="782.50"></text></g><g><title>decorator (pandas/util/_decorators.py:387) (3 samples, 0.15%)</title><rect x="99.6977%" y="788" width="0.1511%" height="15" fill="rgb(240,116,54)" fg:x="1979" fg:w="3"/><text x="99.9477%" y="798.50"></text></g><g><title>&lt;listcomp&gt; (pandas/util/_decorators.py:390) (3 samples, 0.15%)</title><rect x="99.6977%" y="804" width="0.1511%" height="15" fill="rgb(216,10,36)" fg:x="1979" fg:w="3"/><text x="99.9477%" y="814.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:68) (5 samples, 0.25%)</title><rect x="99.6977%" y="452" width="0.2519%" height="15" fill="rgb(222,72,44)" fg:x="1979" fg:w="5"/><text x="99.9477%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (5 samples, 0.25%)</title><rect x="99.6977%" y="468" width="0.2519%" height="15" fill="rgb(232,159,9)" fg:x="1979" fg:w="5"/><text x="99.9477%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (5 samples, 0.25%)</title><rect x="99.6977%" y="484" width="0.2519%" height="15" fill="rgb(210,39,32)" fg:x="1979" fg:w="5"/><text x="99.9477%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (5 samples, 0.25%)</title><rect x="99.6977%" y="500" width="0.2519%" height="15" fill="rgb(216,194,45)" fg:x="1979" fg:w="5"/><text x="99.9477%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (5 samples, 0.25%)</title><rect x="99.6977%" y="516" width="0.2519%" height="15" fill="rgb(218,18,35)" fg:x="1979" fg:w="5"/><text x="99.9477%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.25%)</title><rect x="99.6977%" y="532" width="0.2519%" height="15" fill="rgb(207,83,51)" fg:x="1979" fg:w="5"/><text x="99.9477%" y="542.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:149) (5 samples, 0.25%)</title><rect x="99.6977%" y="548" width="0.2519%" height="15" fill="rgb(225,63,43)" fg:x="1979" fg:w="5"/><text x="99.9477%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (5 samples, 0.25%)</title><rect x="99.6977%" y="564" width="0.2519%" height="15" fill="rgb(207,57,36)" fg:x="1979" fg:w="5"/><text x="99.9477%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (5 samples, 0.25%)</title><rect x="99.6977%" y="580" width="0.2519%" height="15" fill="rgb(216,99,33)" fg:x="1979" fg:w="5"/><text x="99.9477%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (5 samples, 0.25%)</title><rect x="99.6977%" y="596" width="0.2519%" height="15" fill="rgb(225,42,16)" fg:x="1979" fg:w="5"/><text x="99.9477%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (5 samples, 0.25%)</title><rect x="99.6977%" y="612" width="0.2519%" height="15" fill="rgb(220,201,45)" fg:x="1979" fg:w="5"/><text x="99.9477%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.25%)</title><rect x="99.6977%" y="628" width="0.2519%" height="15" fill="rgb(225,33,4)" fg:x="1979" fg:w="5"/><text x="99.9477%" y="638.50"></text></g><g><title>&lt;module&gt; (pandas/core/generic.py:193) (2 samples, 0.10%)</title><rect x="99.8489%" y="644" width="0.1008%" height="15" fill="rgb(224,33,50)" fg:x="1982" fg:w="2"/><text x="100.0989%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (2 samples, 0.10%)</title><rect x="99.8489%" y="660" width="0.1008%" height="15" fill="rgb(246,198,51)" fg:x="1982" fg:w="2"/><text x="100.0989%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (2 samples, 0.10%)</title><rect x="99.8489%" y="676" width="0.1008%" height="15" fill="rgb(205,22,4)" fg:x="1982" fg:w="2"/><text x="100.0989%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (2 samples, 0.10%)</title><rect x="99.8489%" y="692" width="0.1008%" height="15" fill="rgb(206,3,8)" fg:x="1982" fg:w="2"/><text x="100.0989%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (2 samples, 0.10%)</title><rect x="99.8489%" y="708" width="0.1008%" height="15" fill="rgb(251,23,15)" fg:x="1982" fg:w="2"/><text x="100.0989%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (2 samples, 0.10%)</title><rect x="99.8489%" y="724" width="0.1008%" height="15" fill="rgb(252,88,28)" fg:x="1982" fg:w="2"/><text x="100.0989%" y="734.50"></text></g><g><title>&lt;module&gt; (pandas/core/window/__init__.py:5) (2 samples, 0.10%)</title><rect x="99.8489%" y="740" width="0.1008%" height="15" fill="rgb(212,127,14)" fg:x="1982" fg:w="2"/><text x="100.0989%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (2 samples, 0.10%)</title><rect x="99.8489%" y="756" width="0.1008%" height="15" fill="rgb(247,145,37)" fg:x="1982" fg:w="2"/><text x="100.0989%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (2 samples, 0.10%)</title><rect x="99.8489%" y="772" width="0.1008%" height="15" fill="rgb(209,117,53)" fg:x="1982" fg:w="2"/><text x="100.0989%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (2 samples, 0.10%)</title><rect x="99.8489%" y="788" width="0.1008%" height="15" fill="rgb(212,90,42)" fg:x="1982" fg:w="2"/><text x="100.0989%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (2 samples, 0.10%)</title><rect x="99.8489%" y="804" width="0.1008%" height="15" fill="rgb(218,164,37)" fg:x="1982" fg:w="2"/><text x="100.0989%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (2 samples, 0.10%)</title><rect x="99.8489%" y="820" width="0.1008%" height="15" fill="rgb(246,65,34)" fg:x="1982" fg:w="2"/><text x="100.0989%" y="830.50"></text></g><g><title>&lt;module&gt; (pandas/core/window/expanding.py:51) (2 samples, 0.10%)</title><rect x="99.8489%" y="836" width="0.1008%" height="15" fill="rgb(231,100,33)" fg:x="1982" fg:w="2"/><text x="100.0989%" y="846.50"></text></g><g><title>all (1,985 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(228,126,14)" fg:x="0" fg:w="1985"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (real_diff_SA.py:8) (11 samples, 0.55%)</title><rect x="99.4458%" y="68" width="0.5542%" height="15" fill="rgb(215,173,21)" fg:x="1974" fg:w="11"/><text x="99.6958%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (11 samples, 0.55%)</title><rect x="99.4458%" y="84" width="0.5542%" height="15" fill="rgb(210,6,40)" fg:x="1974" fg:w="11"/><text x="99.6958%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (11 samples, 0.55%)</title><rect x="99.4458%" y="100" width="0.5542%" height="15" fill="rgb(212,48,18)" fg:x="1974" fg:w="11"/><text x="99.6958%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (11 samples, 0.55%)</title><rect x="99.4458%" y="116" width="0.5542%" height="15" fill="rgb(230,214,11)" fg:x="1974" fg:w="11"/><text x="99.6958%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (11 samples, 0.55%)</title><rect x="99.4458%" y="132" width="0.5542%" height="15" fill="rgb(254,105,39)" fg:x="1974" fg:w="11"/><text x="99.6958%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (11 samples, 0.55%)</title><rect x="99.4458%" y="148" width="0.5542%" height="15" fill="rgb(245,158,5)" fg:x="1974" fg:w="11"/><text x="99.6958%" y="158.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:49) (10 samples, 0.50%)</title><rect x="99.4962%" y="164" width="0.5038%" height="15" fill="rgb(249,208,11)" fg:x="1975" fg:w="10"/><text x="99.7462%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (10 samples, 0.50%)</title><rect x="99.4962%" y="180" width="0.5038%" height="15" fill="rgb(210,39,28)" fg:x="1975" fg:w="10"/><text x="99.7462%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (10 samples, 0.50%)</title><rect x="99.4962%" y="196" width="0.5038%" height="15" fill="rgb(211,56,53)" fg:x="1975" fg:w="10"/><text x="99.7462%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (10 samples, 0.50%)</title><rect x="99.4962%" y="212" width="0.5038%" height="15" fill="rgb(226,201,30)" fg:x="1975" fg:w="10"/><text x="99.7462%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (10 samples, 0.50%)</title><rect x="99.4962%" y="228" width="0.5038%" height="15" fill="rgb(239,101,34)" fg:x="1975" fg:w="10"/><text x="99.7462%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (10 samples, 0.50%)</title><rect x="99.4962%" y="244" width="0.5038%" height="15" fill="rgb(226,209,5)" fg:x="1975" fg:w="10"/><text x="99.7462%" y="254.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:47) (6 samples, 0.30%)</title><rect x="99.6977%" y="260" width="0.3023%" height="15" fill="rgb(250,105,47)" fg:x="1979" fg:w="6"/><text x="99.9477%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (6 samples, 0.30%)</title><rect x="99.6977%" y="276" width="0.3023%" height="15" fill="rgb(230,72,3)" fg:x="1979" fg:w="6"/><text x="99.9477%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (6 samples, 0.30%)</title><rect x="99.6977%" y="292" width="0.3023%" height="15" fill="rgb(232,218,39)" fg:x="1979" fg:w="6"/><text x="99.9477%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (6 samples, 0.30%)</title><rect x="99.6977%" y="308" width="0.3023%" height="15" fill="rgb(248,166,6)" fg:x="1979" fg:w="6"/><text x="99.9477%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (6 samples, 0.30%)</title><rect x="99.6977%" y="324" width="0.3023%" height="15" fill="rgb(247,89,20)" fg:x="1979" fg:w="6"/><text x="99.9477%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (6 samples, 0.30%)</title><rect x="99.6977%" y="340" width="0.3023%" height="15" fill="rgb(248,130,54)" fg:x="1979" fg:w="6"/><text x="99.9477%" y="350.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (6 samples, 0.30%)</title><rect x="99.6977%" y="356" width="0.3023%" height="15" fill="rgb(234,196,4)" fg:x="1979" fg:w="6"/><text x="99.9477%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (6 samples, 0.30%)</title><rect x="99.6977%" y="372" width="0.3023%" height="15" fill="rgb(250,143,31)" fg:x="1979" fg:w="6"/><text x="99.9477%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (6 samples, 0.30%)</title><rect x="99.6977%" y="388" width="0.3023%" height="15" fill="rgb(211,110,34)" fg:x="1979" fg:w="6"/><text x="99.9477%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (6 samples, 0.30%)</title><rect x="99.6977%" y="404" width="0.3023%" height="15" fill="rgb(215,124,48)" fg:x="1979" fg:w="6"/><text x="99.9477%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (6 samples, 0.30%)</title><rect x="99.6977%" y="420" width="0.3023%" height="15" fill="rgb(216,46,13)" fg:x="1979" fg:w="6"/><text x="99.9477%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (6 samples, 0.30%)</title><rect x="99.6977%" y="436" width="0.3023%" height="15" fill="rgb(205,184,25)" fg:x="1979" fg:w="6"/><text x="99.9477%" y="446.50"></text></g></svg></svg>