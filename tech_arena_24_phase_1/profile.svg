<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1322" onload="init(evt)" viewBox="0 0 1200 1322" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1322" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python SA_quantity_new.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1311.00"> </text><svg id="frames" x="10" width="1180" total_samples="3050"><g><title>&lt;module&gt; (scipy/stats/_stats_py.py:37) (4 samples, 0.13%)</title><rect x="0.0000%" y="356" width="0.1311%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4"/><text x="0.2500%" y="366.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1055) (4 samples, 0.13%)</title><rect x="0.0000%" y="372" width="0.1311%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="4"/><text x="0.2500%" y="382.50"></text></g><g><title>__getattr__ (scipy/__init__.py:134) (4 samples, 0.13%)</title><rect x="0.0000%" y="388" width="0.1311%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="4"/><text x="0.2500%" y="398.50"></text></g><g><title>import_module (importlib/__init__.py:127) (4 samples, 0.13%)</title><rect x="0.0000%" y="404" width="0.1311%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="4"/><text x="0.2500%" y="414.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1030) (4 samples, 0.13%)</title><rect x="0.0000%" y="420" width="0.1311%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="4"/><text x="0.2500%" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (4 samples, 0.13%)</title><rect x="0.0000%" y="436" width="0.1311%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="4"/><text x="0.2500%" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (4 samples, 0.13%)</title><rect x="0.0000%" y="452" width="0.1311%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="4"/><text x="0.2500%" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (4 samples, 0.13%)</title><rect x="0.0000%" y="468" width="0.1311%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="4"/><text x="0.2500%" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (4 samples, 0.13%)</title><rect x="0.0000%" y="484" width="0.1311%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="4"/><text x="0.2500%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (4 samples, 0.13%)</title><rect x="0.0000%" y="500" width="0.1311%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="4"/><text x="0.2500%" y="510.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py:308) (4 samples, 0.13%)</title><rect x="0.0000%" y="516" width="0.1311%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="4"/><text x="0.2500%" y="526.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (4 samples, 0.13%)</title><rect x="0.0000%" y="532" width="0.1311%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="4"/><text x="0.2500%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (4 samples, 0.13%)</title><rect x="0.0000%" y="548" width="0.1311%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="4"/><text x="0.2500%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (4 samples, 0.13%)</title><rect x="0.0000%" y="564" width="0.1311%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="4"/><text x="0.2500%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (4 samples, 0.13%)</title><rect x="0.0000%" y="580" width="0.1311%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="4"/><text x="0.2500%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (4 samples, 0.13%)</title><rect x="0.0000%" y="596" width="0.1311%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="4"/><text x="0.2500%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (4 samples, 0.13%)</title><rect x="0.0000%" y="612" width="0.1311%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="4"/><text x="0.2500%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (4 samples, 0.13%)</title><rect x="0.0000%" y="628" width="0.1311%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="4"/><text x="0.2500%" y="638.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_stats_py.py:38) (7 samples, 0.23%)</title><rect x="0.1311%" y="356" width="0.2295%" height="15" fill="rgb(221,200,47)" fg:x="4" fg:w="7"/><text x="0.3811%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.23%)</title><rect x="0.1311%" y="372" width="0.2295%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="7"/><text x="0.3811%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:972) (7 samples, 0.23%)</title><rect x="0.1311%" y="388" width="0.2295%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="7"/><text x="0.3811%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.23%)</title><rect x="0.1311%" y="404" width="0.2295%" height="15" fill="rgb(235,183,28)" fg:x="4" fg:w="7"/><text x="0.3811%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.23%)</title><rect x="0.1311%" y="420" width="0.2295%" height="15" fill="rgb(221,5,38)" fg:x="4" fg:w="7"/><text x="0.3811%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.23%)</title><rect x="0.1311%" y="436" width="0.2295%" height="15" fill="rgb(247,18,42)" fg:x="4" fg:w="7"/><text x="0.3811%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.23%)</title><rect x="0.1311%" y="452" width="0.2295%" height="15" fill="rgb(241,131,45)" fg:x="4" fg:w="7"/><text x="0.3811%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (7 samples, 0.23%)</title><rect x="0.1311%" y="468" width="0.2295%" height="15" fill="rgb(249,31,29)" fg:x="4" fg:w="7"/><text x="0.3811%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.23%)</title><rect x="0.1311%" y="484" width="0.2295%" height="15" fill="rgb(225,111,53)" fg:x="4" fg:w="7"/><text x="0.3811%" y="494.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (5 samples, 0.16%)</title><rect x="0.4262%" y="484" width="0.1639%" height="15" fill="rgb(238,160,17)" fg:x="13" fg:w="5"/><text x="0.6762%" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (5 samples, 0.16%)</title><rect x="0.4262%" y="500" width="0.1639%" height="15" fill="rgb(214,148,48)" fg:x="13" fg:w="5"/><text x="0.6762%" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.16%)</title><rect x="0.4262%" y="516" width="0.1639%" height="15" fill="rgb(232,36,49)" fg:x="13" fg:w="5"/><text x="0.6762%" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (5 samples, 0.16%)</title><rect x="0.4262%" y="532" width="0.1639%" height="15" fill="rgb(209,103,24)" fg:x="13" fg:w="5"/><text x="0.6762%" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (5 samples, 0.16%)</title><rect x="0.4262%" y="548" width="0.1639%" height="15" fill="rgb(229,88,8)" fg:x="13" fg:w="5"/><text x="0.6762%" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (5 samples, 0.16%)</title><rect x="0.4262%" y="564" width="0.1639%" height="15" fill="rgb(213,181,19)" fg:x="13" fg:w="5"/><text x="0.6762%" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (5 samples, 0.16%)</title><rect x="0.4262%" y="580" width="0.1639%" height="15" fill="rgb(254,191,54)" fg:x="13" fg:w="5"/><text x="0.6762%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.16%)</title><rect x="0.4262%" y="596" width="0.1639%" height="15" fill="rgb(241,83,37)" fg:x="13" fg:w="5"/><text x="0.6762%" y="606.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_stats_py.py:49) (6 samples, 0.20%)</title><rect x="0.4262%" y="356" width="0.1967%" height="15" fill="rgb(233,36,39)" fg:x="13" fg:w="6"/><text x="0.6762%" y="366.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (6 samples, 0.20%)</title><rect x="0.4262%" y="372" width="0.1967%" height="15" fill="rgb(226,3,54)" fg:x="13" fg:w="6"/><text x="0.6762%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (6 samples, 0.20%)</title><rect x="0.4262%" y="388" width="0.1967%" height="15" fill="rgb(245,192,40)" fg:x="13" fg:w="6"/><text x="0.6762%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (6 samples, 0.20%)</title><rect x="0.4262%" y="404" width="0.1967%" height="15" fill="rgb(238,167,29)" fg:x="13" fg:w="6"/><text x="0.6762%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (6 samples, 0.20%)</title><rect x="0.4262%" y="420" width="0.1967%" height="15" fill="rgb(232,182,51)" fg:x="13" fg:w="6"/><text x="0.6762%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (6 samples, 0.20%)</title><rect x="0.4262%" y="436" width="0.1967%" height="15" fill="rgb(231,60,39)" fg:x="13" fg:w="6"/><text x="0.6762%" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (6 samples, 0.20%)</title><rect x="0.4262%" y="452" width="0.1967%" height="15" fill="rgb(208,69,12)" fg:x="13" fg:w="6"/><text x="0.6762%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (6 samples, 0.20%)</title><rect x="0.4262%" y="468" width="0.1967%" height="15" fill="rgb(235,93,37)" fg:x="13" fg:w="6"/><text x="0.6762%" y="478.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:606) (23 samples, 0.75%)</title><rect x="0.0000%" y="260" width="0.7541%" height="15" fill="rgb(213,116,39)" fg:x="0" fg:w="23"/><text x="0.2500%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (23 samples, 0.75%)</title><rect x="0.0000%" y="276" width="0.7541%" height="15" fill="rgb(222,207,29)" fg:x="0" fg:w="23"/><text x="0.2500%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (23 samples, 0.75%)</title><rect x="0.0000%" y="292" width="0.7541%" height="15" fill="rgb(206,96,30)" fg:x="0" fg:w="23"/><text x="0.2500%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (23 samples, 0.75%)</title><rect x="0.0000%" y="308" width="0.7541%" height="15" fill="rgb(218,138,4)" fg:x="0" fg:w="23"/><text x="0.2500%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (23 samples, 0.75%)</title><rect x="0.0000%" y="324" width="0.7541%" height="15" fill="rgb(250,191,14)" fg:x="0" fg:w="23"/><text x="0.2500%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (23 samples, 0.75%)</title><rect x="0.0000%" y="340" width="0.7541%" height="15" fill="rgb(239,60,40)" fg:x="0" fg:w="23"/><text x="0.2500%" y="350.50"></text></g><g><title>&lt;module&gt; (SA_quantity_new.py:11) (24 samples, 0.79%)</title><rect x="0.0000%" y="68" width="0.7869%" height="15" fill="rgb(206,27,48)" fg:x="0" fg:w="24"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (24 samples, 0.79%)</title><rect x="0.0000%" y="84" width="0.7869%" height="15" fill="rgb(225,35,8)" fg:x="0" fg:w="24"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (24 samples, 0.79%)</title><rect x="0.0000%" y="100" width="0.7869%" height="15" fill="rgb(250,213,24)" fg:x="0" fg:w="24"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (24 samples, 0.79%)</title><rect x="0.0000%" y="116" width="0.7869%" height="15" fill="rgb(247,123,22)" fg:x="0" fg:w="24"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (24 samples, 0.79%)</title><rect x="0.0000%" y="132" width="0.7869%" height="15" fill="rgb(231,138,38)" fg:x="0" fg:w="24"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (24 samples, 0.79%)</title><rect x="0.0000%" y="148" width="0.7869%" height="15" fill="rgb(231,145,46)" fg:x="0" fg:w="24"/><text x="0.2500%" y="158.50"></text></g><g><title>&lt;module&gt; (evaluation_diff_quantity.py:10) (24 samples, 0.79%)</title><rect x="0.0000%" y="164" width="0.7869%" height="15" fill="rgb(251,118,11)" fg:x="0" fg:w="24"/><text x="0.2500%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (24 samples, 0.79%)</title><rect x="0.0000%" y="180" width="0.7869%" height="15" fill="rgb(217,147,25)" fg:x="0" fg:w="24"/><text x="0.2500%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (24 samples, 0.79%)</title><rect x="0.0000%" y="196" width="0.7869%" height="15" fill="rgb(247,81,37)" fg:x="0" fg:w="24"/><text x="0.2500%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (24 samples, 0.79%)</title><rect x="0.0000%" y="212" width="0.7869%" height="15" fill="rgb(209,12,38)" fg:x="0" fg:w="24"/><text x="0.2500%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (24 samples, 0.79%)</title><rect x="0.0000%" y="228" width="0.7869%" height="15" fill="rgb(227,1,9)" fg:x="0" fg:w="24"/><text x="0.2500%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (24 samples, 0.79%)</title><rect x="0.0000%" y="244" width="0.7869%" height="15" fill="rgb(248,47,43)" fg:x="0" fg:w="24"/><text x="0.2500%" y="254.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:1) (4 samples, 0.13%)</title><rect x="0.8525%" y="260" width="0.1311%" height="15" fill="rgb(221,10,30)" fg:x="26" fg:w="4"/><text x="1.1025%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (4 samples, 0.13%)</title><rect x="0.8525%" y="276" width="0.1311%" height="15" fill="rgb(210,229,1)" fg:x="26" fg:w="4"/><text x="1.1025%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (4 samples, 0.13%)</title><rect x="0.8525%" y="292" width="0.1311%" height="15" fill="rgb(222,148,37)" fg:x="26" fg:w="4"/><text x="1.1025%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (4 samples, 0.13%)</title><rect x="0.8525%" y="308" width="0.1311%" height="15" fill="rgb(234,67,33)" fg:x="26" fg:w="4"/><text x="1.1025%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (4 samples, 0.13%)</title><rect x="0.8525%" y="324" width="0.1311%" height="15" fill="rgb(247,98,35)" fg:x="26" fg:w="4"/><text x="1.1025%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (4 samples, 0.13%)</title><rect x="0.8525%" y="340" width="0.1311%" height="15" fill="rgb(247,138,52)" fg:x="26" fg:w="4"/><text x="1.1025%" y="350.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:18) (4 samples, 0.13%)</title><rect x="0.8525%" y="356" width="0.1311%" height="15" fill="rgb(213,79,30)" fg:x="26" fg:w="4"/><text x="1.1025%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (4 samples, 0.13%)</title><rect x="0.8525%" y="372" width="0.1311%" height="15" fill="rgb(246,177,23)" fg:x="26" fg:w="4"/><text x="1.1025%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (4 samples, 0.13%)</title><rect x="0.8525%" y="388" width="0.1311%" height="15" fill="rgb(230,62,27)" fg:x="26" fg:w="4"/><text x="1.1025%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (4 samples, 0.13%)</title><rect x="0.8525%" y="404" width="0.1311%" height="15" fill="rgb(216,154,8)" fg:x="26" fg:w="4"/><text x="1.1025%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1181) (4 samples, 0.13%)</title><rect x="0.8525%" y="420" width="0.1311%" height="15" fill="rgb(244,35,45)" fg:x="26" fg:w="4"/><text x="1.1025%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (4 samples, 0.13%)</title><rect x="0.8525%" y="436" width="0.1311%" height="15" fill="rgb(251,115,12)" fg:x="26" fg:w="4"/><text x="1.1025%" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (4 samples, 0.13%)</title><rect x="0.8525%" y="452" width="0.1311%" height="15" fill="rgb(240,54,50)" fg:x="26" fg:w="4"/><text x="1.1025%" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (4 samples, 0.13%)</title><rect x="0.8525%" y="468" width="0.1311%" height="15" fill="rgb(233,84,52)" fg:x="26" fg:w="4"/><text x="1.1025%" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (4 samples, 0.13%)</title><rect x="0.8525%" y="484" width="0.1311%" height="15" fill="rgb(207,117,47)" fg:x="26" fg:w="4"/><text x="1.1025%" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1181) (4 samples, 0.13%)</title><rect x="0.8525%" y="500" width="0.1311%" height="15" fill="rgb(249,43,39)" fg:x="26" fg:w="4"/><text x="1.1025%" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (4 samples, 0.13%)</title><rect x="0.8525%" y="516" width="0.1311%" height="15" fill="rgb(209,38,44)" fg:x="26" fg:w="4"/><text x="1.1025%" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (4 samples, 0.13%)</title><rect x="0.8525%" y="532" width="0.1311%" height="15" fill="rgb(236,212,23)" fg:x="26" fg:w="4"/><text x="1.1025%" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (4 samples, 0.13%)</title><rect x="0.8525%" y="548" width="0.1311%" height="15" fill="rgb(242,79,21)" fg:x="26" fg:w="4"/><text x="1.1025%" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (4 samples, 0.13%)</title><rect x="0.8525%" y="564" width="0.1311%" height="15" fill="rgb(211,96,35)" fg:x="26" fg:w="4"/><text x="1.1025%" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1181) (4 samples, 0.13%)</title><rect x="0.8525%" y="580" width="0.1311%" height="15" fill="rgb(253,215,40)" fg:x="26" fg:w="4"/><text x="1.1025%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (4 samples, 0.13%)</title><rect x="0.8525%" y="596" width="0.1311%" height="15" fill="rgb(211,81,21)" fg:x="26" fg:w="4"/><text x="1.1025%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (4 samples, 0.13%)</title><rect x="0.8525%" y="612" width="0.1311%" height="15" fill="rgb(208,190,38)" fg:x="26" fg:w="4"/><text x="1.1025%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:972) (4 samples, 0.13%)</title><rect x="0.8525%" y="628" width="0.1311%" height="15" fill="rgb(235,213,38)" fg:x="26" fg:w="4"/><text x="1.1025%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (4 samples, 0.13%)</title><rect x="0.8525%" y="644" width="0.1311%" height="15" fill="rgb(237,122,38)" fg:x="26" fg:w="4"/><text x="1.1025%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (4 samples, 0.13%)</title><rect x="0.8525%" y="660" width="0.1311%" height="15" fill="rgb(244,218,35)" fg:x="26" fg:w="4"/><text x="1.1025%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (4 samples, 0.13%)</title><rect x="0.8525%" y="676" width="0.1311%" height="15" fill="rgb(240,68,47)" fg:x="26" fg:w="4"/><text x="1.1025%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (4 samples, 0.13%)</title><rect x="0.8525%" y="692" width="0.1311%" height="15" fill="rgb(210,16,53)" fg:x="26" fg:w="4"/><text x="1.1025%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (4 samples, 0.13%)</title><rect x="0.8525%" y="708" width="0.1311%" height="15" fill="rgb(235,124,12)" fg:x="26" fg:w="4"/><text x="1.1025%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (4 samples, 0.13%)</title><rect x="0.8525%" y="724" width="0.1311%" height="15" fill="rgb(224,169,11)" fg:x="26" fg:w="4"/><text x="1.1025%" y="734.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:40) (4 samples, 0.13%)</title><rect x="0.8525%" y="740" width="0.1311%" height="15" fill="rgb(250,166,2)" fg:x="26" fg:w="4"/><text x="1.1025%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (4 samples, 0.13%)</title><rect x="0.8525%" y="756" width="0.1311%" height="15" fill="rgb(242,216,29)" fg:x="26" fg:w="4"/><text x="1.1025%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (4 samples, 0.13%)</title><rect x="0.8525%" y="772" width="0.1311%" height="15" fill="rgb(230,116,27)" fg:x="26" fg:w="4"/><text x="1.1025%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (4 samples, 0.13%)</title><rect x="0.8525%" y="788" width="0.1311%" height="15" fill="rgb(228,99,48)" fg:x="26" fg:w="4"/><text x="1.1025%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1181) (4 samples, 0.13%)</title><rect x="0.8525%" y="804" width="0.1311%" height="15" fill="rgb(253,11,6)" fg:x="26" fg:w="4"/><text x="1.1025%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (4 samples, 0.13%)</title><rect x="0.8525%" y="820" width="0.1311%" height="15" fill="rgb(247,143,39)" fg:x="26" fg:w="4"/><text x="1.1025%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (4 samples, 0.13%)</title><rect x="0.8525%" y="836" width="0.1311%" height="15" fill="rgb(236,97,10)" fg:x="26" fg:w="4"/><text x="1.1025%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (4 samples, 0.13%)</title><rect x="0.8525%" y="852" width="0.1311%" height="15" fill="rgb(233,208,19)" fg:x="26" fg:w="4"/><text x="1.1025%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (4 samples, 0.13%)</title><rect x="0.8525%" y="868" width="0.1311%" height="15" fill="rgb(216,164,2)" fg:x="26" fg:w="4"/><text x="1.1025%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1181) (4 samples, 0.13%)</title><rect x="0.8525%" y="884" width="0.1311%" height="15" fill="rgb(220,129,5)" fg:x="26" fg:w="4"/><text x="1.1025%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (4 samples, 0.13%)</title><rect x="0.8525%" y="900" width="0.1311%" height="15" fill="rgb(242,17,10)" fg:x="26" fg:w="4"/><text x="1.1025%" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (4 samples, 0.13%)</title><rect x="0.8525%" y="916" width="0.1311%" height="15" fill="rgb(242,107,0)" fg:x="26" fg:w="4"/><text x="1.1025%" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (4 samples, 0.13%)</title><rect x="0.8525%" y="932" width="0.1311%" height="15" fill="rgb(251,28,31)" fg:x="26" fg:w="4"/><text x="1.1025%" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (4 samples, 0.13%)</title><rect x="0.8525%" y="948" width="0.1311%" height="15" fill="rgb(233,223,10)" fg:x="26" fg:w="4"/><text x="1.1025%" y="958.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (4 samples, 0.13%)</title><rect x="0.8525%" y="964" width="0.1311%" height="15" fill="rgb(215,21,27)" fg:x="26" fg:w="4"/><text x="1.1025%" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (4 samples, 0.13%)</title><rect x="0.8525%" y="980" width="0.1311%" height="15" fill="rgb(232,23,21)" fg:x="26" fg:w="4"/><text x="1.1025%" y="990.50"></text></g><g><title>&lt;module&gt; (dateutil/parser/__init__.py:2) (4 samples, 0.13%)</title><rect x="0.8525%" y="996" width="0.1311%" height="15" fill="rgb(244,5,23)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1006.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (4 samples, 0.13%)</title><rect x="0.8525%" y="1012" width="0.1311%" height="15" fill="rgb(226,81,46)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1022.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (4 samples, 0.13%)</title><rect x="0.8525%" y="1028" width="0.1311%" height="15" fill="rgb(247,70,30)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1038.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (4 samples, 0.13%)</title><rect x="0.8525%" y="1044" width="0.1311%" height="15" fill="rgb(212,68,19)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1054.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (4 samples, 0.13%)</title><rect x="0.8525%" y="1060" width="0.1311%" height="15" fill="rgb(240,187,13)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (4 samples, 0.13%)</title><rect x="0.8525%" y="1076" width="0.1311%" height="15" fill="rgb(223,113,26)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1086.50"></text></g><g><title>&lt;module&gt; (dateutil/parser/_parser.py:35) (4 samples, 0.13%)</title><rect x="0.8525%" y="1092" width="0.1311%" height="15" fill="rgb(206,192,2)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1102.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (4 samples, 0.13%)</title><rect x="0.8525%" y="1108" width="0.1311%" height="15" fill="rgb(241,108,4)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1118.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (4 samples, 0.13%)</title><rect x="0.8525%" y="1124" width="0.1311%" height="15" fill="rgb(247,173,49)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1134.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (4 samples, 0.13%)</title><rect x="0.8525%" y="1140" width="0.1311%" height="15" fill="rgb(224,114,35)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1150.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (4 samples, 0.13%)</title><rect x="0.8525%" y="1156" width="0.1311%" height="15" fill="rgb(245,159,27)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1166.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (4 samples, 0.13%)</title><rect x="0.8525%" y="1172" width="0.1311%" height="15" fill="rgb(245,172,44)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1182.50"></text></g><g><title>&lt;module&gt; (string.py:146) (4 samples, 0.13%)</title><rect x="0.8525%" y="1188" width="0.1311%" height="15" fill="rgb(236,23,11)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1198.50"></text></g><g><title>__init_subclass__ (string.py:85) (4 samples, 0.13%)</title><rect x="0.8525%" y="1204" width="0.1311%" height="15" fill="rgb(205,117,38)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1214.50"></text></g><g><title>compile (re.py:252) (4 samples, 0.13%)</title><rect x="0.8525%" y="1220" width="0.1311%" height="15" fill="rgb(237,72,25)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1230.50"></text></g><g><title>_compile (re.py:304) (4 samples, 0.13%)</title><rect x="0.8525%" y="1236" width="0.1311%" height="15" fill="rgb(244,70,9)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1246.50"></text></g><g><title>compile (sre_compile.py:788) (4 samples, 0.13%)</title><rect x="0.8525%" y="1252" width="0.1311%" height="15" fill="rgb(217,125,39)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1262.50"></text></g><g><title>parse (sre_parse.py:955) (4 samples, 0.13%)</title><rect x="0.8525%" y="1268" width="0.1311%" height="15" fill="rgb(235,36,10)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1278.50"></text></g><g><title>_parse_sub (sre_parse.py:444) (4 samples, 0.13%)</title><rect x="0.8525%" y="1284" width="0.1311%" height="15" fill="rgb(251,123,47)" fg:x="26" fg:w="4"/><text x="1.1025%" y="1294.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:68) (6 samples, 0.20%)</title><rect x="1.0164%" y="452" width="0.1967%" height="15" fill="rgb(221,13,13)" fg:x="31" fg:w="6"/><text x="1.2664%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (6 samples, 0.20%)</title><rect x="1.0164%" y="468" width="0.1967%" height="15" fill="rgb(238,131,9)" fg:x="31" fg:w="6"/><text x="1.2664%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (6 samples, 0.20%)</title><rect x="1.0164%" y="484" width="0.1967%" height="15" fill="rgb(211,50,8)" fg:x="31" fg:w="6"/><text x="1.2664%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (6 samples, 0.20%)</title><rect x="1.0164%" y="500" width="0.1967%" height="15" fill="rgb(245,182,24)" fg:x="31" fg:w="6"/><text x="1.2664%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (5 samples, 0.16%)</title><rect x="1.0492%" y="516" width="0.1639%" height="15" fill="rgb(242,14,37)" fg:x="32" fg:w="5"/><text x="1.2992%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.16%)</title><rect x="1.0492%" y="532" width="0.1639%" height="15" fill="rgb(246,228,12)" fg:x="32" fg:w="5"/><text x="1.2992%" y="542.50"></text></g><g><title>&lt;module&gt; (pandas/core/frame.py:149) (5 samples, 0.16%)</title><rect x="1.0492%" y="548" width="0.1639%" height="15" fill="rgb(213,55,15)" fg:x="32" fg:w="5"/><text x="1.2992%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (5 samples, 0.16%)</title><rect x="1.0492%" y="564" width="0.1639%" height="15" fill="rgb(209,9,3)" fg:x="32" fg:w="5"/><text x="1.2992%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (5 samples, 0.16%)</title><rect x="1.0492%" y="580" width="0.1639%" height="15" fill="rgb(230,59,30)" fg:x="32" fg:w="5"/><text x="1.2992%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (5 samples, 0.16%)</title><rect x="1.0492%" y="596" width="0.1639%" height="15" fill="rgb(209,121,21)" fg:x="32" fg:w="5"/><text x="1.2992%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (5 samples, 0.16%)</title><rect x="1.0492%" y="612" width="0.1639%" height="15" fill="rgb(220,109,13)" fg:x="32" fg:w="5"/><text x="1.2992%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.16%)</title><rect x="1.0492%" y="628" width="0.1639%" height="15" fill="rgb(232,18,1)" fg:x="32" fg:w="5"/><text x="1.2992%" y="638.50"></text></g><g><title>&lt;module&gt; (SA_quantity_new.py:5) (14 samples, 0.46%)</title><rect x="0.7869%" y="68" width="0.4590%" height="15" fill="rgb(215,41,42)" fg:x="24" fg:w="14"/><text x="1.0369%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (14 samples, 0.46%)</title><rect x="0.7869%" y="84" width="0.4590%" height="15" fill="rgb(224,123,36)" fg:x="24" fg:w="14"/><text x="1.0369%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (14 samples, 0.46%)</title><rect x="0.7869%" y="100" width="0.4590%" height="15" fill="rgb(240,125,3)" fg:x="24" fg:w="14"/><text x="1.0369%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (14 samples, 0.46%)</title><rect x="0.7869%" y="116" width="0.4590%" height="15" fill="rgb(205,98,50)" fg:x="24" fg:w="14"/><text x="1.0369%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (14 samples, 0.46%)</title><rect x="0.7869%" y="132" width="0.4590%" height="15" fill="rgb(205,185,37)" fg:x="24" fg:w="14"/><text x="1.0369%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (14 samples, 0.46%)</title><rect x="0.7869%" y="148" width="0.4590%" height="15" fill="rgb(238,207,15)" fg:x="24" fg:w="14"/><text x="1.0369%" y="158.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:49) (12 samples, 0.39%)</title><rect x="0.8525%" y="164" width="0.3934%" height="15" fill="rgb(213,199,42)" fg:x="26" fg:w="12"/><text x="1.1025%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (12 samples, 0.39%)</title><rect x="0.8525%" y="180" width="0.3934%" height="15" fill="rgb(235,201,11)" fg:x="26" fg:w="12"/><text x="1.1025%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (12 samples, 0.39%)</title><rect x="0.8525%" y="196" width="0.3934%" height="15" fill="rgb(207,46,11)" fg:x="26" fg:w="12"/><text x="1.1025%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (12 samples, 0.39%)</title><rect x="0.8525%" y="212" width="0.3934%" height="15" fill="rgb(241,35,35)" fg:x="26" fg:w="12"/><text x="1.1025%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (12 samples, 0.39%)</title><rect x="0.8525%" y="228" width="0.3934%" height="15" fill="rgb(243,32,47)" fg:x="26" fg:w="12"/><text x="1.1025%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (12 samples, 0.39%)</title><rect x="0.8525%" y="244" width="0.3934%" height="15" fill="rgb(247,202,23)" fg:x="26" fg:w="12"/><text x="1.1025%" y="254.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:47) (7 samples, 0.23%)</title><rect x="1.0164%" y="260" width="0.2295%" height="15" fill="rgb(219,102,11)" fg:x="31" fg:w="7"/><text x="1.2664%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.23%)</title><rect x="1.0164%" y="276" width="0.2295%" height="15" fill="rgb(243,110,44)" fg:x="31" fg:w="7"/><text x="1.2664%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.23%)</title><rect x="1.0164%" y="292" width="0.2295%" height="15" fill="rgb(222,74,54)" fg:x="31" fg:w="7"/><text x="1.2664%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.23%)</title><rect x="1.0164%" y="308" width="0.2295%" height="15" fill="rgb(216,99,12)" fg:x="31" fg:w="7"/><text x="1.2664%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (7 samples, 0.23%)</title><rect x="1.0164%" y="324" width="0.2295%" height="15" fill="rgb(226,22,26)" fg:x="31" fg:w="7"/><text x="1.2664%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.23%)</title><rect x="1.0164%" y="340" width="0.2295%" height="15" fill="rgb(217,163,10)" fg:x="31" fg:w="7"/><text x="1.2664%" y="350.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (7 samples, 0.23%)</title><rect x="1.0164%" y="356" width="0.2295%" height="15" fill="rgb(213,25,53)" fg:x="31" fg:w="7"/><text x="1.2664%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.23%)</title><rect x="1.0164%" y="372" width="0.2295%" height="15" fill="rgb(252,105,26)" fg:x="31" fg:w="7"/><text x="1.2664%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.23%)</title><rect x="1.0164%" y="388" width="0.2295%" height="15" fill="rgb(220,39,43)" fg:x="31" fg:w="7"/><text x="1.2664%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.23%)</title><rect x="1.0164%" y="404" width="0.2295%" height="15" fill="rgb(229,68,48)" fg:x="31" fg:w="7"/><text x="1.2664%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (7 samples, 0.23%)</title><rect x="1.0164%" y="420" width="0.2295%" height="15" fill="rgb(252,8,32)" fg:x="31" fg:w="7"/><text x="1.2664%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.23%)</title><rect x="1.0164%" y="436" width="0.2295%" height="15" fill="rgb(223,20,43)" fg:x="31" fg:w="7"/><text x="1.2664%" y="446.50"></text></g><g><title>get_my_solution (SA_quantity_new.py:570) (5 samples, 0.16%)</title><rect x="1.2459%" y="84" width="0.1639%" height="15" fill="rgb(229,81,49)" fg:x="38" fg:w="5"/><text x="1.4959%" y="94.50"></text></g><g><title>generate_new_purchase (SA_quantity_new.py:230) (5 samples, 0.16%)</title><rect x="1.6721%" y="132" width="0.1639%" height="15" fill="rgb(236,28,36)" fg:x="51" fg:w="5"/><text x="1.9221%" y="142.50"></text></g><g><title>generate_neighbor (SA_quantity_new.py:210) (11 samples, 0.36%)</title><rect x="1.6393%" y="116" width="0.3607%" height="15" fill="rgb(249,185,26)" fg:x="50" fg:w="11"/><text x="1.8893%" y="126.50"></text></g><g><title>run (SA_quantity_new.py:510) (22 samples, 0.72%)</title><rect x="1.5082%" y="100" width="0.7213%" height="15" fill="rgb(249,174,33)" fg:x="46" fg:w="22"/><text x="1.7582%" y="110.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:480) (5 samples, 0.16%)</title><rect x="2.2295%" y="148" width="0.1639%" height="15" fill="rgb(233,201,37)" fg:x="68" fg:w="5"/><text x="2.4795%" y="158.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:565) (4 samples, 0.13%)</title><rect x="2.2623%" y="164" width="0.1311%" height="15" fill="rgb(221,78,26)" fg:x="69" fg:w="4"/><text x="2.5123%" y="174.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:657) (4 samples, 0.13%)</title><rect x="2.2623%" y="180" width="0.1311%" height="15" fill="rgb(250,127,30)" fg:x="69" fg:w="4"/><text x="2.5123%" y="190.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:1196) (4 samples, 0.13%)</title><rect x="2.2623%" y="196" width="0.1311%" height="15" fill="rgb(230,49,44)" fg:x="69" fg:w="4"/><text x="2.5123%" y="206.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:380) (8 samples, 0.26%)</title><rect x="2.2295%" y="116" width="0.2623%" height="15" fill="rgb(229,67,23)" fg:x="68" fg:w="8"/><text x="2.4795%" y="126.50"></text></g><g><title>__init__ (pandas/core/frame.py:778) (8 samples, 0.26%)</title><rect x="2.2295%" y="132" width="0.2623%" height="15" fill="rgb(249,83,47)" fg:x="68" fg:w="8"/><text x="2.4795%" y="142.50"></text></g><g><title>solution_data_preparation (evaluation_diff_quantity.py:354) (7 samples, 0.23%)</title><rect x="2.5246%" y="132" width="0.2295%" height="15" fill="rgb(215,43,3)" fg:x="77" fg:w="7"/><text x="2.7746%" y="142.50"></text></g><g><title>merge (pandas/core/frame.py:10832) (7 samples, 0.23%)</title><rect x="2.5246%" y="148" width="0.2295%" height="15" fill="rgb(238,154,13)" fg:x="77" fg:w="7"/><text x="2.7746%" y="158.50"></text></g><g><title>merge (pandas/core/reshape/merge.py:184) (4 samples, 0.13%)</title><rect x="2.6230%" y="164" width="0.1311%" height="15" fill="rgb(219,56,2)" fg:x="80" fg:w="4"/><text x="2.8730%" y="174.50"></text></g><g><title>__init__ (pandas/core/reshape/merge.py:800) (5 samples, 0.16%)</title><rect x="2.8525%" y="180" width="0.1639%" height="15" fill="rgb(233,0,4)" fg:x="87" fg:w="5"/><text x="3.1025%" y="190.50"></text></g><g><title>_drop_labels_or_levels (pandas/core/generic.py:1989) (5 samples, 0.16%)</title><rect x="2.8525%" y="196" width="0.1639%" height="15" fill="rgb(235,30,7)" fg:x="87" fg:w="5"/><text x="3.1025%" y="206.50"></text></g><g><title>drop (pandas/core/frame.py:5581) (5 samples, 0.16%)</title><rect x="2.8525%" y="212" width="0.1639%" height="15" fill="rgb(250,79,13)" fg:x="87" fg:w="5"/><text x="3.1025%" y="222.50"></text></g><g><title>drop (pandas/core/generic.py:4788) (5 samples, 0.16%)</title><rect x="2.8525%" y="228" width="0.1639%" height="15" fill="rgb(211,146,34)" fg:x="87" fg:w="5"/><text x="3.1025%" y="238.50"></text></g><g><title>merge (pandas/core/reshape/merge.py:170) (9 samples, 0.30%)</title><rect x="2.7541%" y="164" width="0.2951%" height="15" fill="rgb(228,22,38)" fg:x="84" fg:w="9"/><text x="3.0041%" y="174.50"></text></g><g><title>solution_data_preparation (evaluation_diff_quantity.py:356) (13 samples, 0.43%)</title><rect x="2.7541%" y="132" width="0.4262%" height="15" fill="rgb(235,168,5)" fg:x="84" fg:w="13"/><text x="3.0041%" y="142.50"></text></g><g><title>merge (pandas/core/frame.py:10832) (13 samples, 0.43%)</title><rect x="2.7541%" y="148" width="0.4262%" height="15" fill="rgb(221,155,16)" fg:x="84" fg:w="13"/><text x="3.0041%" y="158.50"></text></g><g><title>merge (pandas/core/reshape/merge.py:184) (4 samples, 0.13%)</title><rect x="3.0492%" y="164" width="0.1311%" height="15" fill="rgb(215,215,53)" fg:x="93" fg:w="4"/><text x="3.2992%" y="174.50"></text></g><g><title>get_result (pandas/core/reshape/merge.py:888) (4 samples, 0.13%)</title><rect x="3.0492%" y="180" width="0.1311%" height="15" fill="rgb(223,4,10)" fg:x="93" fg:w="4"/><text x="3.2992%" y="190.50"></text></g><g><title>merge (pandas/core/reshape/merge.py:170) (5 samples, 0.16%)</title><rect x="3.2131%" y="164" width="0.1639%" height="15" fill="rgb(234,103,6)" fg:x="98" fg:w="5"/><text x="3.4631%" y="174.50"></text></g><g><title>get_result (pandas/core/reshape/merge.py:886) (4 samples, 0.13%)</title><rect x="3.3770%" y="180" width="0.1311%" height="15" fill="rgb(227,97,0)" fg:x="103" fg:w="4"/><text x="3.6270%" y="190.50"></text></g><g><title>get_result (pandas/core/reshape/merge.py:888) (5 samples, 0.16%)</title><rect x="3.5082%" y="180" width="0.1639%" height="15" fill="rgb(234,150,53)" fg:x="107" fg:w="5"/><text x="3.7582%" y="190.50"></text></g><g><title>_reindex_and_concat (pandas/core/reshape/merge.py:879) (4 samples, 0.13%)</title><rect x="3.5410%" y="196" width="0.1311%" height="15" fill="rgb(228,201,54)" fg:x="108" fg:w="4"/><text x="3.7910%" y="206.50"></text></g><g><title>concat (pandas/core/reshape/concat.py:395) (4 samples, 0.13%)</title><rect x="3.5410%" y="212" width="0.1311%" height="15" fill="rgb(222,22,37)" fg:x="108" fg:w="4"/><text x="3.7910%" y="222.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:684) (4 samples, 0.13%)</title><rect x="3.5410%" y="228" width="0.1311%" height="15" fill="rgb(237,53,32)" fg:x="108" fg:w="4"/><text x="3.7910%" y="238.50"></text></g><g><title>solution_data_preparation (evaluation_diff_quantity.py:359) (15 samples, 0.49%)</title><rect x="3.2131%" y="132" width="0.4918%" height="15" fill="rgb(233,25,53)" fg:x="98" fg:w="15"/><text x="3.4631%" y="142.50"></text></g><g><title>merge (pandas/core/frame.py:10832) (15 samples, 0.49%)</title><rect x="3.2131%" y="148" width="0.4918%" height="15" fill="rgb(210,40,34)" fg:x="98" fg:w="15"/><text x="3.4631%" y="158.50"></text></g><g><title>merge (pandas/core/reshape/merge.py:184) (10 samples, 0.33%)</title><rect x="3.3770%" y="164" width="0.3279%" height="15" fill="rgb(241,220,44)" fg:x="103" fg:w="10"/><text x="3.6270%" y="174.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:390) (42 samples, 1.38%)</title><rect x="2.5246%" y="116" width="1.3770%" height="15" fill="rgb(235,28,35)" fg:x="77" fg:w="42"/><text x="2.7746%" y="126.50"></text></g><g><title>solution_data_preparation (evaluation_diff_quantity.py:367) (4 samples, 0.13%)</title><rect x="3.7705%" y="132" width="0.1311%" height="15" fill="rgb(210,56,17)" fg:x="115" fg:w="4"/><text x="4.0205%" y="142.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:461) (4 samples, 0.13%)</title><rect x="4.0000%" y="148" width="0.1311%" height="15" fill="rgb(224,130,29)" fg:x="122" fg:w="4"/><text x="4.2500%" y="158.50"></text></g><g><title>__init__ (pandas/core/frame.py:876) (6 samples, 0.20%)</title><rect x="3.9672%" y="132" width="0.1967%" height="15" fill="rgb(235,212,8)" fg:x="121" fg:w="6"/><text x="4.2172%" y="142.50"></text></g><g><title>astype (pandas/core/generic.py:6614) (6 samples, 0.20%)</title><rect x="4.1967%" y="132" width="0.1967%" height="15" fill="rgb(223,33,50)" fg:x="128" fg:w="6"/><text x="4.4467%" y="142.50"></text></g><g><title>items (pandas/core/frame.py:1500) (4 samples, 0.13%)</title><rect x="4.2623%" y="148" width="0.1311%" height="15" fill="rgb(219,149,13)" fg:x="130" fg:w="4"/><text x="4.5123%" y="158.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4639) (4 samples, 0.13%)</title><rect x="4.2623%" y="164" width="0.1311%" height="15" fill="rgb(250,156,29)" fg:x="130" fg:w="4"/><text x="4.5123%" y="174.50"></text></g><g><title>_ixs (pandas/core/frame.py:4011) (4 samples, 0.13%)</title><rect x="4.2623%" y="180" width="0.1311%" height="15" fill="rgb(216,193,19)" fg:x="130" fg:w="4"/><text x="4.5123%" y="190.50"></text></g><g><title>astype (pandas/core/internals/blocks.py:758) (5 samples, 0.16%)</title><rect x="4.4590%" y="196" width="0.1639%" height="15" fill="rgb(216,135,14)" fg:x="136" fg:w="5"/><text x="4.7090%" y="206.50"></text></g><g><title>astype_array_safe (pandas/core/dtypes/astype.py:237) (5 samples, 0.16%)</title><rect x="4.4590%" y="212" width="0.1639%" height="15" fill="rgb(241,47,5)" fg:x="136" fg:w="5"/><text x="4.7090%" y="222.50"></text></g><g><title>astype_array (pandas/core/dtypes/astype.py:182) (4 samples, 0.13%)</title><rect x="4.4918%" y="228" width="0.1311%" height="15" fill="rgb(233,42,35)" fg:x="137" fg:w="4"/><text x="4.7418%" y="238.50"></text></g><g><title>apply (pandas/core/internals/managers.py:363) (6 samples, 0.20%)</title><rect x="4.4590%" y="180" width="0.1967%" height="15" fill="rgb(231,13,6)" fg:x="136" fg:w="6"/><text x="4.7090%" y="190.50"></text></g><g><title>astype (pandas/core/generic.py:6643) (8 samples, 0.26%)</title><rect x="4.4262%" y="148" width="0.2623%" height="15" fill="rgb(207,181,40)" fg:x="135" fg:w="8"/><text x="4.6762%" y="158.50"></text></g><g><title>astype (pandas/core/internals/managers.py:430) (7 samples, 0.23%)</title><rect x="4.4590%" y="164" width="0.2295%" height="15" fill="rgb(254,173,49)" fg:x="136" fg:w="7"/><text x="4.7090%" y="174.50"></text></g><g><title>astype (pandas/core/generic.py:6620) (9 samples, 0.30%)</title><rect x="4.4262%" y="132" width="0.2951%" height="15" fill="rgb(221,1,38)" fg:x="135" fg:w="9"/><text x="4.6762%" y="142.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:396) (28 samples, 0.92%)</title><rect x="3.9672%" y="116" width="0.9180%" height="15" fill="rgb(206,124,46)" fg:x="121" fg:w="28"/><text x="4.2172%" y="126.50"></text></g><g><title>get_time_step_solution (evaluation_diff_quantity.py:81) (6 samples, 0.20%)</title><rect x="5.0164%" y="132" width="0.1967%" height="15" fill="rgb(249,21,11)" fg:x="153" fg:w="6"/><text x="5.2664%" y="142.50"></text></g><g><title>__contains__ (pandas/core/indexes/base.py:5360) (6 samples, 0.20%)</title><rect x="5.0164%" y="148" width="0.1967%" height="15" fill="rgb(222,201,40)" fg:x="153" fg:w="6"/><text x="5.2664%" y="158.50"></text></g><g><title>astype (pandas/core/indexes/base.py:1100) (6 samples, 0.20%)</title><rect x="5.3115%" y="260" width="0.1967%" height="15" fill="rgb(235,61,29)" fg:x="162" fg:w="6"/><text x="5.5615%" y="270.50"></text></g><g><title>_get_indexer_strict (pandas/core/indexes/base.py:6195) (9 samples, 0.30%)</title><rect x="5.2459%" y="212" width="0.2951%" height="15" fill="rgb(219,207,3)" fg:x="160" fg:w="9"/><text x="5.4959%" y="222.50"></text></g><g><title>get_indexer_for (pandas/core/indexes/base.py:6182) (9 samples, 0.30%)</title><rect x="5.2459%" y="228" width="0.2951%" height="15" fill="rgb(222,56,46)" fg:x="160" fg:w="9"/><text x="5.4959%" y="238.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3948) (8 samples, 0.26%)</title><rect x="5.2787%" y="244" width="0.2623%" height="15" fill="rgb(239,76,54)" fg:x="161" fg:w="8"/><text x="5.5287%" y="254.50"></text></g><g><title>get_indexer_non_unique (pandas/core/indexes/base.py:6128) (4 samples, 0.13%)</title><rect x="5.8689%" y="260" width="0.1311%" height="15" fill="rgb(231,124,27)" fg:x="179" fg:w="4"/><text x="6.1189%" y="270.50"></text></g><g><title>_reindex_non_unique (pandas/core/indexes/base.py:4472) (10 samples, 0.33%)</title><rect x="5.7377%" y="228" width="0.3279%" height="15" fill="rgb(249,195,6)" fg:x="175" fg:w="10"/><text x="5.9877%" y="238.50"></text></g><g><title>get_indexer_non_unique (pandas/core/indexes/base.py:6144) (6 samples, 0.20%)</title><rect x="5.8689%" y="244" width="0.1967%" height="15" fill="rgb(237,174,47)" fg:x="179" fg:w="6"/><text x="6.1189%" y="254.50"></text></g><g><title>_get_indexer_strict (pandas/core/indexes/base.py:6198) (14 samples, 0.46%)</title><rect x="5.6393%" y="212" width="0.4590%" height="15" fill="rgb(206,201,31)" fg:x="172" fg:w="14"/><text x="5.8893%" y="222.50"></text></g><g><title>_getitem_iterable (pandas/core/indexing.py:1360) (30 samples, 0.98%)</title><rect x="5.2131%" y="180" width="0.9836%" height="15" fill="rgb(231,57,52)" fg:x="159" fg:w="30"/><text x="5.4631%" y="190.50"></text></g><g><title>_get_listlike_indexer (pandas/core/indexing.py:1558) (29 samples, 0.95%)</title><rect x="5.2459%" y="196" width="0.9508%" height="15" fill="rgb(248,177,22)" fg:x="160" fg:w="29"/><text x="5.4959%" y="206.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:114) (6 samples, 0.20%)</title><rect x="6.1967%" y="260" width="0.1967%" height="15" fill="rgb(215,211,37)" fg:x="189" fg:w="6"/><text x="6.4467%" y="270.50"></text></g><g><title>take (pandas/core/arrays/_mixins.py:168) (4 samples, 0.13%)</title><rect x="6.2623%" y="276" width="0.1311%" height="15" fill="rgb(241,128,51)" fg:x="191" fg:w="4"/><text x="6.5123%" y="286.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1307) (11 samples, 0.36%)</title><rect x="6.1967%" y="244" width="0.3607%" height="15" fill="rgb(227,165,31)" fg:x="189" fg:w="11"/><text x="6.4467%" y="254.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (5 samples, 0.16%)</title><rect x="6.3934%" y="260" width="0.1639%" height="15" fill="rgb(228,167,24)" fg:x="195" fg:w="5"/><text x="6.6434%" y="270.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5686) (16 samples, 0.52%)</title><rect x="6.1967%" y="196" width="0.5246%" height="15" fill="rgb(228,143,12)" fg:x="189" fg:w="16"/><text x="6.4467%" y="206.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:687) (16 samples, 0.52%)</title><rect x="6.1967%" y="212" width="0.5246%" height="15" fill="rgb(249,149,8)" fg:x="189" fg:w="16"/><text x="6.4467%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:688) (16 samples, 0.52%)</title><rect x="6.1967%" y="228" width="0.5246%" height="15" fill="rgb(243,35,44)" fg:x="189" fg:w="16"/><text x="6.4467%" y="238.50"></text></g><g><title>get_time_step_solution (evaluation_diff_quantity.py:82) (47 samples, 1.54%)</title><rect x="5.2131%" y="132" width="1.5410%" height="15" fill="rgb(246,89,9)" fg:x="159" fg:w="47"/><text x="5.4631%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1191) (47 samples, 1.54%)</title><rect x="5.2131%" y="148" width="1.5410%" height="15" fill="rgb(233,213,13)" fg:x="159" fg:w="47"/><text x="5.4631%" y="158.50"></text></g><g><title>_getitem_axis (pandas/core/indexing.py:1420) (47 samples, 1.54%)</title><rect x="5.2131%" y="164" width="1.5410%" height="15" fill="rgb(233,141,41)" fg:x="159" fg:w="47"/><text x="5.4631%" y="174.50"></text></g><g><title>_getitem_iterable (pandas/core/indexing.py:1361) (17 samples, 0.56%)</title><rect x="6.1967%" y="180" width="0.5574%" height="15" fill="rgb(239,167,4)" fg:x="189" fg:w="17"/><text x="6.4467%" y="190.50"></text></g><g><title>apply (pandas/core/internals/managers.py:363) (4 samples, 0.13%)</title><rect x="6.8525%" y="196" width="0.1311%" height="15" fill="rgb(209,217,16)" fg:x="209" fg:w="4"/><text x="7.1025%" y="206.50"></text></g><g><title>copy (pandas/core/internals/managers.py:593) (5 samples, 0.16%)</title><rect x="6.8525%" y="180" width="0.1639%" height="15" fill="rgb(219,88,35)" fg:x="209" fg:w="5"/><text x="7.1025%" y="190.50"></text></g><g><title>_consolidate (pandas/core/internals/managers.py:2265) (5 samples, 0.16%)</title><rect x="7.0492%" y="212" width="0.1639%" height="15" fill="rgb(220,193,23)" fg:x="215" fg:w="5"/><text x="7.2992%" y="222.50"></text></g><g><title>&lt;lambda&gt; (pandas/core/internals/managers.py:2264) (4 samples, 0.13%)</title><rect x="7.0820%" y="228" width="0.1311%" height="15" fill="rgb(230,90,52)" fg:x="216" fg:w="4"/><text x="7.3320%" y="238.50"></text></g><g><title>_consolidate_key (pandas/core/internals/blocks.py:228) (4 samples, 0.13%)</title><rect x="7.0820%" y="244" width="0.1311%" height="15" fill="rgb(252,106,19)" fg:x="216" fg:w="4"/><text x="7.3320%" y="254.50"></text></g><g><title>copy (pandas/core/generic.py:6811) (23 samples, 0.75%)</title><rect x="6.7869%" y="164" width="0.7541%" height="15" fill="rgb(206,74,20)" fg:x="207" fg:w="23"/><text x="7.0369%" y="174.50"></text></g><g><title>copy (pandas/core/internals/managers.py:604) (16 samples, 0.52%)</title><rect x="7.0164%" y="180" width="0.5246%" height="15" fill="rgb(230,138,44)" fg:x="214" fg:w="16"/><text x="7.2664%" y="190.50"></text></g><g><title>_consolidate_inplace (pandas/core/internals/managers.py:1788) (15 samples, 0.49%)</title><rect x="7.0492%" y="196" width="0.4918%" height="15" fill="rgb(235,182,43)" fg:x="215" fg:w="15"/><text x="7.2992%" y="206.50"></text></g><g><title>_consolidate (pandas/core/internals/managers.py:2269) (10 samples, 0.33%)</title><rect x="7.2131%" y="212" width="0.3279%" height="15" fill="rgb(242,16,51)" fg:x="220" fg:w="10"/><text x="7.4631%" y="222.50"></text></g><g><title>set_index (pandas/core/frame.py:6128) (25 samples, 0.82%)</title><rect x="6.7869%" y="148" width="0.8197%" height="15" fill="rgb(248,9,4)" fg:x="207" fg:w="25"/><text x="7.0369%" y="158.50"></text></g><g><title>set_index (pandas/core/frame.py:6165) (4 samples, 0.13%)</title><rect x="7.6393%" y="148" width="0.1311%" height="15" fill="rgb(210,31,22)" fg:x="233" fg:w="4"/><text x="7.8893%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (4 samples, 0.13%)</title><rect x="7.6393%" y="164" width="0.1311%" height="15" fill="rgb(239,54,39)" fg:x="233" fg:w="4"/><text x="7.8893%" y="174.50"></text></g><g><title>set_index (pandas/core/frame.py:6178) (4 samples, 0.13%)</title><rect x="7.7705%" y="148" width="0.1311%" height="15" fill="rgb(230,99,41)" fg:x="237" fg:w="4"/><text x="8.0205%" y="158.50"></text></g><g><title>ensure_index_from_sequences (pandas/core/indexes/base.py:7588) (4 samples, 0.13%)</title><rect x="7.7705%" y="164" width="0.1311%" height="15" fill="rgb(253,106,12)" fg:x="237" fg:w="4"/><text x="8.0205%" y="174.50"></text></g><g><title>get_time_step_solution (evaluation_diff_quantity.py:83) (36 samples, 1.18%)</title><rect x="6.7541%" y="132" width="1.1803%" height="15" fill="rgb(213,46,41)" fg:x="206" fg:w="36"/><text x="7.0041%" y="142.50"></text></g><g><title>__init__ (pandas/core/frame.py:766) (6 samples, 0.20%)</title><rect x="8.1639%" y="148" width="0.1967%" height="15" fill="rgb(215,133,35)" fg:x="249" fg:w="6"/><text x="8.4139%" y="158.50"></text></g><g><title>default_index (pandas/core/indexes/api.py:388) (4 samples, 0.13%)</title><rect x="8.2295%" y="164" width="0.1311%" height="15" fill="rgb(213,28,5)" fg:x="251" fg:w="4"/><text x="8.4795%" y="174.50"></text></g><g><title>__init__ (pandas/core/frame.py:767) (5 samples, 0.16%)</title><rect x="8.3607%" y="148" width="0.1639%" height="15" fill="rgb(215,77,49)" fg:x="255" fg:w="5"/><text x="8.6107%" y="158.50"></text></g><g><title>default_index (pandas/core/indexes/api.py:388) (4 samples, 0.13%)</title><rect x="8.3934%" y="164" width="0.1311%" height="15" fill="rgb(248,100,22)" fg:x="256" fg:w="4"/><text x="8.6434%" y="174.50"></text></g><g><title>pandas_dtype (pandas/core/dtypes/common.py:1640) (4 samples, 0.13%)</title><rect x="8.5246%" y="164" width="0.1311%" height="15" fill="rgb(208,67,9)" fg:x="260" fg:w="4"/><text x="8.7746%" y="174.50"></text></g><g><title>__init__ (pandas/core/frame.py:768) (10 samples, 0.33%)</title><rect x="8.5246%" y="148" width="0.3279%" height="15" fill="rgb(219,133,21)" fg:x="260" fg:w="10"/><text x="8.7746%" y="158.50"></text></g><g><title>__init__ (pandas/core/series.py:493) (10 samples, 0.33%)</title><rect x="9.3770%" y="180" width="0.3279%" height="15" fill="rgb(246,46,29)" fg:x="286" fg:w="10"/><text x="9.6270%" y="190.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:516) (10 samples, 0.33%)</title><rect x="9.3770%" y="196" width="0.3279%" height="15" fill="rgb(246,185,52)" fg:x="286" fg:w="10"/><text x="9.6270%" y="206.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (8 samples, 0.26%)</title><rect x="10.4262%" y="212" width="0.2623%" height="15" fill="rgb(252,136,11)" fg:x="318" fg:w="8"/><text x="10.6762%" y="222.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:577) (5 samples, 0.16%)</title><rect x="10.5246%" y="228" width="0.1639%" height="15" fill="rgb(219,138,53)" fg:x="321" fg:w="5"/><text x="10.7746%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (8 samples, 0.26%)</title><rect x="10.7541%" y="212" width="0.2623%" height="15" fill="rgb(211,51,23)" fg:x="328" fg:w="8"/><text x="11.0041%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (4 samples, 0.13%)</title><rect x="11.1148%" y="212" width="0.1311%" height="15" fill="rgb(247,221,28)" fg:x="339" fg:w="4"/><text x="11.3648%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:537) (48 samples, 1.57%)</title><rect x="9.8033%" y="180" width="1.5738%" height="15" fill="rgb(251,222,45)" fg:x="299" fg:w="48"/><text x="10.0533%" y="190.50"></text></g><g><title>_init_dict (pandas/core/series.py:651) (41 samples, 1.34%)</title><rect x="10.0328%" y="196" width="1.3443%" height="15" fill="rgb(217,162,53)" fg:x="306" fg:w="41"/><text x="10.2828%" y="206.50"></text></g><g><title>__init__ (pandas/core/series.py:594) (4 samples, 0.13%)</title><rect x="11.2459%" y="212" width="0.1311%" height="15" fill="rgb(229,93,14)" fg:x="343" fg:w="4"/><text x="11.4959%" y="222.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (4 samples, 0.13%)</title><rect x="11.5082%" y="196" width="0.1311%" height="15" fill="rgb(209,67,49)" fg:x="351" fg:w="4"/><text x="11.7582%" y="206.50"></text></g><g><title>name (pandas/core/series.py:782) (4 samples, 0.13%)</title><rect x="11.5082%" y="212" width="0.1311%" height="15" fill="rgb(213,87,29)" fg:x="351" fg:w="4"/><text x="11.7582%" y="222.50"></text></g><g><title>__getattr__ (pandas/core/generic.py:6299) (4 samples, 0.13%)</title><rect x="11.5082%" y="228" width="0.1311%" height="15" fill="rgb(205,151,52)" fg:x="351" fg:w="4"/><text x="11.7582%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (8 samples, 0.26%)</title><rect x="11.5082%" y="180" width="0.2623%" height="15" fill="rgb(253,215,39)" fg:x="351" fg:w="8"/><text x="11.7582%" y="190.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6320) (4 samples, 0.13%)</title><rect x="11.6393%" y="196" width="0.1311%" height="15" fill="rgb(221,220,41)" fg:x="355" fg:w="4"/><text x="11.8893%" y="206.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:443) (84 samples, 2.75%)</title><rect x="9.1475%" y="164" width="2.7541%" height="15" fill="rgb(218,133,21)" fg:x="279" fg:w="84"/><text x="9.3975%" y="174.50">di..</text></g><g><title>__init__ (pandas/core/series.py:594) (4 samples, 0.13%)</title><rect x="11.7705%" y="180" width="0.1311%" height="15" fill="rgb(221,193,43)" fg:x="359" fg:w="4"/><text x="12.0205%" y="190.50"></text></g><g><title>_set_axis (pandas/core/generic.py:814) (4 samples, 0.13%)</title><rect x="11.7705%" y="196" width="0.1311%" height="15" fill="rgb(240,128,52)" fg:x="359" fg:w="4"/><text x="12.0205%" y="206.50"></text></g><g><title>__finalize__ (pandas/core/generic.py:6262) (4 samples, 0.13%)</title><rect x="11.9016%" y="212" width="0.1311%" height="15" fill="rgb(253,114,12)" fg:x="363" fg:w="4"/><text x="12.1516%" y="222.50"></text></g><g><title>_isna_array (pandas/core/dtypes/missing.py:292) (5 samples, 0.16%)</title><rect x="12.2951%" y="244" width="0.1639%" height="15" fill="rgb(215,223,47)" fg:x="375" fg:w="5"/><text x="12.5451%" y="254.50"></text></g><g><title>_isna_string_dtype (pandas/core/dtypes/missing.py:313) (5 samples, 0.16%)</title><rect x="12.2951%" y="260" width="0.1639%" height="15" fill="rgb(248,225,23)" fg:x="375" fg:w="5"/><text x="12.5451%" y="270.50"></text></g><g><title>_isna (pandas/core/dtypes/missing.py:216) (8 samples, 0.26%)</title><rect x="12.2623%" y="228" width="0.2623%" height="15" fill="rgb(250,108,0)" fg:x="374" fg:w="8"/><text x="12.5123%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (7 samples, 0.23%)</title><rect x="12.8852%" y="244" width="0.2295%" height="15" fill="rgb(228,208,7)" fg:x="393" fg:w="7"/><text x="13.1352%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (5 samples, 0.16%)</title><rect x="13.1475%" y="244" width="0.1639%" height="15" fill="rgb(244,45,10)" fg:x="401" fg:w="5"/><text x="13.3975%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (9 samples, 0.30%)</title><rect x="13.4098%" y="244" width="0.2951%" height="15" fill="rgb(207,125,25)" fg:x="409" fg:w="9"/><text x="13.6598%" y="254.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6320) (6 samples, 0.20%)</title><rect x="13.5082%" y="260" width="0.1967%" height="15" fill="rgb(210,195,18)" fg:x="412" fg:w="6"/><text x="13.7582%" y="270.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:444) (58 samples, 1.90%)</title><rect x="11.9016%" y="164" width="1.9016%" height="15" fill="rgb(249,80,12)" fg:x="363" fg:w="58"/><text x="12.1516%" y="174.50">d..</text></g><g><title>isna (pandas/core/series.py:5775) (58 samples, 1.90%)</title><rect x="11.9016%" y="180" width="1.9016%" height="15" fill="rgb(221,65,9)" fg:x="363" fg:w="58"/><text x="12.1516%" y="190.50">i..</text></g><g><title>isna (pandas/core/generic.py:8754) (58 samples, 1.90%)</title><rect x="11.9016%" y="196" width="1.9016%" height="15" fill="rgb(235,49,36)" fg:x="363" fg:w="58"/><text x="12.1516%" y="206.50">i..</text></g><g><title>isna (pandas/core/dtypes/missing.py:178) (53 samples, 1.74%)</title><rect x="12.0656%" y="212" width="1.7377%" height="15" fill="rgb(225,32,20)" fg:x="368" fg:w="53"/><text x="12.3156%" y="222.50"></text></g><g><title>_isna (pandas/core/dtypes/missing.py:218) (39 samples, 1.28%)</title><rect x="12.5246%" y="228" width="1.2787%" height="15" fill="rgb(215,141,46)" fg:x="382" fg:w="39"/><text x="12.7746%" y="238.50"></text></g><g><title>any (pandas/core/series.py:6471) (12 samples, 0.39%)</title><rect x="13.9344%" y="180" width="0.3934%" height="15" fill="rgb(250,160,47)" fg:x="425" fg:w="12"/><text x="14.1844%" y="190.50"></text></g><g><title>_reduce (pandas/core/series.py:6457) (8 samples, 0.26%)</title><rect x="14.0656%" y="196" width="0.2623%" height="15" fill="rgb(216,222,40)" fg:x="429" fg:w="8"/><text x="14.3156%" y="206.50"></text></g><g><title>nanany (pandas/core/nanops.py:520) (6 samples, 0.20%)</title><rect x="14.1311%" y="212" width="0.1967%" height="15" fill="rgb(234,217,39)" fg:x="431" fg:w="6"/><text x="14.3811%" y="222.50"></text></g><g><title>_any (numpy/core/_methods.py:58) (5 samples, 0.16%)</title><rect x="14.1639%" y="228" width="0.1639%" height="15" fill="rgb(207,178,40)" fg:x="432" fg:w="5"/><text x="14.4139%" y="238.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:453) (17 samples, 0.56%)</title><rect x="13.8033%" y="164" width="0.5574%" height="15" fill="rgb(221,136,13)" fg:x="421" fg:w="17"/><text x="14.0533%" y="174.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:475) (10 samples, 0.33%)</title><rect x="14.3607%" y="164" width="0.3279%" height="15" fill="rgb(249,199,10)" fg:x="438" fg:w="10"/><text x="14.6107%" y="174.50"></text></g><g><title>__len__ (pandas/core/series.py:918) (5 samples, 0.16%)</title><rect x="14.5246%" y="180" width="0.1639%" height="15" fill="rgb(249,222,13)" fg:x="443" fg:w="5"/><text x="14.7746%" y="190.50"></text></g><g><title>__init__ (pandas/core/frame.py:876) (189 samples, 6.20%)</title><rect x="9.0164%" y="148" width="6.1967%" height="15" fill="rgb(244,185,38)" fg:x="275" fg:w="189"/><text x="9.2664%" y="158.50">__init__..</text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:503) (14 samples, 0.46%)</title><rect x="14.7541%" y="164" width="0.4590%" height="15" fill="rgb(236,202,9)" fg:x="450" fg:w="14"/><text x="15.0041%" y="174.50"></text></g><g><title>arrays_to_mgr (pandas/core/internals/construction.py:152) (10 samples, 0.33%)</title><rect x="14.8852%" y="180" width="0.3279%" height="15" fill="rgb(250,229,37)" fg:x="454" fg:w="10"/><text x="15.1352%" y="190.50"></text></g><g><title>create_block_manager_from_column_arrays (pandas/core/internals/managers.py:2144) (4 samples, 0.13%)</title><rect x="15.0820%" y="196" width="0.1311%" height="15" fill="rgb(206,174,23)" fg:x="460" fg:w="4"/><text x="15.3320%" y="206.50"></text></g><g><title>_consolidate_inplace (pandas/core/internals/managers.py:1787) (4 samples, 0.13%)</title><rect x="15.0820%" y="212" width="0.1311%" height="15" fill="rgb(211,33,43)" fg:x="460" fg:w="4"/><text x="15.3320%" y="222.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:408) (317 samples, 10.39%)</title><rect x="4.9180%" y="116" width="10.3934%" height="15" fill="rgb(245,58,50)" fg:x="150" fg:w="317"/><text x="5.1680%" y="126.50">SA_evaluation_f..</text></g><g><title>get_time_step_solution (evaluation_diff_quantity.py:86) (225 samples, 7.38%)</title><rect x="7.9344%" y="132" width="7.3770%" height="15" fill="rgb(244,68,36)" fg:x="242" fg:w="225"/><text x="8.1844%" y="142.50">get_time_s..</text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:410) (5 samples, 0.16%)</title><rect x="15.3115%" y="116" width="0.1639%" height="15" fill="rgb(232,229,15)" fg:x="467" fg:w="5"/><text x="15.5615%" y="126.50"></text></g><g><title>empty (pandas/core/generic.py:2140) (5 samples, 0.16%)</title><rect x="15.3115%" y="132" width="0.1639%" height="15" fill="rgb(254,30,23)" fg:x="467" fg:w="5"/><text x="15.5615%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4092) (4 samples, 0.13%)</title><rect x="15.6393%" y="148" width="0.1311%" height="15" fill="rgb(235,160,14)" fg:x="477" fg:w="4"/><text x="15.8893%" y="158.50"></text></g><g><title>copy (pandas/core/generic.py:6811) (4 samples, 0.13%)</title><rect x="15.9344%" y="180" width="0.1311%" height="15" fill="rgb(212,155,44)" fg:x="486" fg:w="4"/><text x="16.1844%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4093) (10 samples, 0.33%)</title><rect x="15.7705%" y="148" width="0.3279%" height="15" fill="rgb(226,2,50)" fg:x="481" fg:w="10"/><text x="16.0205%" y="158.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4152) (5 samples, 0.16%)</title><rect x="15.9344%" y="164" width="0.1639%" height="15" fill="rgb(234,177,6)" fg:x="486" fg:w="5"/><text x="16.1844%" y="174.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (4 samples, 0.13%)</title><rect x="16.1311%" y="196" width="0.1311%" height="15" fill="rgb(217,24,9)" fg:x="492" fg:w="4"/><text x="16.3811%" y="206.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:287) (20 samples, 0.66%)</title><rect x="15.6393%" y="132" width="0.6557%" height="15" fill="rgb(220,13,46)" fg:x="477" fg:w="20"/><text x="15.8893%" y="142.50"></text></g><g><title>new_method (pandas/core/ops/common.py:76) (6 samples, 0.20%)</title><rect x="16.0984%" y="148" width="0.1967%" height="15" fill="rgb(239,221,27)" fg:x="491" fg:w="6"/><text x="16.3484%" y="158.50"></text></g><g><title>__eq__ (pandas/core/arraylike.py:40) (6 samples, 0.20%)</title><rect x="16.0984%" y="164" width="0.1967%" height="15" fill="rgb(222,198,25)" fg:x="491" fg:w="6"/><text x="16.3484%" y="174.50"></text></g><g><title>_cmp_method (pandas/core/series.py:6121) (5 samples, 0.16%)</title><rect x="16.1311%" y="180" width="0.1639%" height="15" fill="rgb(211,99,13)" fg:x="492" fg:w="5"/><text x="16.3811%" y="190.50"></text></g><g><title>_interleave (pandas/core/internals/managers.py:1735) (7 samples, 0.23%)</title><rect x="16.5902%" y="196" width="0.2295%" height="15" fill="rgb(232,111,31)" fg:x="506" fg:w="7"/><text x="16.8402%" y="206.50"></text></g><g><title>get_values (pandas/core/internals/blocks.py:2251) (6 samples, 0.20%)</title><rect x="16.6230%" y="212" width="0.1967%" height="15" fill="rgb(245,82,37)" fg:x="507" fg:w="6"/><text x="16.8730%" y="222.50"></text></g><g><title>iterrows (pandas/core/frame.py:1553) (16 samples, 0.52%)</title><rect x="16.3279%" y="148" width="0.5246%" height="15" fill="rgb(227,149,46)" fg:x="498" fg:w="16"/><text x="16.5779%" y="158.50"></text></g><g><title>values (pandas/core/frame.py:12664) (15 samples, 0.49%)</title><rect x="16.3607%" y="164" width="0.4918%" height="15" fill="rgb(218,36,50)" fg:x="499" fg:w="15"/><text x="16.6107%" y="174.50"></text></g><g><title>as_array (pandas/core/internals/managers.py:1694) (15 samples, 0.49%)</title><rect x="16.3607%" y="180" width="0.4918%" height="15" fill="rgb(226,80,48)" fg:x="499" fg:w="15"/><text x="16.6107%" y="190.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:294) (20 samples, 0.66%)</title><rect x="16.3279%" y="132" width="0.6557%" height="15" fill="rgb(238,224,15)" fg:x="498" fg:w="20"/><text x="16.5779%" y="142.50"></text></g><g><title>iterrows (pandas/core/frame.py:1554) (4 samples, 0.13%)</title><rect x="16.8525%" y="148" width="0.1311%" height="15" fill="rgb(241,136,10)" fg:x="514" fg:w="4"/><text x="17.1025%" y="158.50"></text></g><g><title>_append (pandas/core/frame.py:10551) (5 samples, 0.16%)</title><rect x="17.4426%" y="212" width="0.1639%" height="15" fill="rgb(208,32,45)" fg:x="532" fg:w="5"/><text x="17.6926%" y="222.50"></text></g><g><title>_append (pandas/core/frame.py:10554) (4 samples, 0.13%)</title><rect x="17.6066%" y="212" width="0.1311%" height="15" fill="rgb(207,135,9)" fg:x="537" fg:w="4"/><text x="17.8566%" y="222.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:671) (4 samples, 0.13%)</title><rect x="17.8033%" y="244" width="0.1311%" height="15" fill="rgb(206,86,44)" fg:x="543" fg:w="4"/><text x="18.0533%" y="254.50"></text></g><g><title>new_axes (pandas/core/reshape/concat.py:702) (4 samples, 0.13%)</title><rect x="17.8033%" y="260" width="0.1311%" height="15" fill="rgb(245,177,15)" fg:x="543" fg:w="4"/><text x="18.0533%" y="270.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/reshape/concat.py:703) (4 samples, 0.13%)</title><rect x="17.8033%" y="276" width="0.1311%" height="15" fill="rgb(206,64,50)" fg:x="543" fg:w="4"/><text x="18.0533%" y="286.50"></text></g><g><title>add_server (evaluation_diff_quantity.py:31) (26 samples, 0.85%)</title><rect x="17.2131%" y="148" width="0.8525%" height="15" fill="rgb(234,36,40)" fg:x="525" fg:w="26"/><text x="17.4631%" y="158.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:911) (24 samples, 0.79%)</title><rect x="17.2787%" y="164" width="0.7869%" height="15" fill="rgb(213,64,8)" fg:x="527" fg:w="24"/><text x="17.5287%" y="174.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:1932) (24 samples, 0.79%)</title><rect x="17.2787%" y="180" width="0.7869%" height="15" fill="rgb(210,75,36)" fg:x="527" fg:w="24"/><text x="17.5287%" y="190.50"></text></g><g><title>_setitem_with_indexer_missing (pandas/core/indexing.py:2328) (21 samples, 0.69%)</title><rect x="17.3770%" y="196" width="0.6885%" height="15" fill="rgb(229,88,21)" fg:x="530" fg:w="21"/><text x="17.6270%" y="206.50"></text></g><g><title>_append (pandas/core/frame.py:10572) (9 samples, 0.30%)</title><rect x="17.7705%" y="212" width="0.2951%" height="15" fill="rgb(252,204,47)" fg:x="542" fg:w="9"/><text x="18.0205%" y="222.50"></text></g><g><title>concat (pandas/core/reshape/concat.py:395) (8 samples, 0.26%)</title><rect x="17.8033%" y="228" width="0.2623%" height="15" fill="rgb(208,77,27)" fg:x="543" fg:w="8"/><text x="18.0533%" y="238.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1183) (4 samples, 0.13%)</title><rect x="18.1311%" y="164" width="0.1311%" height="15" fill="rgb(221,76,26)" fg:x="553" fg:w="4"/><text x="18.3811%" y="174.50"></text></g><g><title>_setitem_single_column (pandas/core/indexing.py:2164) (5 samples, 0.16%)</title><rect x="18.3279%" y="212" width="0.1639%" height="15" fill="rgb(225,139,18)" fg:x="559" fg:w="5"/><text x="18.5779%" y="222.50"></text></g><g><title>dtypes (pandas/core/generic.py:6461) (4 samples, 0.13%)</title><rect x="18.3607%" y="228" width="0.1311%" height="15" fill="rgb(230,137,11)" fg:x="560" fg:w="4"/><text x="18.6107%" y="238.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:1942) (9 samples, 0.30%)</title><rect x="18.2951%" y="180" width="0.2951%" height="15" fill="rgb(212,28,1)" fg:x="558" fg:w="9"/><text x="18.5451%" y="190.50"></text></g><g><title>_setitem_with_indexer_split_path (pandas/core/indexing.py:2035) (8 samples, 0.26%)</title><rect x="18.3279%" y="196" width="0.2623%" height="15" fill="rgb(248,164,17)" fg:x="559" fg:w="8"/><text x="18.5779%" y="206.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:299) (49 samples, 1.61%)</title><rect x="17.1148%" y="132" width="1.6066%" height="15" fill="rgb(222,171,42)" fg:x="522" fg:w="49"/><text x="17.3648%" y="142.50"></text></g><g><title>add_server (evaluation_diff_quantity.py:34) (20 samples, 0.66%)</title><rect x="18.0656%" y="148" width="0.6557%" height="15" fill="rgb(243,84,45)" fg:x="551" fg:w="20"/><text x="18.3156%" y="158.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:911) (13 samples, 0.43%)</title><rect x="18.2951%" y="164" width="0.4262%" height="15" fill="rgb(252,49,23)" fg:x="558" fg:w="13"/><text x="18.5451%" y="174.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:1944) (4 samples, 0.13%)</title><rect x="18.5902%" y="180" width="0.1311%" height="15" fill="rgb(215,19,7)" fg:x="567" fg:w="4"/><text x="18.8402%" y="190.50"></text></g><g><title>_ixs (pandas/core/frame.py:4011) (4 samples, 0.13%)</title><rect x="18.7541%" y="180" width="0.1311%" height="15" fill="rgb(238,81,41)" fg:x="572" fg:w="4"/><text x="19.0041%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (6 samples, 0.20%)</title><rect x="18.7213%" y="148" width="0.1967%" height="15" fill="rgb(210,199,37)" fg:x="571" fg:w="6"/><text x="18.9713%" y="158.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4639) (6 samples, 0.20%)</title><rect x="18.7213%" y="164" width="0.1967%" height="15" fill="rgb(244,192,49)" fg:x="571" fg:w="6"/><text x="18.9713%" y="174.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (4 samples, 0.13%)</title><rect x="18.9836%" y="212" width="0.1311%" height="15" fill="rgb(226,211,11)" fg:x="579" fg:w="4"/><text x="19.2336%" y="222.50"></text></g><g><title>new_method (pandas/core/ops/common.py:76) (9 samples, 0.30%)</title><rect x="18.9180%" y="148" width="0.2951%" height="15" fill="rgb(236,162,54)" fg:x="577" fg:w="9"/><text x="19.1680%" y="158.50"></text></g><g><title>__mul__ (pandas/core/arraylike.py:202) (9 samples, 0.30%)</title><rect x="18.9180%" y="164" width="0.2951%" height="15" fill="rgb(220,229,9)" fg:x="577" fg:w="9"/><text x="19.1680%" y="174.50"></text></g><g><title>_arith_method (pandas/core/series.py:6135) (9 samples, 0.30%)</title><rect x="18.9180%" y="180" width="0.2951%" height="15" fill="rgb(250,87,22)" fg:x="577" fg:w="9"/><text x="19.1680%" y="190.50"></text></g><g><title>_arith_method (pandas/core/base.py:1384) (7 samples, 0.23%)</title><rect x="18.9836%" y="196" width="0.2295%" height="15" fill="rgb(239,43,17)" fg:x="579" fg:w="7"/><text x="19.2336%" y="206.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:301) (22 samples, 0.72%)</title><rect x="18.7213%" y="132" width="0.7213%" height="15" fill="rgb(231,177,25)" fg:x="571" fg:w="22"/><text x="18.9713%" y="142.50"></text></g><g><title>sum (pandas/core/series.py:6528) (7 samples, 0.23%)</title><rect x="19.2131%" y="148" width="0.2295%" height="15" fill="rgb(219,179,1)" fg:x="586" fg:w="7"/><text x="19.4631%" y="158.50"></text></g><g><title>sum (pandas/core/generic.py:12506) (7 samples, 0.23%)</title><rect x="19.2131%" y="164" width="0.2295%" height="15" fill="rgb(238,219,53)" fg:x="586" fg:w="7"/><text x="19.4631%" y="174.50"></text></g><g><title>_min_count_stat_function (pandas/core/generic.py:12489) (5 samples, 0.16%)</title><rect x="19.2787%" y="180" width="0.1639%" height="15" fill="rgb(232,167,36)" fg:x="588" fg:w="5"/><text x="19.5287%" y="190.50"></text></g><g><title>_reduce (pandas/core/series.py:6457) (5 samples, 0.16%)</title><rect x="19.2787%" y="196" width="0.1639%" height="15" fill="rgb(244,19,51)" fg:x="588" fg:w="5"/><text x="19.5287%" y="206.50"></text></g><g><title>_f (pandas/core/nanops.py:85) (4 samples, 0.13%)</title><rect x="19.3115%" y="212" width="0.1311%" height="15" fill="rgb(224,6,22)" fg:x="589" fg:w="4"/><text x="19.5615%" y="222.50"></text></g><g><title>new_func (pandas/core/nanops.py:404) (4 samples, 0.13%)</title><rect x="19.3115%" y="228" width="0.1311%" height="15" fill="rgb(224,145,5)" fg:x="589" fg:w="4"/><text x="19.5615%" y="238.50"></text></g><g><title>newfunc (pandas/core/nanops.py:477) (4 samples, 0.13%)</title><rect x="19.3115%" y="244" width="0.1311%" height="15" fill="rgb(234,130,49)" fg:x="589" fg:w="4"/><text x="19.5615%" y="254.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (4 samples, 0.13%)</title><rect x="19.4754%" y="148" width="0.1311%" height="15" fill="rgb(254,6,2)" fg:x="594" fg:w="4"/><text x="19.7254%" y="158.50"></text></g><g><title>_with_infer (pandas/core/indexes/base.py:680) (6 samples, 0.20%)</title><rect x="19.7705%" y="228" width="0.1967%" height="15" fill="rgb(208,96,46)" fg:x="603" fg:w="6"/><text x="20.0205%" y="238.50"></text></g><g><title>insert (pandas/core/internals/managers.py:1365) (11 samples, 0.36%)</title><rect x="19.6393%" y="196" width="0.3607%" height="15" fill="rgb(239,3,39)" fg:x="599" fg:w="11"/><text x="19.8893%" y="206.50"></text></g><g><title>insert (pandas/core/indexes/base.py:7012) (7 samples, 0.23%)</title><rect x="19.7705%" y="212" width="0.2295%" height="15" fill="rgb(233,210,1)" fg:x="603" fg:w="7"/><text x="20.0205%" y="222.50"></text></g><g><title>insert (pandas/core/internals/managers.py:1384) (4 samples, 0.13%)</title><rect x="20.0000%" y="196" width="0.1311%" height="15" fill="rgb(244,137,37)" fg:x="610" fg:w="4"/><text x="20.2500%" y="206.50"></text></g><g><title>__setitem__ (pandas/core/frame.py:4311) (19 samples, 0.62%)</title><rect x="19.6066%" y="148" width="0.6230%" height="15" fill="rgb(240,136,2)" fg:x="598" fg:w="19"/><text x="19.8566%" y="158.50"></text></g><g><title>_set_item (pandas/core/frame.py:4538) (19 samples, 0.62%)</title><rect x="19.6066%" y="164" width="0.6230%" height="15" fill="rgb(239,18,37)" fg:x="598" fg:w="19"/><text x="19.8566%" y="174.50"></text></g><g><title>_set_item_mgr (pandas/core/frame.py:4488) (18 samples, 0.59%)</title><rect x="19.6393%" y="180" width="0.5902%" height="15" fill="rgb(218,185,22)" fg:x="599" fg:w="18"/><text x="19.8893%" y="190.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (9 samples, 0.30%)</title><rect x="20.2951%" y="212" width="0.2951%" height="15" fill="rgb(225,218,4)" fg:x="619" fg:w="9"/><text x="20.5451%" y="222.50"></text></g><g><title>_construct_result (pandas/core/series.py:6232) (4 samples, 0.13%)</title><rect x="20.5902%" y="212" width="0.1311%" height="15" fill="rgb(230,182,32)" fg:x="628" fg:w="4"/><text x="20.8402%" y="222.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:303) (40 samples, 1.31%)</title><rect x="19.4426%" y="132" width="1.3115%" height="15" fill="rgb(242,56,43)" fg:x="593" fg:w="40"/><text x="19.6926%" y="142.50"></text></g><g><title>new_method (pandas/core/ops/common.py:76) (16 samples, 0.52%)</title><rect x="20.2295%" y="148" width="0.5246%" height="15" fill="rgb(233,99,24)" fg:x="617" fg:w="16"/><text x="20.4795%" y="158.50"></text></g><g><title>__mul__ (pandas/core/arraylike.py:202) (16 samples, 0.52%)</title><rect x="20.2295%" y="164" width="0.5246%" height="15" fill="rgb(234,209,42)" fg:x="617" fg:w="16"/><text x="20.4795%" y="174.50"></text></g><g><title>_arith_method (pandas/core/series.py:6135) (16 samples, 0.52%)</title><rect x="20.2295%" y="180" width="0.5246%" height="15" fill="rgb(227,7,12)" fg:x="617" fg:w="16"/><text x="20.4795%" y="190.50"></text></g><g><title>_arith_method (pandas/core/base.py:1384) (14 samples, 0.46%)</title><rect x="20.2951%" y="196" width="0.4590%" height="15" fill="rgb(245,203,43)" fg:x="619" fg:w="14"/><text x="20.5451%" y="206.50"></text></g><g><title>concat (pandas/core/reshape/concat.py:382) (4 samples, 0.13%)</title><rect x="20.7869%" y="148" width="0.1311%" height="15" fill="rgb(238,205,33)" fg:x="634" fg:w="4"/><text x="21.0369%" y="158.50"></text></g><g><title>union_indexes (pandas/core/indexes/api.py:316) (4 samples, 0.13%)</title><rect x="21.0492%" y="260" width="0.1311%" height="15" fill="rgb(231,56,7)" fg:x="642" fg:w="4"/><text x="21.2992%" y="270.50"></text></g><g><title>union_indexes (pandas/core/indexes/api.py:319) (6 samples, 0.20%)</title><rect x="21.2131%" y="260" width="0.1967%" height="15" fill="rgb(244,186,29)" fg:x="647" fg:w="6"/><text x="21.4631%" y="270.50"></text></g><g><title>_get_comb_axis (pandas/core/reshape/concat.py:709) (16 samples, 0.52%)</title><rect x="20.9508%" y="212" width="0.5246%" height="15" fill="rgb(234,111,31)" fg:x="639" fg:w="16"/><text x="21.2008%" y="222.50"></text></g><g><title>get_objs_combined_axis (pandas/core/indexes/api.py:103) (16 samples, 0.52%)</title><rect x="20.9508%" y="228" width="0.5246%" height="15" fill="rgb(241,149,10)" fg:x="639" fg:w="16"/><text x="21.2008%" y="238.50"></text></g><g><title>_get_combined_index (pandas/core/indexes/api.py:156) (16 samples, 0.52%)</title><rect x="20.9508%" y="244" width="0.5246%" height="15" fill="rgb(249,206,44)" fg:x="639" fg:w="16"/><text x="21.2008%" y="254.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:671) (18 samples, 0.59%)</title><rect x="20.9180%" y="164" width="0.5902%" height="15" fill="rgb(251,153,30)" fg:x="638" fg:w="18"/><text x="21.1680%" y="174.50"></text></g><g><title>new_axes (pandas/core/reshape/concat.py:702) (17 samples, 0.56%)</title><rect x="20.9508%" y="180" width="0.5574%" height="15" fill="rgb(239,152,38)" fg:x="639" fg:w="17"/><text x="21.2008%" y="190.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/reshape/concat.py:703) (17 samples, 0.56%)</title><rect x="20.9508%" y="196" width="0.5574%" height="15" fill="rgb(249,139,47)" fg:x="639" fg:w="17"/><text x="21.2008%" y="206.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:679) (5 samples, 0.16%)</title><rect x="21.5410%" y="164" width="0.1639%" height="15" fill="rgb(244,64,35)" fg:x="657" fg:w="5"/><text x="21.7910%" y="174.50"></text></g><g><title>_get_combined_plan (pandas/core/internals/concat.py:313) (9 samples, 0.30%)</title><rect x="21.9344%" y="196" width="0.2951%" height="15" fill="rgb(216,46,15)" fg:x="669" fg:w="9"/><text x="22.1844%" y="206.50"></text></g><g><title>_get_block_for_concat_plan (pandas/core/internals/concat.py:342) (6 samples, 0.20%)</title><rect x="22.0328%" y="212" width="0.1967%" height="15" fill="rgb(250,74,19)" fg:x="672" fg:w="6"/><text x="22.2828%" y="222.50"></text></g><g><title>slice_block_columns (pandas/core/internals/blocks.py:333) (5 samples, 0.16%)</title><rect x="22.0656%" y="228" width="0.1639%" height="15" fill="rgb(249,42,33)" fg:x="673" fg:w="5"/><text x="22.3156%" y="238.50"></text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:157) (17 samples, 0.56%)</title><rect x="21.8033%" y="180" width="0.5574%" height="15" fill="rgb(242,149,17)" fg:x="665" fg:w="17"/><text x="22.0533%" y="190.50"></text></g><g><title>_get_combined_plan (pandas/core/internals/concat.py:314) (4 samples, 0.13%)</title><rect x="22.2295%" y="196" width="0.1311%" height="15" fill="rgb(244,29,21)" fg:x="678" fg:w="4"/><text x="22.4795%" y="206.50"></text></g><g><title>_is_uniform_join_units (pandas/core/internals/concat.py:580) (4 samples, 0.13%)</title><rect x="22.3607%" y="196" width="0.1311%" height="15" fill="rgb(220,130,37)" fg:x="682" fg:w="4"/><text x="22.6107%" y="206.50"></text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:166) (18 samples, 0.59%)</title><rect x="22.3607%" y="180" width="0.5902%" height="15" fill="rgb(211,67,2)" fg:x="682" fg:w="18"/><text x="22.6107%" y="190.50"></text></g><g><title>_is_uniform_join_units (pandas/core/internals/concat.py:597) (10 samples, 0.33%)</title><rect x="22.6230%" y="196" width="0.3279%" height="15" fill="rgb(235,68,52)" fg:x="690" fg:w="10"/><text x="22.8730%" y="206.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/internals/concat.py:597) (10 samples, 0.33%)</title><rect x="22.6230%" y="212" width="0.3279%" height="15" fill="rgb(246,142,3)" fg:x="690" fg:w="10"/><text x="22.8730%" y="222.50"></text></g><g><title>union_categoricals (pandas/core/dtypes/concat.py:308) (9 samples, 0.30%)</title><rect x="23.2131%" y="228" width="0.2951%" height="15" fill="rgb(241,25,7)" fg:x="708" fg:w="9"/><text x="23.4631%" y="238.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/dtypes/concat.py:308) (9 samples, 0.30%)</title><rect x="23.2131%" y="244" width="0.2951%" height="15" fill="rgb(242,119,39)" fg:x="708" fg:w="9"/><text x="23.4631%" y="254.50"></text></g><g><title>_categories_match_up_to_permutation (pandas/core/arrays/categorical.py:2562) (9 samples, 0.30%)</title><rect x="23.2131%" y="260" width="0.2951%" height="15" fill="rgb(241,98,45)" fg:x="708" fg:w="9"/><text x="23.4631%" y="270.50"></text></g><g><title>__hash__ (pandas/core/dtypes/dtypes.py:399) (9 samples, 0.30%)</title><rect x="23.2131%" y="276" width="0.2951%" height="15" fill="rgb(254,28,30)" fg:x="708" fg:w="9"/><text x="23.4631%" y="286.50"></text></g><g><title>union_categoricals (pandas/core/dtypes/concat.py:313) (5 samples, 0.16%)</title><rect x="23.5082%" y="228" width="0.1639%" height="15" fill="rgb(241,142,54)" fg:x="717" fg:w="5"/><text x="23.7582%" y="238.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/dtypes/concat.py:313) (5 samples, 0.16%)</title><rect x="23.5082%" y="244" width="0.1639%" height="15" fill="rgb(222,85,15)" fg:x="717" fg:w="5"/><text x="23.7582%" y="254.50"></text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:180) (21 samples, 0.69%)</title><rect x="23.0164%" y="180" width="0.6885%" height="15" fill="rgb(210,85,47)" fg:x="702" fg:w="21"/><text x="23.2664%" y="190.50"></text></g><g><title>concat_compat (pandas/core/dtypes/concat.py:83) (19 samples, 0.62%)</title><rect x="23.0820%" y="196" width="0.6230%" height="15" fill="rgb(224,206,25)" fg:x="704" fg:w="19"/><text x="23.3320%" y="206.50"></text></g><g><title>_concat_same_type (pandas/core/arrays/categorical.py:2527) (19 samples, 0.62%)</title><rect x="23.0820%" y="212" width="0.6230%" height="15" fill="rgb(243,201,19)" fg:x="704" fg:w="19"/><text x="23.3320%" y="222.50"></text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:189) (4 samples, 0.13%)</title><rect x="23.8033%" y="180" width="0.1311%" height="15" fill="rgb(236,59,4)" fg:x="726" fg:w="4"/><text x="24.0533%" y="190.50"></text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:193) (5 samples, 0.16%)</title><rect x="23.9344%" y="180" width="0.1639%" height="15" fill="rgb(254,179,45)" fg:x="730" fg:w="5"/><text x="24.1844%" y="190.50"></text></g><g><title>make_block_same_class (pandas/core/internals/blocks.py:306) (4 samples, 0.13%)</title><rect x="23.9672%" y="196" width="0.1311%" height="15" fill="rgb(226,14,10)" fg:x="731" fg:w="4"/><text x="24.2172%" y="206.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:684) (79 samples, 2.59%)</title><rect x="21.7377%" y="164" width="2.5902%" height="15" fill="rgb(244,27,41)" fg:x="663" fg:w="79"/><text x="21.9877%" y="174.50">ge..</text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:199) (6 samples, 0.20%)</title><rect x="24.1311%" y="180" width="0.1967%" height="15" fill="rgb(235,35,32)" fg:x="736" fg:w="6"/><text x="24.3811%" y="190.50"></text></g><g><title>__init__ (pandas/core/internals/managers.py:933) (6 samples, 0.20%)</title><rect x="24.1311%" y="196" width="0.1967%" height="15" fill="rgb(218,68,31)" fg:x="736" fg:w="6"/><text x="24.3811%" y="206.50"></text></g><g><title>_verify_integrity (pandas/core/internals/managers.py:939) (4 samples, 0.13%)</title><rect x="24.1967%" y="212" width="0.1311%" height="15" fill="rgb(207,120,37)" fg:x="738" fg:w="4"/><text x="24.4467%" y="222.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:306) (110 samples, 3.61%)</title><rect x="20.7541%" y="132" width="3.6066%" height="15" fill="rgb(227,98,0)" fg:x="633" fg:w="110"/><text x="21.0041%" y="142.50">upda..</text></g><g><title>concat (pandas/core/reshape/concat.py:395) (105 samples, 3.44%)</title><rect x="20.9180%" y="148" width="3.4426%" height="15" fill="rgb(207,7,3)" fg:x="638" fg:w="105"/><text x="21.1680%" y="158.50">con..</text></g><g><title>copy (pandas/core/generic.py:6811) (5 samples, 0.16%)</title><rect x="24.6230%" y="228" width="0.1639%" height="15" fill="rgb(206,98,19)" fg:x="751" fg:w="5"/><text x="24.8730%" y="238.50"></text></g><g><title>array_ufunc (pandas/core/arraylike.py:324) (12 samples, 0.39%)</title><rect x="24.4918%" y="164" width="0.3934%" height="15" fill="rgb(217,5,26)" fg:x="747" fg:w="12"/><text x="24.7418%" y="174.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/arraylike.py:325) (12 samples, 0.39%)</title><rect x="24.4918%" y="180" width="0.3934%" height="15" fill="rgb(235,190,38)" fg:x="747" fg:w="12"/><text x="24.7418%" y="190.50"></text></g><g><title>reindex (pandas/core/series.py:5153) (12 samples, 0.39%)</title><rect x="24.4918%" y="196" width="0.3934%" height="15" fill="rgb(247,86,24)" fg:x="747" fg:w="12"/><text x="24.7418%" y="206.50"></text></g><g><title>reindex (pandas/core/generic.py:5603) (9 samples, 0.30%)</title><rect x="24.5902%" y="212" width="0.2951%" height="15" fill="rgb(205,101,16)" fg:x="750" fg:w="9"/><text x="24.8402%" y="222.50"></text></g><g><title>__array_ufunc__ (pandas/core/generic.py:2171) (22 samples, 0.72%)</title><rect x="24.3934%" y="148" width="0.7213%" height="15" fill="rgb(246,168,33)" fg:x="744" fg:w="22"/><text x="24.6434%" y="158.50"></text></g><g><title>array_ufunc (pandas/core/arraylike.py:414) (4 samples, 0.13%)</title><rect x="24.9836%" y="164" width="0.1311%" height="15" fill="rgb(231,114,1)" fg:x="762" fg:w="4"/><text x="25.2336%" y="174.50"></text></g><g><title>reconstruct (pandas/core/arraylike.py:343) (4 samples, 0.13%)</title><rect x="24.9836%" y="180" width="0.1311%" height="15" fill="rgb(207,184,53)" fg:x="762" fg:w="4"/><text x="25.2336%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (9 samples, 0.30%)</title><rect x="25.3443%" y="148" width="0.2951%" height="15" fill="rgb(224,95,51)" fg:x="773" fg:w="9"/><text x="25.5943%" y="158.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4639) (4 samples, 0.13%)</title><rect x="25.5082%" y="164" width="0.1311%" height="15" fill="rgb(212,188,45)" fg:x="778" fg:w="4"/><text x="25.7582%" y="174.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:313) (52 samples, 1.70%)</title><rect x="24.3607%" y="132" width="1.7049%" height="15" fill="rgb(223,154,38)" fg:x="743" fg:w="52"/><text x="24.6107%" y="142.50"></text></g><g><title>new_method (pandas/core/ops/common.py:76) (13 samples, 0.43%)</title><rect x="25.6393%" y="148" width="0.4262%" height="15" fill="rgb(251,22,52)" fg:x="782" fg:w="13"/><text x="25.8893%" y="158.50"></text></g><g><title>__add__ (pandas/core/arraylike.py:186) (13 samples, 0.43%)</title><rect x="25.6393%" y="164" width="0.4262%" height="15" fill="rgb(229,209,22)" fg:x="782" fg:w="13"/><text x="25.8893%" y="174.50"></text></g><g><title>_arith_method (pandas/core/series.py:6135) (13 samples, 0.43%)</title><rect x="25.6393%" y="180" width="0.4262%" height="15" fill="rgb(234,138,34)" fg:x="782" fg:w="13"/><text x="25.8893%" y="190.50"></text></g><g><title>_arith_method (pandas/core/base.py:1384) (8 samples, 0.26%)</title><rect x="25.8033%" y="196" width="0.2623%" height="15" fill="rgb(212,95,11)" fg:x="787" fg:w="8"/><text x="26.0533%" y="206.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (8 samples, 0.26%)</title><rect x="25.8033%" y="212" width="0.2623%" height="15" fill="rgb(240,179,47)" fg:x="787" fg:w="8"/><text x="26.0533%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4075) (5 samples, 0.16%)</title><rect x="26.4262%" y="148" width="0.1639%" height="15" fill="rgb(240,163,11)" fg:x="806" fg:w="5"/><text x="26.6762%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (6 samples, 0.20%)</title><rect x="26.5902%" y="148" width="0.1967%" height="15" fill="rgb(236,37,12)" fg:x="811" fg:w="6"/><text x="26.8402%" y="158.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4639) (4 samples, 0.13%)</title><rect x="26.6557%" y="164" width="0.1311%" height="15" fill="rgb(232,164,16)" fg:x="813" fg:w="4"/><text x="26.9057%" y="174.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:111) (6 samples, 0.20%)</title><rect x="27.2131%" y="260" width="0.1967%" height="15" fill="rgb(244,205,15)" fg:x="830" fg:w="6"/><text x="27.4631%" y="270.50"></text></g><g><title>_arith_method (pandas/core/base.py:1381) (11 samples, 0.36%)</title><rect x="27.1475%" y="228" width="0.3607%" height="15" fill="rgb(223,117,47)" fg:x="828" fg:w="11"/><text x="27.3975%" y="238.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:431) (10 samples, 0.33%)</title><rect x="27.1803%" y="244" width="0.3279%" height="15" fill="rgb(244,107,35)" fg:x="829" fg:w="10"/><text x="27.4303%" y="254.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:436) (4 samples, 0.13%)</title><rect x="27.5410%" y="244" width="0.1311%" height="15" fill="rgb(205,140,8)" fg:x="840" fg:w="4"/><text x="27.7910%" y="254.50"></text></g><g><title>_na_arithmetic_op (pandas/core/ops/array_ops.py:215) (4 samples, 0.13%)</title><rect x="27.8361%" y="260" width="0.1311%" height="15" fill="rgb(228,84,46)" fg:x="849" fg:w="4"/><text x="28.0861%" y="270.50"></text></g><g><title>_na_arithmetic_op (pandas/core/ops/array_ops.py:218) (5 samples, 0.16%)</title><rect x="27.9672%" y="260" width="0.1639%" height="15" fill="rgb(254,188,9)" fg:x="853" fg:w="5"/><text x="28.2172%" y="270.50"></text></g><g><title>evaluate (pandas/core/computation/expressions.py:242) (4 samples, 0.13%)</title><rect x="28.0000%" y="276" width="0.1311%" height="15" fill="rgb(206,112,54)" fg:x="854" fg:w="4"/><text x="28.2500%" y="286.50"></text></g><g><title>_evaluate_standard (pandas/core/computation/expressions.py:73) (4 samples, 0.13%)</title><rect x="28.0000%" y="292" width="0.1311%" height="15" fill="rgb(216,84,49)" fg:x="854" fg:w="4"/><text x="28.2500%" y="302.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (21 samples, 0.69%)</title><rect x="27.5082%" y="228" width="0.6885%" height="15" fill="rgb(214,194,35)" fg:x="839" fg:w="21"/><text x="27.7582%" y="238.50"></text></g><g><title>arithmetic_op (pandas/core/ops/array_ops.py:283) (11 samples, 0.36%)</title><rect x="27.8361%" y="244" width="0.3607%" height="15" fill="rgb(249,28,3)" fg:x="849" fg:w="11"/><text x="28.0861%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:493) (4 samples, 0.13%)</title><rect x="28.4262%" y="260" width="0.1311%" height="15" fill="rgb(222,56,52)" fg:x="867" fg:w="4"/><text x="28.6762%" y="270.50"></text></g><g><title>maybe_cast_to_integer_array (pandas/core/dtypes/cast.py:1659) (4 samples, 0.13%)</title><rect x="29.0164%" y="308" width="0.1311%" height="15" fill="rgb(245,217,50)" fg:x="885" fg:w="4"/><text x="29.2664%" y="318.50"></text></g><g><title>maybe_cast_to_integer_array (pandas/core/dtypes/cast.py:1660) (5 samples, 0.16%)</title><rect x="29.1475%" y="308" width="0.1639%" height="15" fill="rgb(213,201,24)" fg:x="889" fg:w="5"/><text x="29.3975%" y="318.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:625) (14 samples, 0.46%)</title><rect x="28.9180%" y="276" width="0.4590%" height="15" fill="rgb(248,116,28)" fg:x="882" fg:w="14"/><text x="29.1680%" y="286.50"></text></g><g><title>_try_cast (pandas/core/construction.py:818) (13 samples, 0.43%)</title><rect x="28.9508%" y="292" width="0.4262%" height="15" fill="rgb(219,72,43)" fg:x="883" fg:w="13"/><text x="29.2008%" y="302.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (27 samples, 0.89%)</title><rect x="28.6557%" y="260" width="0.8852%" height="15" fill="rgb(209,138,14)" fg:x="874" fg:w="27"/><text x="28.9057%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:586) (5 samples, 0.16%)</title><rect x="29.5410%" y="260" width="0.1639%" height="15" fill="rgb(222,18,33)" fg:x="901" fg:w="5"/><text x="29.7910%" y="270.50"></text></g><g><title>_get_option (pandas/_config/config.py:149) (4 samples, 0.13%)</title><rect x="29.5738%" y="276" width="0.1311%" height="15" fill="rgb(213,199,7)" fg:x="902" fg:w="4"/><text x="29.8238%" y="286.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (6 samples, 0.20%)</title><rect x="29.7049%" y="260" width="0.1967%" height="15" fill="rgb(250,110,10)" fg:x="906" fg:w="6"/><text x="29.9549%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:592) (6 samples, 0.20%)</title><rect x="29.9016%" y="260" width="0.1967%" height="15" fill="rgb(248,123,6)" fg:x="912" fg:w="6"/><text x="30.1516%" y="270.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (7 samples, 0.23%)</title><rect x="30.0984%" y="276" width="0.2295%" height="15" fill="rgb(206,91,31)" fg:x="918" fg:w="7"/><text x="30.3484%" y="286.50"></text></g><g><title>name (pandas/core/series.py:782) (4 samples, 0.13%)</title><rect x="30.1967%" y="292" width="0.1311%" height="15" fill="rgb(211,154,13)" fg:x="921" fg:w="4"/><text x="30.4467%" y="302.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (13 samples, 0.43%)</title><rect x="30.0984%" y="260" width="0.4262%" height="15" fill="rgb(225,148,7)" fg:x="918" fg:w="13"/><text x="30.3484%" y="270.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6320) (5 samples, 0.16%)</title><rect x="30.3607%" y="276" width="0.1639%" height="15" fill="rgb(220,160,43)" fg:x="926" fg:w="5"/><text x="30.6107%" y="286.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (74 samples, 2.43%)</title><rect x="28.1967%" y="244" width="2.4262%" height="15" fill="rgb(213,52,39)" fg:x="860" fg:w="74"/><text x="28.4467%" y="254.50">_c..</text></g><g><title>_inplace_method (pandas/core/generic.py:12689) (122 samples, 4.00%)</title><rect x="26.8197%" y="164" width="4.0000%" height="15" fill="rgb(243,137,7)" fg:x="818" fg:w="122"/><text x="27.0697%" y="174.50">_inp..</text></g><g><title>new_method (pandas/core/ops/common.py:76) (122 samples, 4.00%)</title><rect x="26.8197%" y="180" width="4.0000%" height="15" fill="rgb(230,79,13)" fg:x="818" fg:w="122"/><text x="27.0697%" y="190.50">new_..</text></g><g><title>__add__ (pandas/core/arraylike.py:186) (121 samples, 3.97%)</title><rect x="26.8525%" y="196" width="3.9672%" height="15" fill="rgb(247,105,23)" fg:x="819" fg:w="121"/><text x="27.1025%" y="206.50">__ad..</text></g><g><title>_arith_method (pandas/core/series.py:6135) (121 samples, 3.97%)</title><rect x="26.8525%" y="212" width="3.9672%" height="15" fill="rgb(223,179,41)" fg:x="819" fg:w="121"/><text x="27.1025%" y="222.50">_ari..</text></g><g><title>_arith_method (pandas/core/base.py:1384) (80 samples, 2.62%)</title><rect x="28.1967%" y="228" width="2.6230%" height="15" fill="rgb(218,9,34)" fg:x="860" fg:w="80"/><text x="28.4467%" y="238.50">_a..</text></g><g><title>_inplace_method (pandas/core/generic.py:12693) (5 samples, 0.16%)</title><rect x="30.8197%" y="164" width="0.1639%" height="15" fill="rgb(222,106,8)" fg:x="940" fg:w="5"/><text x="31.0697%" y="174.50"></text></g><g><title>_indexed_same (pandas/core/generic.py:1441) (5 samples, 0.16%)</title><rect x="30.8197%" y="180" width="0.1639%" height="15" fill="rgb(211,220,0)" fg:x="940" fg:w="5"/><text x="31.0697%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/generic.py:1442) (4 samples, 0.13%)</title><rect x="30.8525%" y="196" width="0.1311%" height="15" fill="rgb(229,52,16)" fg:x="941" fg:w="4"/><text x="31.1025%" y="206.50"></text></g><g><title>_inplace_method (pandas/core/generic.py:12694) (4 samples, 0.13%)</title><rect x="30.9836%" y="164" width="0.1311%" height="15" fill="rgb(212,155,18)" fg:x="945" fg:w="4"/><text x="31.2336%" y="174.50"></text></g><g><title>__iadd__ (pandas/core/generic.py:12719) (139 samples, 4.56%)</title><rect x="26.7869%" y="148" width="4.5574%" height="15" fill="rgb(242,21,14)" fg:x="817" fg:w="139"/><text x="27.0369%" y="158.50">__iad..</text></g><g><title>_sanitize_column (pandas/core/frame.py:5260) (5 samples, 0.16%)</title><rect x="31.7377%" y="180" width="0.1639%" height="15" fill="rgb(222,19,48)" fg:x="968" fg:w="5"/><text x="31.9877%" y="190.50"></text></g><g><title>_reindex_for_setitem (pandas/core/frame.py:12680) (4 samples, 0.13%)</title><rect x="31.9016%" y="196" width="0.1311%" height="15" fill="rgb(232,45,27)" fg:x="973" fg:w="4"/><text x="32.1516%" y="206.50"></text></g><g><title>_set_item (pandas/core/frame.py:4524) (15 samples, 0.49%)</title><rect x="31.5738%" y="164" width="0.4918%" height="15" fill="rgb(249,103,42)" fg:x="963" fg:w="15"/><text x="31.8238%" y="174.50"></text></g><g><title>_sanitize_column (pandas/core/frame.py:5263) (5 samples, 0.16%)</title><rect x="31.9016%" y="180" width="0.1639%" height="15" fill="rgb(246,81,33)" fg:x="973" fg:w="5"/><text x="32.1516%" y="190.50"></text></g><g><title>iset (pandas/core/internals/managers.py:1089) (6 samples, 0.20%)</title><rect x="32.3279%" y="212" width="0.1967%" height="15" fill="rgb(252,33,42)" fg:x="986" fg:w="6"/><text x="32.5779%" y="222.50"></text></g><g><title>iset (pandas/core/internals/managers.py:1091) (6 samples, 0.20%)</title><rect x="32.5246%" y="212" width="0.1967%" height="15" fill="rgb(209,212,41)" fg:x="992" fg:w="6"/><text x="32.7746%" y="222.50"></text></g><g><title>new_block_2d (pandas/core/internals/blocks.py:2712) (5 samples, 0.16%)</title><rect x="32.9180%" y="244" width="0.1639%" height="15" fill="rgb(207,154,6)" fg:x="1004" fg:w="5"/><text x="33.1680%" y="254.50"></text></g><g><title>_iset_item_mgr (pandas/core/frame.py:4478) (29 samples, 0.95%)</title><rect x="32.2295%" y="196" width="0.9508%" height="15" fill="rgb(223,64,47)" fg:x="983" fg:w="29"/><text x="32.4795%" y="206.50"></text></g><g><title>iset (pandas/core/internals/managers.py:1106) (10 samples, 0.33%)</title><rect x="32.8525%" y="212" width="0.3279%" height="15" fill="rgb(211,161,38)" fg:x="1002" fg:w="10"/><text x="33.1025%" y="222.50"></text></g><g><title>_iset_single (pandas/core/internals/managers.py:1292) (9 samples, 0.30%)</title><rect x="32.8852%" y="228" width="0.2951%" height="15" fill="rgb(219,138,40)" fg:x="1003" fg:w="9"/><text x="33.1352%" y="238.50"></text></g><g><title>_set_item_mgr (pandas/core/frame.py:4490) (34 samples, 1.11%)</title><rect x="32.2295%" y="180" width="1.1148%" height="15" fill="rgb(241,228,46)" fg:x="983" fg:w="34"/><text x="32.4795%" y="190.50"></text></g><g><title>_iset_item_mgr (pandas/core/frame.py:4479) (5 samples, 0.16%)</title><rect x="33.1803%" y="196" width="0.1639%" height="15" fill="rgb(223,209,38)" fg:x="1012" fg:w="5"/><text x="33.4303%" y="206.50"></text></g><g><title>_clear_item_cache (pandas/core/frame.py:4624) (5 samples, 0.16%)</title><rect x="33.1803%" y="212" width="0.1639%" height="15" fill="rgb(236,164,45)" fg:x="1012" fg:w="5"/><text x="33.4303%" y="222.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:331) (222 samples, 7.28%)</title><rect x="26.1967%" y="132" width="7.2787%" height="15" fill="rgb(231,15,5)" fg:x="799" fg:w="222"/><text x="26.4467%" y="142.50">update_fle..</text></g><g><title>__setitem__ (pandas/core/frame.py:4311) (60 samples, 1.97%)</title><rect x="31.5082%" y="148" width="1.9672%" height="15" fill="rgb(252,35,15)" fg:x="961" fg:w="60"/><text x="31.7582%" y="158.50">_..</text></g><g><title>_set_item (pandas/core/frame.py:4538) (41 samples, 1.34%)</title><rect x="32.1311%" y="164" width="1.3443%" height="15" fill="rgb(248,181,18)" fg:x="980" fg:w="41"/><text x="32.3811%" y="174.50"></text></g><g><title>_take_nd_ndarray (pandas/core/array_algos/take.py:133) (8 samples, 0.26%)</title><rect x="33.9344%" y="292" width="0.2623%" height="15" fill="rgb(233,39,42)" fg:x="1035" fg:w="8"/><text x="34.1844%" y="302.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1307) (15 samples, 0.49%)</title><rect x="33.8033%" y="260" width="0.4918%" height="15" fill="rgb(238,110,33)" fg:x="1031" fg:w="15"/><text x="34.0533%" y="270.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (12 samples, 0.39%)</title><rect x="33.9016%" y="276" width="0.3934%" height="15" fill="rgb(233,195,10)" fg:x="1034" fg:w="12"/><text x="34.1516%" y="286.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:688) (18 samples, 0.59%)</title><rect x="33.8033%" y="244" width="0.5902%" height="15" fill="rgb(254,105,3)" fg:x="1031" fg:w="18"/><text x="34.0533%" y="254.50"></text></g><g><title>take (pandas/core/generic.py:4133) (22 samples, 0.72%)</title><rect x="33.7049%" y="196" width="0.7213%" height="15" fill="rgb(221,225,9)" fg:x="1028" fg:w="22"/><text x="33.9549%" y="206.50"></text></g><g><title>take (pandas/core/internals/managers.py:894) (19 samples, 0.62%)</title><rect x="33.8033%" y="212" width="0.6230%" height="15" fill="rgb(224,227,45)" fg:x="1031" fg:w="19"/><text x="34.0533%" y="222.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:687) (19 samples, 0.62%)</title><rect x="33.8033%" y="228" width="0.6230%" height="15" fill="rgb(229,198,43)" fg:x="1031" fg:w="19"/><text x="34.0533%" y="238.50"></text></g><g><title>_take_with_is_copy (pandas/core/generic.py:4153) (25 samples, 0.82%)</title><rect x="33.6393%" y="180" width="0.8197%" height="15" fill="rgb(206,209,35)" fg:x="1026" fg:w="25"/><text x="33.8893%" y="190.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:337) (28 samples, 0.92%)</title><rect x="33.5738%" y="132" width="0.9180%" height="15" fill="rgb(245,195,53)" fg:x="1024" fg:w="28"/><text x="33.8238%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4093) (28 samples, 0.92%)</title><rect x="33.5738%" y="148" width="0.9180%" height="15" fill="rgb(240,92,26)" fg:x="1024" fg:w="28"/><text x="33.8238%" y="158.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4155) (26 samples, 0.85%)</title><rect x="33.6393%" y="164" width="0.8525%" height="15" fill="rgb(207,40,23)" fg:x="1026" fg:w="26"/><text x="33.8893%" y="174.50"></text></g><g><title>_hash_categories (pandas/core/dtypes/dtypes.py:508) (6 samples, 0.20%)</title><rect x="34.5246%" y="260" width="0.1967%" height="15" fill="rgb(223,111,35)" fg:x="1053" fg:w="6"/><text x="34.7746%" y="270.50"></text></g><g><title>hash_array (pandas/core/util/hashing.py:279) (5 samples, 0.16%)</title><rect x="34.5574%" y="276" width="0.1639%" height="15" fill="rgb(229,147,28)" fg:x="1054" fg:w="5"/><text x="34.8074%" y="286.50"></text></g><g><title>find_common_type (pandas/core/dtypes/cast.py:1461) (10 samples, 0.33%)</title><rect x="34.4918%" y="228" width="0.3279%" height="15" fill="rgb(211,29,28)" fg:x="1052" fg:w="10"/><text x="34.7418%" y="238.50"></text></g><g><title>__hash__ (pandas/core/dtypes/dtypes.py:399) (9 samples, 0.30%)</title><rect x="34.5246%" y="244" width="0.2951%" height="15" fill="rgb(228,72,33)" fg:x="1053" fg:w="9"/><text x="34.7746%" y="254.50"></text></g><g><title>_interleave (pandas/core/internals/managers.py:1720) (14 samples, 0.46%)</title><rect x="34.4918%" y="196" width="0.4590%" height="15" fill="rgb(205,214,31)" fg:x="1052" fg:w="14"/><text x="34.7418%" y="206.50"></text></g><g><title>interleaved_dtype (pandas/core/internals/base.py:394) (14 samples, 0.46%)</title><rect x="34.4918%" y="212" width="0.4590%" height="15" fill="rgb(224,111,15)" fg:x="1052" fg:w="14"/><text x="34.7418%" y="222.50"></text></g><g><title>find_common_type (pandas/core/dtypes/cast.py:1466) (4 samples, 0.13%)</title><rect x="34.8197%" y="228" width="0.1311%" height="15" fill="rgb(253,21,26)" fg:x="1062" fg:w="4"/><text x="35.0697%" y="238.50"></text></g><g><title>iterrows (pandas/core/frame.py:1553) (18 samples, 0.59%)</title><rect x="34.4918%" y="148" width="0.5902%" height="15" fill="rgb(245,139,43)" fg:x="1052" fg:w="18"/><text x="34.7418%" y="158.50"></text></g><g><title>values (pandas/core/frame.py:12664) (18 samples, 0.59%)</title><rect x="34.4918%" y="164" width="0.5902%" height="15" fill="rgb(252,170,7)" fg:x="1052" fg:w="18"/><text x="34.7418%" y="174.50"></text></g><g><title>as_array (pandas/core/internals/managers.py:1694) (18 samples, 0.59%)</title><rect x="34.4918%" y="180" width="0.5902%" height="15" fill="rgb(231,118,14)" fg:x="1052" fg:w="18"/><text x="34.7418%" y="190.50"></text></g><g><title>_interleave (pandas/core/internals/managers.py:1735) (4 samples, 0.13%)</title><rect x="34.9508%" y="196" width="0.1311%" height="15" fill="rgb(238,83,0)" fg:x="1066" fg:w="4"/><text x="35.2008%" y="206.50"></text></g><g><title>get_values (pandas/core/internals/blocks.py:2251) (4 samples, 0.13%)</title><rect x="34.9508%" y="212" width="0.1311%" height="15" fill="rgb(221,39,39)" fg:x="1066" fg:w="4"/><text x="35.2008%" y="222.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:338) (24 samples, 0.79%)</title><rect x="34.4918%" y="132" width="0.7869%" height="15" fill="rgb(222,119,46)" fg:x="1052" fg:w="24"/><text x="34.7418%" y="142.50"></text></g><g><title>iterrows (pandas/core/frame.py:1554) (6 samples, 0.20%)</title><rect x="35.0820%" y="148" width="0.1967%" height="15" fill="rgb(222,165,49)" fg:x="1070" fg:w="6"/><text x="35.3320%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:1183) (4 samples, 0.13%)</title><rect x="35.4426%" y="164" width="0.1311%" height="15" fill="rgb(219,113,52)" fg:x="1081" fg:w="4"/><text x="35.6926%" y="174.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:1942) (6 samples, 0.20%)</title><rect x="35.6066%" y="180" width="0.1967%" height="15" fill="rgb(214,7,15)" fg:x="1086" fg:w="6"/><text x="35.8566%" y="190.50"></text></g><g><title>_setitem_with_indexer_split_path (pandas/core/indexing.py:2035) (5 samples, 0.16%)</title><rect x="35.6393%" y="196" width="0.1639%" height="15" fill="rgb(235,32,4)" fg:x="1087" fg:w="5"/><text x="35.8893%" y="206.50"></text></g><g><title>remove_server (evaluation_diff_quantity.py:42) (14 samples, 0.46%)</title><rect x="35.3770%" y="148" width="0.4590%" height="15" fill="rgb(238,90,54)" fg:x="1079" fg:w="14"/><text x="35.6270%" y="158.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:911) (7 samples, 0.23%)</title><rect x="35.6066%" y="164" width="0.2295%" height="15" fill="rgb(213,208,19)" fg:x="1086" fg:w="7"/><text x="35.8566%" y="174.50"></text></g><g><title>drop (pandas/core/generic.py:4788) (5 samples, 0.16%)</title><rect x="36.0328%" y="180" width="0.1639%" height="15" fill="rgb(233,156,4)" fg:x="1099" fg:w="5"/><text x="36.2828%" y="190.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:344) (26 samples, 0.85%)</title><rect x="35.3770%" y="132" width="0.8525%" height="15" fill="rgb(207,194,5)" fg:x="1079" fg:w="26"/><text x="35.6270%" y="142.50"></text></g><g><title>remove_server (evaluation_diff_quantity.py:51) (6 samples, 0.20%)</title><rect x="36.0328%" y="148" width="0.1967%" height="15" fill="rgb(206,111,30)" fg:x="1099" fg:w="6"/><text x="36.2828%" y="158.50"></text></g><g><title>drop (pandas/core/frame.py:5581) (6 samples, 0.20%)</title><rect x="36.0328%" y="164" width="0.1967%" height="15" fill="rgb(243,70,54)" fg:x="1099" fg:w="6"/><text x="36.2828%" y="174.50"></text></g><g><title>maybe_promote (pandas/core/dtypes/cast.py:579) (5 samples, 0.16%)</title><rect x="36.4590%" y="324" width="0.1639%" height="15" fill="rgb(242,28,8)" fg:x="1112" fg:w="5"/><text x="36.7090%" y="334.50"></text></g><g><title>_take_preprocess_indexer_and_fill_value (pandas/core/array_algos/take.py:579) (6 samples, 0.20%)</title><rect x="36.4590%" y="308" width="0.1967%" height="15" fill="rgb(219,106,18)" fg:x="1112" fg:w="6"/><text x="36.7090%" y="318.50"></text></g><g><title>_take_nd_ndarray (pandas/core/array_algos/take.py:133) (7 samples, 0.23%)</title><rect x="36.4590%" y="292" width="0.2295%" height="15" fill="rgb(244,222,10)" fg:x="1112" fg:w="7"/><text x="36.7090%" y="302.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:345) (20 samples, 0.66%)</title><rect x="36.2295%" y="132" width="0.6557%" height="15" fill="rgb(236,179,52)" fg:x="1105" fg:w="20"/><text x="36.4795%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4093) (18 samples, 0.59%)</title><rect x="36.2951%" y="148" width="0.5902%" height="15" fill="rgb(213,23,39)" fg:x="1107" fg:w="18"/><text x="36.5451%" y="158.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4155) (17 samples, 0.56%)</title><rect x="36.3279%" y="164" width="0.5574%" height="15" fill="rgb(238,48,10)" fg:x="1108" fg:w="17"/><text x="36.5779%" y="174.50"></text></g><g><title>_take_with_is_copy (pandas/core/generic.py:4153) (17 samples, 0.56%)</title><rect x="36.3279%" y="180" width="0.5574%" height="15" fill="rgb(251,196,23)" fg:x="1108" fg:w="17"/><text x="36.5779%" y="190.50"></text></g><g><title>take (pandas/core/generic.py:4133) (17 samples, 0.56%)</title><rect x="36.3279%" y="196" width="0.5574%" height="15" fill="rgb(250,152,24)" fg:x="1108" fg:w="17"/><text x="36.5779%" y="206.50"></text></g><g><title>take (pandas/core/internals/managers.py:894) (14 samples, 0.46%)</title><rect x="36.4262%" y="212" width="0.4590%" height="15" fill="rgb(209,150,17)" fg:x="1111" fg:w="14"/><text x="36.6762%" y="222.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:687) (14 samples, 0.46%)</title><rect x="36.4262%" y="228" width="0.4590%" height="15" fill="rgb(234,202,34)" fg:x="1111" fg:w="14"/><text x="36.6762%" y="238.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:688) (14 samples, 0.46%)</title><rect x="36.4262%" y="244" width="0.4590%" height="15" fill="rgb(253,148,53)" fg:x="1111" fg:w="14"/><text x="36.6762%" y="254.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1307) (14 samples, 0.46%)</title><rect x="36.4262%" y="260" width="0.4590%" height="15" fill="rgb(218,129,16)" fg:x="1111" fg:w="14"/><text x="36.6762%" y="270.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (13 samples, 0.43%)</title><rect x="36.4590%" y="276" width="0.4262%" height="15" fill="rgb(216,85,19)" fg:x="1112" fg:w="13"/><text x="36.7090%" y="286.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:413) (657 samples, 21.54%)</title><rect x="15.4754%" y="116" width="21.5410%" height="15" fill="rgb(235,228,7)" fg:x="472" fg:w="657"/><text x="15.7254%" y="126.50">SA_evaluation_function (evaluation..</text></g><g><title>update_fleet (evaluation_diff_quantity.py:347) (4 samples, 0.13%)</title><rect x="36.8852%" y="132" width="0.1311%" height="15" fill="rgb(245,175,0)" fg:x="1125" fg:w="4"/><text x="37.1352%" y="142.50"></text></g><g><title>view (pandas/core/indexes/base.py:1040) (7 samples, 0.23%)</title><rect x="37.3443%" y="212" width="0.2295%" height="15" fill="rgb(208,168,36)" fg:x="1139" fg:w="7"/><text x="37.5943%" y="222.50"></text></g><g><title>_view (pandas/core/indexes/base.py:777) (7 samples, 0.23%)</title><rect x="37.3443%" y="228" width="0.2295%" height="15" fill="rgb(246,171,24)" fg:x="1139" fg:w="7"/><text x="37.5943%" y="238.50"></text></g><g><title>copy (pandas/core/internals/managers.py:586) (9 samples, 0.30%)</title><rect x="37.3115%" y="164" width="0.2951%" height="15" fill="rgb(215,142,24)" fg:x="1138" fg:w="9"/><text x="37.5615%" y="174.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:586) (8 samples, 0.26%)</title><rect x="37.3443%" y="180" width="0.2623%" height="15" fill="rgb(250,187,7)" fg:x="1139" fg:w="8"/><text x="37.5943%" y="190.50"></text></g><g><title>copy_func (pandas/core/internals/managers.py:584) (8 samples, 0.26%)</title><rect x="37.3443%" y="196" width="0.2623%" height="15" fill="rgb(228,66,33)" fg:x="1139" fg:w="8"/><text x="37.5943%" y="206.50"></text></g><g><title>apply (pandas/core/internals/managers.py:363) (5 samples, 0.16%)</title><rect x="37.7377%" y="180" width="0.1639%" height="15" fill="rgb(234,215,21)" fg:x="1151" fg:w="5"/><text x="37.9877%" y="190.50"></text></g><g><title>copy (pandas/core/internals/managers.py:593) (13 samples, 0.43%)</title><rect x="37.6066%" y="164" width="0.4262%" height="15" fill="rgb(222,191,20)" fg:x="1147" fg:w="13"/><text x="37.8566%" y="174.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:349) (4 samples, 0.13%)</title><rect x="38.6885%" y="244" width="0.1311%" height="15" fill="rgb(245,79,54)" fg:x="1180" fg:w="4"/><text x="38.9385%" y="254.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:362) (7 samples, 0.23%)</title><rect x="38.9180%" y="244" width="0.2295%" height="15" fill="rgb(240,10,37)" fg:x="1187" fg:w="7"/><text x="39.1680%" y="254.50"></text></g><g><title>_name_includes_bit_suffix (numpy/core/_dtype.py:339) (6 samples, 0.20%)</title><rect x="38.9508%" y="260" width="0.1967%" height="15" fill="rgb(214,192,32)" fg:x="1188" fg:w="6"/><text x="39.2008%" y="270.50"></text></g><g><title>_consolidate (pandas/core/internals/managers.py:2265) (25 samples, 0.82%)</title><rect x="38.3607%" y="196" width="0.8197%" height="15" fill="rgb(209,36,54)" fg:x="1170" fg:w="25"/><text x="38.6107%" y="206.50"></text></g><g><title>&lt;lambda&gt; (pandas/core/internals/managers.py:2264) (24 samples, 0.79%)</title><rect x="38.3934%" y="212" width="0.7869%" height="15" fill="rgb(220,10,11)" fg:x="1171" fg:w="24"/><text x="38.6434%" y="222.50"></text></g><g><title>_consolidate_key (pandas/core/internals/blocks.py:228) (23 samples, 0.75%)</title><rect x="38.4262%" y="228" width="0.7541%" height="15" fill="rgb(221,106,17)" fg:x="1172" fg:w="23"/><text x="38.6762%" y="238.50"></text></g><g><title>_merge_blocks (pandas/core/internals/managers.py:2285) (7 samples, 0.23%)</title><rect x="39.2459%" y="212" width="0.2295%" height="15" fill="rgb(251,142,44)" fg:x="1197" fg:w="7"/><text x="39.4959%" y="222.50"></text></g><g><title>_merge_blocks (pandas/core/internals/managers.py:2294) (7 samples, 0.23%)</title><rect x="39.4754%" y="212" width="0.2295%" height="15" fill="rgb(238,13,15)" fg:x="1204" fg:w="7"/><text x="39.7254%" y="222.50"></text></g><g><title>_merge_blocks (pandas/core/internals/managers.py:2300) (4 samples, 0.13%)</title><rect x="39.7049%" y="212" width="0.1311%" height="15" fill="rgb(208,107,27)" fg:x="1211" fg:w="4"/><text x="39.9549%" y="222.50"></text></g><g><title>argsort (numpy/core/fromnumeric.py:1133) (4 samples, 0.13%)</title><rect x="39.7049%" y="228" width="0.1311%" height="15" fill="rgb(205,136,37)" fg:x="1211" fg:w="4"/><text x="39.9549%" y="238.50"></text></g><g><title>_consolidate (pandas/core/internals/managers.py:2269) (22 samples, 0.72%)</title><rect x="39.1803%" y="196" width="0.7213%" height="15" fill="rgb(250,205,27)" fg:x="1195" fg:w="22"/><text x="39.4303%" y="206.50"></text></g><g><title>_consolidate_inplace (pandas/core/internals/managers.py:1788) (51 samples, 1.67%)</title><rect x="38.3279%" y="180" width="1.6721%" height="15" fill="rgb(210,80,43)" fg:x="1169" fg:w="51"/><text x="38.5779%" y="190.50"></text></g><g><title>copy (pandas/core/internals/managers.py:604) (59 samples, 1.93%)</title><rect x="38.1967%" y="164" width="1.9344%" height="15" fill="rgb(247,160,36)" fg:x="1165" fg:w="59"/><text x="38.4467%" y="174.50">c..</text></g><g><title>_consolidate_inplace (pandas/core/internals/managers.py:1791) (4 samples, 0.13%)</title><rect x="40.0000%" y="180" width="0.1311%" height="15" fill="rgb(234,13,49)" fg:x="1220" fg:w="4"/><text x="40.2500%" y="190.50"></text></g><g><title>copy (pandas/core/generic.py:6811) (90 samples, 2.95%)</title><rect x="37.2459%" y="148" width="2.9508%" height="15" fill="rgb(234,122,0)" fg:x="1136" fg:w="90"/><text x="37.4959%" y="158.50">cop..</text></g><g><title>get_capacity_by_server_generation_latency_sensitivity_optimized (evaluation_diff_quantity.py:139) (95 samples, 3.11%)</title><rect x="37.2459%" y="132" width="3.1148%" height="15" fill="rgb(207,146,38)" fg:x="1136" fg:w="95"/><text x="37.4959%" y="142.50">get..</text></g><g><title>copy (pandas/core/generic.py:6813) (4 samples, 0.13%)</title><rect x="40.2295%" y="148" width="0.1311%" height="15" fill="rgb(207,177,25)" fg:x="1227" fg:w="4"/><text x="40.4795%" y="158.50"></text></g><g><title>broadcast_arrays (numpy/lib/stride_tricks.py:540) (6 samples, 0.20%)</title><rect x="40.6557%" y="212" width="0.1967%" height="15" fill="rgb(211,178,42)" fg:x="1240" fg:w="6"/><text x="40.9057%" y="222.50"></text></g><g><title>_argcheck_rvs (scipy/stats/_distn_infrastructure.py:881) (13 samples, 0.43%)</title><rect x="40.5246%" y="196" width="0.4262%" height="15" fill="rgb(230,69,54)" fg:x="1236" fg:w="13"/><text x="40.7746%" y="206.50"></text></g><g><title>atleast_1d (numpy/core/shape_base.py:65) (4 samples, 0.13%)</title><rect x="41.1148%" y="212" width="0.1311%" height="15" fill="rgb(214,135,41)" fg:x="1254" fg:w="4"/><text x="41.3648%" y="222.50"></text></g><g><title>_argcheck_rvs (scipy/stats/_distn_infrastructure.py:906) (7 samples, 0.23%)</title><rect x="41.0492%" y="196" width="0.2295%" height="15" fill="rgb(237,67,25)" fg:x="1252" fg:w="7"/><text x="41.2992%" y="206.50"></text></g><g><title>rvs (scipy/stats/_distn_infrastructure.py:1049) (27 samples, 0.89%)</title><rect x="40.5246%" y="164" width="0.8852%" height="15" fill="rgb(222,189,50)" fg:x="1236" fg:w="27"/><text x="40.7746%" y="174.50"></text></g><g><title>_parse_args_rvs (&lt;string&gt;:6) (27 samples, 0.89%)</title><rect x="40.5246%" y="180" width="0.8852%" height="15" fill="rgb(245,148,34)" fg:x="1236" fg:w="27"/><text x="40.7746%" y="190.50"></text></g><g><title>rvs (scipy/stats/_distn_infrastructure.py:1050) (7 samples, 0.23%)</title><rect x="41.4098%" y="164" width="0.2295%" height="15" fill="rgb(222,29,6)" fg:x="1263" fg:w="7"/><text x="41.6598%" y="174.50"></text></g><g><title>_argcheck (scipy/stats/_continuous_distns.py:2669) (5 samples, 0.16%)</title><rect x="41.4754%" y="180" width="0.1639%" height="15" fill="rgb(221,189,43)" fg:x="1265" fg:w="5"/><text x="41.7254%" y="190.50"></text></g><g><title>rvs (scipy/stats/_distn_infrastructure.py:1051) (12 samples, 0.39%)</title><rect x="41.6393%" y="164" width="0.3934%" height="15" fill="rgb(207,36,27)" fg:x="1270" fg:w="12"/><text x="41.8893%" y="174.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2504) (9 samples, 0.30%)</title><rect x="41.7377%" y="180" width="0.2951%" height="15" fill="rgb(217,90,24)" fg:x="1273" fg:w="9"/><text x="41.9877%" y="190.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:86) (5 samples, 0.16%)</title><rect x="41.8689%" y="196" width="0.1639%" height="15" fill="rgb(224,66,35)" fg:x="1277" fg:w="5"/><text x="42.1189%" y="206.50"></text></g><g><title>rvs (scipy/stats/_distn_infrastructure.py:1059) (5 samples, 0.16%)</title><rect x="42.0328%" y="164" width="0.1639%" height="15" fill="rgb(221,13,50)" fg:x="1282" fg:w="5"/><text x="42.2828%" y="174.50"></text></g><g><title>rvs (scipy/stats/_distn_infrastructure.py:1069) (34 samples, 1.11%)</title><rect x="42.1967%" y="164" width="1.1148%" height="15" fill="rgb(236,68,49)" fg:x="1287" fg:w="34"/><text x="42.4467%" y="174.50"></text></g><g><title>_rvs (scipy/stats/_distn_infrastructure.py:995) (30 samples, 0.98%)</title><rect x="42.3279%" y="180" width="0.9836%" height="15" fill="rgb(229,146,28)" fg:x="1291" fg:w="30"/><text x="42.5779%" y="190.50"></text></g><g><title>_ppf (scipy/stats/_continuous_distns.py:2719) (28 samples, 0.92%)</title><rect x="42.3934%" y="196" width="0.9180%" height="15" fill="rgb(225,31,38)" fg:x="1293" fg:w="28"/><text x="42.6434%" y="206.50"></text></g><g><title>adjust_capacity_by_failure_rate_numpy (evaluation_diff_quantity.py:135) (90 samples, 2.95%)</title><rect x="40.4918%" y="148" width="2.9508%" height="15" fill="rgb(250,208,3)" fg:x="1235" fg:w="90"/><text x="40.7418%" y="158.50">adj..</text></g><g><title>rvs (scipy/stats/_distn_infrastructure.py:1071) (4 samples, 0.13%)</title><rect x="43.3115%" y="164" width="0.1311%" height="15" fill="rgb(246,54,23)" fg:x="1321" fg:w="4"/><text x="43.5615%" y="174.50"></text></g><g><title>get_capacity_by_server_generation_latency_sensitivity_optimized (evaluation_diff_quantity.py:142) (101 samples, 3.31%)</title><rect x="40.3607%" y="132" width="3.3115%" height="15" fill="rgb(243,76,11)" fg:x="1231" fg:w="101"/><text x="40.6107%" y="142.50">get..</text></g><g><title>values (pandas/core/frame.py:12664) (5 samples, 0.16%)</title><rect x="43.5082%" y="148" width="0.1639%" height="15" fill="rgb(245,21,50)" fg:x="1327" fg:w="5"/><text x="43.7582%" y="158.50"></text></g><g><title>__init__ (pandas/core/frame.py:734) (5 samples, 0.16%)</title><rect x="43.7705%" y="148" width="0.1639%" height="15" fill="rgb(228,9,43)" fg:x="1335" fg:w="5"/><text x="44.0205%" y="158.50"></text></g><g><title>ndarray_to_mgr (pandas/core/internals/construction.py:393) (4 samples, 0.13%)</title><rect x="44.1967%" y="164" width="0.1311%" height="15" fill="rgb(208,100,47)" fg:x="1348" fg:w="4"/><text x="44.4467%" y="174.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:417) (223 samples, 7.31%)</title><rect x="37.0492%" y="116" width="7.3115%" height="15" fill="rgb(232,26,8)" fg:x="1130" fg:w="223"/><text x="37.2992%" y="126.50">SA_evaluat..</text></g><g><title>get_capacity_by_server_generation_latency_sensitivity_optimized (evaluation_diff_quantity.py:143) (21 samples, 0.69%)</title><rect x="43.6721%" y="132" width="0.6885%" height="15" fill="rgb(216,166,38)" fg:x="1332" fg:w="21"/><text x="43.9221%" y="142.50"></text></g><g><title>__init__ (pandas/core/frame.py:827) (12 samples, 0.39%)</title><rect x="43.9672%" y="148" width="0.3934%" height="15" fill="rgb(251,202,51)" fg:x="1341" fg:w="12"/><text x="44.2172%" y="158.50"></text></g><g><title>get_utilization (evaluation_diff_quantity.py:100) (5 samples, 0.16%)</title><rect x="44.3607%" y="132" width="0.1639%" height="15" fill="rgb(254,216,34)" fg:x="1353" fg:w="5"/><text x="44.6107%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4065) (4 samples, 0.13%)</title><rect x="44.8197%" y="148" width="0.1311%" height="15" fill="rgb(251,32,27)" fg:x="1367" fg:w="4"/><text x="45.0697%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4075) (9 samples, 0.30%)</title><rect x="45.2459%" y="148" width="0.2951%" height="15" fill="rgb(208,127,28)" fg:x="1380" fg:w="9"/><text x="45.4959%" y="158.50"></text></g><g><title>__contains__ (pandas/core/indexes/base.py:5360) (6 samples, 0.20%)</title><rect x="45.3443%" y="164" width="0.1967%" height="15" fill="rgb(224,137,22)" fg:x="1383" fg:w="6"/><text x="45.5943%" y="174.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4628) (9 samples, 0.30%)</title><rect x="45.5738%" y="164" width="0.2951%" height="15" fill="rgb(254,70,32)" fg:x="1390" fg:w="9"/><text x="45.8238%" y="174.50"></text></g><g><title>using_copy_on_write (pandas/_config/__init__.py:35) (5 samples, 0.16%)</title><rect x="45.7049%" y="180" width="0.1639%" height="15" fill="rgb(229,75,37)" fg:x="1394" fg:w="5"/><text x="45.9549%" y="190.50"></text></g><g><title>_ixs (pandas/core/frame.py:4008) (7 samples, 0.23%)</title><rect x="46.0000%" y="180" width="0.2295%" height="15" fill="rgb(252,64,23)" fg:x="1403" fg:w="7"/><text x="46.2500%" y="190.50"></text></g><g><title>iget (pandas/core/internals/managers.py:1021) (4 samples, 0.13%)</title><rect x="46.3279%" y="196" width="0.1311%" height="15" fill="rgb(232,162,48)" fg:x="1413" fg:w="4"/><text x="46.5779%" y="206.50"></text></g><g><title>_ixs (pandas/core/frame.py:4010) (8 samples, 0.26%)</title><rect x="46.2295%" y="180" width="0.2623%" height="15" fill="rgb(246,160,12)" fg:x="1410" fg:w="8"/><text x="46.4795%" y="190.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4614) (5 samples, 0.16%)</title><rect x="46.5574%" y="196" width="0.1639%" height="15" fill="rgb(247,166,0)" fg:x="1420" fg:w="5"/><text x="46.8074%" y="206.50"></text></g><g><title>_constructor_sliced_from_mgr (pandas/core/frame.py:679) (14 samples, 0.46%)</title><rect x="46.8197%" y="212" width="0.4590%" height="15" fill="rgb(249,219,21)" fg:x="1428" fg:w="14"/><text x="47.0697%" y="222.50"></text></g><g><title>_from_mgr (pandas/core/generic.py:357) (10 samples, 0.33%)</title><rect x="46.9508%" y="228" width="0.3279%" height="15" fill="rgb(205,209,3)" fg:x="1432" fg:w="10"/><text x="47.2008%" y="238.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4616) (20 samples, 0.66%)</title><rect x="46.7213%" y="196" width="0.6557%" height="15" fill="rgb(243,44,1)" fg:x="1425" fg:w="20"/><text x="46.9713%" y="206.50"></text></g><g><title>_ixs (pandas/core/frame.py:4011) (34 samples, 1.11%)</title><rect x="46.4918%" y="180" width="1.1148%" height="15" fill="rgb(206,159,16)" fg:x="1418" fg:w="34"/><text x="46.7418%" y="190.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4618) (6 samples, 0.20%)</title><rect x="47.4098%" y="196" width="0.1967%" height="15" fill="rgb(244,77,30)" fg:x="1446" fg:w="6"/><text x="47.6598%" y="206.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4639) (53 samples, 1.74%)</title><rect x="46.0000%" y="164" width="1.7377%" height="15" fill="rgb(218,69,12)" fg:x="1403" fg:w="53"/><text x="46.2500%" y="174.50"></text></g><g><title>_ixs (pandas/core/frame.py:4014) (4 samples, 0.13%)</title><rect x="47.6066%" y="180" width="0.1311%" height="15" fill="rgb(212,87,7)" fg:x="1452" fg:w="4"/><text x="47.8566%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (68 samples, 2.23%)</title><rect x="45.5410%" y="148" width="2.2295%" height="15" fill="rgb(245,114,25)" fg:x="1389" fg:w="68"/><text x="45.7910%" y="158.50">_..</text></g><g><title>__getitem__ (pandas/core/series.py:1096) (5 samples, 0.16%)</title><rect x="47.7705%" y="164" width="0.1639%" height="15" fill="rgb(210,61,42)" fg:x="1457" fg:w="5"/><text x="48.0205%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1097) (4 samples, 0.13%)</title><rect x="47.9344%" y="164" width="0.1311%" height="15" fill="rgb(211,52,33)" fg:x="1462" fg:w="4"/><text x="48.1844%" y="174.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (9 samples, 0.30%)</title><rect x="48.1967%" y="180" width="0.2951%" height="15" fill="rgb(234,58,33)" fg:x="1470" fg:w="9"/><text x="48.4467%" y="190.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3805) (5 samples, 0.16%)</title><rect x="48.3279%" y="196" width="0.1639%" height="15" fill="rgb(220,115,36)" fg:x="1474" fg:w="5"/><text x="48.5779%" y="206.50"></text></g><g><title>get_utilization (evaluation_diff_quantity.py:101) (127 samples, 4.16%)</title><rect x="44.5246%" y="132" width="4.1639%" height="15" fill="rgb(243,153,54)" fg:x="1358" fg:w="127"/><text x="44.7746%" y="142.50">get_u..</text></g><g><title>get (pandas/core/generic.py:4581) (28 samples, 0.92%)</title><rect x="47.7705%" y="148" width="0.9180%" height="15" fill="rgb(251,47,18)" fg:x="1457" fg:w="28"/><text x="48.0205%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (16 samples, 0.52%)</title><rect x="48.1639%" y="164" width="0.5246%" height="15" fill="rgb(242,102,42)" fg:x="1469" fg:w="16"/><text x="48.4139%" y="174.50"></text></g><g><title>_get_value (pandas/core/series.py:1240) (5 samples, 0.16%)</title><rect x="48.5246%" y="180" width="0.1639%" height="15" fill="rgb(234,31,38)" fg:x="1480" fg:w="5"/><text x="48.7746%" y="190.50"></text></g><g><title>_values (pandas/core/series.py:863) (4 samples, 0.13%)</title><rect x="48.5574%" y="196" width="0.1311%" height="15" fill="rgb(221,117,51)" fg:x="1481" fg:w="4"/><text x="48.8074%" y="206.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4075) (5 samples, 0.16%)</title><rect x="49.0820%" y="148" width="0.1639%" height="15" fill="rgb(212,20,18)" fg:x="1497" fg:w="5"/><text x="49.3320%" y="158.50"></text></g><g><title>__contains__ (pandas/core/indexes/base.py:5360) (5 samples, 0.16%)</title><rect x="49.0820%" y="164" width="0.1639%" height="15" fill="rgb(245,133,36)" fg:x="1497" fg:w="5"/><text x="49.3320%" y="174.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4628) (4 samples, 0.13%)</title><rect x="49.3770%" y="164" width="0.1311%" height="15" fill="rgb(212,6,19)" fg:x="1506" fg:w="4"/><text x="49.6270%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (10 samples, 0.33%)</title><rect x="49.2459%" y="148" width="0.3279%" height="15" fill="rgb(218,1,36)" fg:x="1502" fg:w="10"/><text x="49.4959%" y="158.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (11 samples, 0.36%)</title><rect x="49.8361%" y="180" width="0.3607%" height="15" fill="rgb(246,84,54)" fg:x="1520" fg:w="11"/><text x="50.0861%" y="190.50"></text></g><g><title>get_utilization (evaluation_diff_quantity.py:102) (55 samples, 1.80%)</title><rect x="48.6885%" y="132" width="1.8033%" height="15" fill="rgb(242,110,6)" fg:x="1485" fg:w="55"/><text x="48.9385%" y="142.50">g..</text></g><g><title>get (pandas/core/generic.py:4581) (27 samples, 0.89%)</title><rect x="49.6066%" y="148" width="0.8852%" height="15" fill="rgb(214,47,5)" fg:x="1513" fg:w="27"/><text x="49.8566%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (22 samples, 0.72%)</title><rect x="49.7705%" y="164" width="0.7213%" height="15" fill="rgb(218,159,25)" fg:x="1518" fg:w="22"/><text x="50.0205%" y="174.50"></text></g><g><title>_get_value (pandas/core/series.py:1240) (9 samples, 0.30%)</title><rect x="50.1967%" y="180" width="0.2951%" height="15" fill="rgb(215,211,28)" fg:x="1531" fg:w="9"/><text x="50.4467%" y="190.50"></text></g><g><title>_values (pandas/core/series.py:863) (5 samples, 0.16%)</title><rect x="50.3279%" y="196" width="0.1639%" height="15" fill="rgb(238,59,32)" fg:x="1535" fg:w="5"/><text x="50.5779%" y="206.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:423) (203 samples, 6.66%)</title><rect x="44.3607%" y="116" width="6.6557%" height="15" fill="rgb(226,82,3)" fg:x="1353" fg:w="203"/><text x="44.6107%" y="126.50">SA_evalua..</text></g><g><title>get_utilization (evaluation_diff_quantity.py:99) (7 samples, 0.23%)</title><rect x="50.7869%" y="132" width="0.2295%" height="15" fill="rgb(240,164,32)" fg:x="1549" fg:w="7"/><text x="51.0369%" y="142.50"></text></g><g><title>__iter__ (pandas/core/base.py:862) (4 samples, 0.13%)</title><rect x="50.8852%" y="148" width="0.1311%" height="15" fill="rgb(232,46,7)" fg:x="1552" fg:w="4"/><text x="51.1352%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4063) (5 samples, 0.16%)</title><rect x="51.2131%" y="148" width="0.1639%" height="15" fill="rgb(229,129,53)" fg:x="1562" fg:w="5"/><text x="51.4631%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4075) (4 samples, 0.13%)</title><rect x="51.6393%" y="148" width="0.1311%" height="15" fill="rgb(234,188,29)" fg:x="1575" fg:w="4"/><text x="51.8893%" y="158.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4628) (4 samples, 0.13%)</title><rect x="51.7705%" y="164" width="0.1311%" height="15" fill="rgb(246,141,4)" fg:x="1579" fg:w="4"/><text x="52.0205%" y="174.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4638) (5 samples, 0.16%)</title><rect x="52.0000%" y="164" width="0.1639%" height="15" fill="rgb(229,23,39)" fg:x="1586" fg:w="5"/><text x="52.2500%" y="174.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3805) (4 samples, 0.13%)</title><rect x="52.0328%" y="180" width="0.1311%" height="15" fill="rgb(206,12,3)" fg:x="1587" fg:w="4"/><text x="52.2828%" y="190.50"></text></g><g><title>_ixs (pandas/core/frame.py:4008) (4 samples, 0.13%)</title><rect x="52.2295%" y="180" width="0.1311%" height="15" fill="rgb(252,226,20)" fg:x="1593" fg:w="4"/><text x="52.4795%" y="190.50"></text></g><g><title>iget (pandas/core/internals/managers.py:1021) (4 samples, 0.13%)</title><rect x="52.6557%" y="196" width="0.1311%" height="15" fill="rgb(216,123,35)" fg:x="1606" fg:w="4"/><text x="52.9057%" y="206.50"></text></g><g><title>_ixs (pandas/core/frame.py:4010) (18 samples, 0.59%)</title><rect x="52.3607%" y="180" width="0.5902%" height="15" fill="rgb(212,68,40)" fg:x="1597" fg:w="18"/><text x="52.6107%" y="190.50"></text></g><g><title>iget (pandas/core/internals/managers.py:1024) (5 samples, 0.16%)</title><rect x="52.7869%" y="196" width="0.1639%" height="15" fill="rgb(254,125,32)" fg:x="1610" fg:w="5"/><text x="53.0369%" y="206.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4614) (4 samples, 0.13%)</title><rect x="53.0164%" y="196" width="0.1311%" height="15" fill="rgb(253,97,22)" fg:x="1617" fg:w="4"/><text x="53.2664%" y="206.50"></text></g><g><title>_constructor_sliced_from_mgr (pandas/core/frame.py:679) (10 samples, 0.33%)</title><rect x="53.2459%" y="212" width="0.3279%" height="15" fill="rgb(241,101,14)" fg:x="1624" fg:w="10"/><text x="53.4959%" y="222.50"></text></g><g><title>_from_mgr (pandas/core/generic.py:357) (8 samples, 0.26%)</title><rect x="53.3115%" y="228" width="0.2623%" height="15" fill="rgb(238,103,29)" fg:x="1626" fg:w="8"/><text x="53.5615%" y="238.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4616) (23 samples, 0.75%)</title><rect x="53.1475%" y="196" width="0.7541%" height="15" fill="rgb(233,195,47)" fg:x="1621" fg:w="23"/><text x="53.3975%" y="206.50"></text></g><g><title>_constructor_sliced_from_mgr (pandas/core/frame.py:680) (10 samples, 0.33%)</title><rect x="53.5738%" y="212" width="0.3279%" height="15" fill="rgb(246,218,30)" fg:x="1634" fg:w="10"/><text x="53.8238%" y="222.50"></text></g><g><title>__finalize__ (pandas/core/generic.py:6262) (7 samples, 0.23%)</title><rect x="54.1311%" y="212" width="0.2295%" height="15" fill="rgb(219,145,47)" fg:x="1651" fg:w="7"/><text x="54.3811%" y="222.50"></text></g><g><title>__finalize__ (pandas/core/generic.py:6264) (6 samples, 0.20%)</title><rect x="54.3607%" y="212" width="0.1967%" height="15" fill="rgb(243,12,26)" fg:x="1658" fg:w="6"/><text x="54.6107%" y="222.50"></text></g><g><title>_ixs (pandas/core/frame.py:4011) (52 samples, 1.70%)</title><rect x="52.9508%" y="180" width="1.7049%" height="15" fill="rgb(214,87,16)" fg:x="1615" fg:w="52"/><text x="53.2008%" y="190.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4618) (20 samples, 0.66%)</title><rect x="54.0000%" y="196" width="0.6557%" height="15" fill="rgb(208,99,42)" fg:x="1647" fg:w="20"/><text x="54.2500%" y="206.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (4 samples, 0.13%)</title><rect x="54.8525%" y="212" width="0.1311%" height="15" fill="rgb(253,99,2)" fg:x="1673" fg:w="4"/><text x="55.1025%" y="222.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4639) (87 samples, 2.85%)</title><rect x="52.1639%" y="164" width="2.8525%" height="15" fill="rgb(220,168,23)" fg:x="1591" fg:w="87"/><text x="52.4139%" y="174.50">_g..</text></g><g><title>_ixs (pandas/core/frame.py:4014) (11 samples, 0.36%)</title><rect x="54.6557%" y="180" width="0.3607%" height="15" fill="rgb(242,38,24)" fg:x="1667" fg:w="11"/><text x="54.9057%" y="190.50"></text></g><g><title>_set_as_cached (pandas/core/series.py:1478) (8 samples, 0.26%)</title><rect x="54.7541%" y="196" width="0.2623%" height="15" fill="rgb(225,182,9)" fg:x="1670" fg:w="8"/><text x="55.0041%" y="206.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (103 samples, 3.38%)</title><rect x="51.7705%" y="148" width="3.3770%" height="15" fill="rgb(243,178,37)" fg:x="1579" fg:w="103"/><text x="52.0205%" y="158.50">__g..</text></g><g><title>_arith_method (pandas/core/base.py:1381) (4 samples, 0.13%)</title><rect x="55.4426%" y="196" width="0.1311%" height="15" fill="rgb(232,139,19)" fg:x="1691" fg:w="4"/><text x="55.6926%" y="206.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:431) (4 samples, 0.13%)</title><rect x="55.4426%" y="212" width="0.1311%" height="15" fill="rgb(225,201,24)" fg:x="1691" fg:w="4"/><text x="55.6926%" y="222.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:436) (4 samples, 0.13%)</title><rect x="55.5738%" y="212" width="0.1311%" height="15" fill="rgb(221,47,46)" fg:x="1695" fg:w="4"/><text x="55.8238%" y="222.50"></text></g><g><title>_na_arithmetic_op (pandas/core/ops/array_ops.py:218) (7 samples, 0.23%)</title><rect x="55.8033%" y="228" width="0.2295%" height="15" fill="rgb(249,23,13)" fg:x="1702" fg:w="7"/><text x="56.0533%" y="238.50"></text></g><g><title>evaluate (pandas/core/computation/expressions.py:242) (7 samples, 0.23%)</title><rect x="55.8033%" y="244" width="0.2295%" height="15" fill="rgb(219,9,5)" fg:x="1702" fg:w="7"/><text x="56.0533%" y="254.50"></text></g><g><title>_evaluate_standard (pandas/core/computation/expressions.py:73) (7 samples, 0.23%)</title><rect x="55.8033%" y="260" width="0.2295%" height="15" fill="rgb(254,171,16)" fg:x="1702" fg:w="7"/><text x="56.0533%" y="270.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (18 samples, 0.59%)</title><rect x="55.5738%" y="196" width="0.5902%" height="15" fill="rgb(230,171,20)" fg:x="1695" fg:w="18"/><text x="55.8238%" y="206.50"></text></g><g><title>arithmetic_op (pandas/core/ops/array_ops.py:283) (11 samples, 0.36%)</title><rect x="55.8033%" y="212" width="0.3607%" height="15" fill="rgb(210,71,41)" fg:x="1702" fg:w="11"/><text x="56.0533%" y="222.50"></text></g><g><title>_na_arithmetic_op (pandas/core/ops/array_ops.py:237) (4 samples, 0.13%)</title><rect x="56.0328%" y="228" width="0.1311%" height="15" fill="rgb(206,173,20)" fg:x="1709" fg:w="4"/><text x="56.2828%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (8 samples, 0.26%)</title><rect x="56.3934%" y="228" width="0.2623%" height="15" fill="rgb(233,88,34)" fg:x="1720" fg:w="8"/><text x="56.6434%" y="238.50"></text></g><g><title>_get_option (pandas/_config/config.py:146) (5 samples, 0.16%)</title><rect x="56.6557%" y="244" width="0.1639%" height="15" fill="rgb(223,209,46)" fg:x="1728" fg:w="5"/><text x="56.9057%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:586) (7 samples, 0.23%)</title><rect x="56.6557%" y="228" width="0.2295%" height="15" fill="rgb(250,43,18)" fg:x="1728" fg:w="7"/><text x="56.9057%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (7 samples, 0.23%)</title><rect x="57.0164%" y="228" width="0.2295%" height="15" fill="rgb(208,13,10)" fg:x="1739" fg:w="7"/><text x="57.2664%" y="238.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (36 samples, 1.18%)</title><rect x="56.1967%" y="212" width="1.1803%" height="15" fill="rgb(212,200,36)" fg:x="1714" fg:w="36"/><text x="56.4467%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:594) (4 samples, 0.13%)</title><rect x="57.2459%" y="228" width="0.1311%" height="15" fill="rgb(225,90,30)" fg:x="1746" fg:w="4"/><text x="57.4959%" y="238.50"></text></g><g><title>__mul__ (pandas/core/arraylike.py:202) (68 samples, 2.23%)</title><rect x="55.1803%" y="164" width="2.2295%" height="15" fill="rgb(236,182,39)" fg:x="1683" fg:w="68"/><text x="55.4303%" y="174.50">_..</text></g><g><title>_arith_method (pandas/core/series.py:6135) (65 samples, 2.13%)</title><rect x="55.2787%" y="180" width="2.1311%" height="15" fill="rgb(212,144,35)" fg:x="1686" fg:w="65"/><text x="55.5287%" y="190.50">_..</text></g><g><title>_arith_method (pandas/core/base.py:1384) (38 samples, 1.25%)</title><rect x="56.1639%" y="196" width="1.2459%" height="15" fill="rgb(228,63,44)" fg:x="1713" fg:w="38"/><text x="56.4139%" y="206.50"></text></g><g><title>_arith_method (pandas/core/base.py:1372) (5 samples, 0.16%)</title><rect x="57.4754%" y="196" width="0.1639%" height="15" fill="rgb(228,109,6)" fg:x="1753" fg:w="5"/><text x="57.7254%" y="206.50"></text></g><g><title>get_op_result_name (pandas/core/ops/common.py:97) (4 samples, 0.13%)</title><rect x="57.5082%" y="212" width="0.1311%" height="15" fill="rgb(238,117,24)" fg:x="1754" fg:w="4"/><text x="57.7582%" y="222.50"></text></g><g><title>_arith_method (pandas/core/base.py:1381) (7 samples, 0.23%)</title><rect x="57.7377%" y="196" width="0.2295%" height="15" fill="rgb(242,26,26)" fg:x="1761" fg:w="7"/><text x="57.9877%" y="206.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:431) (6 samples, 0.20%)</title><rect x="57.7705%" y="212" width="0.1967%" height="15" fill="rgb(221,92,48)" fg:x="1762" fg:w="6"/><text x="58.0205%" y="222.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:436) (5 samples, 0.16%)</title><rect x="58.1967%" y="212" width="0.1639%" height="15" fill="rgb(209,209,32)" fg:x="1775" fg:w="5"/><text x="58.4467%" y="222.50"></text></g><g><title>arithmetic_op (pandas/core/ops/array_ops.py:267) (4 samples, 0.13%)</title><rect x="58.4262%" y="212" width="0.1311%" height="15" fill="rgb(221,70,22)" fg:x="1782" fg:w="4"/><text x="58.6762%" y="222.50"></text></g><g><title>_na_arithmetic_op (pandas/core/ops/array_ops.py:218) (6 samples, 0.20%)</title><rect x="58.6230%" y="228" width="0.1967%" height="15" fill="rgb(248,145,5)" fg:x="1788" fg:w="6"/><text x="58.8730%" y="238.50"></text></g><g><title>evaluate (pandas/core/computation/expressions.py:242) (6 samples, 0.20%)</title><rect x="58.6230%" y="244" width="0.1967%" height="15" fill="rgb(226,116,26)" fg:x="1788" fg:w="6"/><text x="58.8730%" y="254.50"></text></g><g><title>_evaluate_standard (pandas/core/computation/expressions.py:73) (6 samples, 0.20%)</title><rect x="58.6230%" y="260" width="0.1967%" height="15" fill="rgb(244,5,17)" fg:x="1788" fg:w="6"/><text x="58.8730%" y="270.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (27 samples, 0.89%)</title><rect x="57.9672%" y="196" width="0.8852%" height="15" fill="rgb(252,159,33)" fg:x="1768" fg:w="27"/><text x="58.2172%" y="206.50"></text></g><g><title>arithmetic_op (pandas/core/ops/array_ops.py:283) (7 samples, 0.23%)</title><rect x="58.6230%" y="212" width="0.2295%" height="15" fill="rgb(206,71,0)" fg:x="1788" fg:w="7"/><text x="58.8730%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:487) (4 samples, 0.13%)</title><rect x="58.9180%" y="228" width="0.1311%" height="15" fill="rgb(233,118,54)" fg:x="1797" fg:w="4"/><text x="59.1680%" y="238.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:581) (4 samples, 0.13%)</title><rect x="59.2459%" y="244" width="0.1311%" height="15" fill="rgb(234,83,48)" fg:x="1807" fg:w="4"/><text x="59.4959%" y="254.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:625) (5 samples, 0.16%)</title><rect x="59.4754%" y="244" width="0.1639%" height="15" fill="rgb(228,3,54)" fg:x="1814" fg:w="5"/><text x="59.7254%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (20 samples, 0.66%)</title><rect x="59.0820%" y="228" width="0.6557%" height="15" fill="rgb(226,155,13)" fg:x="1802" fg:w="20"/><text x="59.3320%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:586) (6 samples, 0.20%)</title><rect x="59.7377%" y="228" width="0.1967%" height="15" fill="rgb(241,28,37)" fg:x="1822" fg:w="6"/><text x="59.9877%" y="238.50"></text></g><g><title>_get_option (pandas/_config/config.py:149) (4 samples, 0.13%)</title><rect x="59.8033%" y="244" width="0.1311%" height="15" fill="rgb(233,93,10)" fg:x="1824" fg:w="4"/><text x="60.0533%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (5 samples, 0.16%)</title><rect x="59.9344%" y="228" width="0.1639%" height="15" fill="rgb(225,113,19)" fg:x="1828" fg:w="5"/><text x="60.1844%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:592) (4 samples, 0.13%)</title><rect x="60.0984%" y="228" width="0.1311%" height="15" fill="rgb(241,2,18)" fg:x="1833" fg:w="4"/><text x="60.3484%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (10 samples, 0.33%)</title><rect x="60.2295%" y="228" width="0.3279%" height="15" fill="rgb(228,207,21)" fg:x="1837" fg:w="10"/><text x="60.4795%" y="238.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6320) (6 samples, 0.20%)</title><rect x="60.3607%" y="244" width="0.1967%" height="15" fill="rgb(213,211,35)" fg:x="1841" fg:w="6"/><text x="60.6107%" y="254.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (54 samples, 1.77%)</title><rect x="58.9180%" y="212" width="1.7705%" height="15" fill="rgb(209,83,10)" fg:x="1797" fg:w="54"/><text x="59.1680%" y="222.50">_..</text></g><g><title>_construct_result (pandas/core/series.py:6232) (4 samples, 0.13%)</title><rect x="60.6885%" y="212" width="0.1311%" height="15" fill="rgb(209,164,1)" fg:x="1851" fg:w="4"/><text x="60.9385%" y="222.50"></text></g><g><title>new_method (pandas/core/ops/common.py:76) (176 samples, 5.77%)</title><rect x="55.1803%" y="148" width="5.7705%" height="15" fill="rgb(213,184,43)" fg:x="1683" fg:w="176"/><text x="55.4303%" y="158.50">new_met..</text></g><g><title>__truediv__ (pandas/core/arraylike.py:210) (108 samples, 3.54%)</title><rect x="57.4098%" y="164" width="3.5410%" height="15" fill="rgb(231,61,34)" fg:x="1751" fg:w="108"/><text x="57.6598%" y="174.50">__tr..</text></g><g><title>_arith_method (pandas/core/series.py:6135) (106 samples, 3.48%)</title><rect x="57.4754%" y="180" width="3.4754%" height="15" fill="rgb(235,75,3)" fg:x="1753" fg:w="106"/><text x="57.7254%" y="190.50">_ar..</text></g><g><title>_arith_method (pandas/core/base.py:1384) (64 samples, 2.10%)</title><rect x="58.8525%" y="196" width="2.0984%" height="15" fill="rgb(220,106,47)" fg:x="1795" fg:w="64"/><text x="59.1025%" y="206.50">_..</text></g><g><title>_construct_result (pandas/core/series.py:6236) (4 samples, 0.13%)</title><rect x="60.8197%" y="212" width="0.1311%" height="15" fill="rgb(210,196,33)" fg:x="1855" fg:w="4"/><text x="61.0697%" y="222.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6313) (4 samples, 0.13%)</title><rect x="60.8197%" y="228" width="0.1311%" height="15" fill="rgb(229,154,42)" fg:x="1855" fg:w="4"/><text x="61.0697%" y="238.50"></text></g><g><title>_maybe_get_mask (pandas/core/nanops.py:248) (24 samples, 0.79%)</title><rect x="61.8689%" y="292" width="0.7869%" height="15" fill="rgb(228,114,26)" fg:x="1887" fg:w="24"/><text x="62.1189%" y="302.50"></text></g><g><title>isna (pandas/core/dtypes/missing.py:178) (24 samples, 0.79%)</title><rect x="61.8689%" y="308" width="0.7869%" height="15" fill="rgb(208,144,1)" fg:x="1887" fg:w="24"/><text x="62.1189%" y="318.50"></text></g><g><title>_isna (pandas/core/dtypes/missing.py:207) (17 samples, 0.56%)</title><rect x="62.0984%" y="324" width="0.5574%" height="15" fill="rgb(239,112,37)" fg:x="1894" fg:w="17"/><text x="62.3484%" y="334.50"></text></g><g><title>_isna_array (pandas/core/dtypes/missing.py:292) (12 samples, 0.39%)</title><rect x="62.2623%" y="340" width="0.3934%" height="15" fill="rgb(210,96,50)" fg:x="1899" fg:w="12"/><text x="62.5123%" y="350.50"></text></g><g><title>_isna_string_dtype (pandas/core/dtypes/missing.py:313) (11 samples, 0.36%)</title><rect x="62.2951%" y="356" width="0.3607%" height="15" fill="rgb(222,178,2)" fg:x="1900" fg:w="11"/><text x="62.5451%" y="366.50"></text></g><g><title>_get_values (pandas/core/nanops.py:294) (27 samples, 0.89%)</title><rect x="61.8033%" y="276" width="0.8852%" height="15" fill="rgb(226,74,18)" fg:x="1885" fg:w="27"/><text x="62.0533%" y="286.50"></text></g><g><title>nansum (pandas/core/nanops.py:639) (41 samples, 1.34%)</title><rect x="61.7049%" y="260" width="1.3443%" height="15" fill="rgb(225,67,54)" fg:x="1882" fg:w="41"/><text x="61.9549%" y="270.50"></text></g><g><title>_get_values (pandas/core/nanops.py:313) (9 samples, 0.30%)</title><rect x="62.7541%" y="276" width="0.2951%" height="15" fill="rgb(251,92,32)" fg:x="1914" fg:w="9"/><text x="63.0041%" y="286.50"></text></g><g><title>_any (numpy/core/_methods.py:58) (8 samples, 0.26%)</title><rect x="62.7869%" y="292" width="0.2623%" height="15" fill="rgb(228,149,22)" fg:x="1915" fg:w="8"/><text x="63.0369%" y="302.50"></text></g><g><title>nansum (pandas/core/nanops.py:646) (8 samples, 0.26%)</title><rect x="63.0820%" y="260" width="0.2623%" height="15" fill="rgb(243,54,13)" fg:x="1924" fg:w="8"/><text x="63.3320%" y="270.50"></text></g><g><title>_sum (numpy/core/_methods.py:49) (6 samples, 0.20%)</title><rect x="63.1475%" y="276" width="0.1967%" height="15" fill="rgb(243,180,28)" fg:x="1926" fg:w="6"/><text x="63.3975%" y="286.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:428) (378 samples, 12.39%)</title><rect x="51.0164%" y="116" width="12.3934%" height="15" fill="rgb(208,167,24)" fg:x="1556" fg:w="378"/><text x="51.2664%" y="126.50">SA_evaluation_funct..</text></g><g><title>get_normalized_lifespan (evaluation_diff_quantity.py:126) (378 samples, 12.39%)</title><rect x="51.0164%" y="132" width="12.3934%" height="15" fill="rgb(245,73,45)" fg:x="1556" fg:w="378"/><text x="51.2664%" y="142.50">get_normalized_life..</text></g><g><title>sum (pandas/core/series.py:6528) (75 samples, 2.46%)</title><rect x="60.9508%" y="148" width="2.4590%" height="15" fill="rgb(237,203,48)" fg:x="1859" fg:w="75"/><text x="61.2008%" y="158.50">su..</text></g><g><title>sum (pandas/core/generic.py:12506) (75 samples, 2.46%)</title><rect x="60.9508%" y="164" width="2.4590%" height="15" fill="rgb(211,197,16)" fg:x="1859" fg:w="75"/><text x="61.2008%" y="174.50">su..</text></g><g><title>_min_count_stat_function (pandas/core/generic.py:12489) (70 samples, 2.30%)</title><rect x="61.1148%" y="180" width="2.2951%" height="15" fill="rgb(243,99,51)" fg:x="1864" fg:w="70"/><text x="61.3648%" y="190.50">_..</text></g><g><title>_reduce (pandas/core/series.py:6457) (66 samples, 2.16%)</title><rect x="61.2459%" y="196" width="2.1639%" height="15" fill="rgb(215,123,29)" fg:x="1868" fg:w="66"/><text x="61.4959%" y="206.50">_..</text></g><g><title>_f (pandas/core/nanops.py:85) (61 samples, 2.00%)</title><rect x="61.4098%" y="212" width="2.0000%" height="15" fill="rgb(239,186,37)" fg:x="1873" fg:w="61"/><text x="61.6598%" y="222.50">_..</text></g><g><title>new_func (pandas/core/nanops.py:404) (58 samples, 1.90%)</title><rect x="61.5082%" y="228" width="1.9016%" height="15" fill="rgb(252,136,39)" fg:x="1876" fg:w="58"/><text x="61.7582%" y="238.50">n..</text></g><g><title>newfunc (pandas/core/nanops.py:477) (54 samples, 1.77%)</title><rect x="61.6393%" y="244" width="1.7705%" height="15" fill="rgb(223,213,32)" fg:x="1880" fg:w="54"/><text x="61.8893%" y="254.50">n..</text></g><g><title>get_revenue (evaluation_diff_quantity.py:150) (4 samples, 0.13%)</title><rect x="63.4426%" y="148" width="0.1311%" height="15" fill="rgb(233,115,5)" fg:x="1935" fg:w="4"/><text x="63.6926%" y="158.50"></text></g><g><title>get_revenue (evaluation_diff_quantity.py:151) (7 samples, 0.23%)</title><rect x="63.5738%" y="148" width="0.2295%" height="15" fill="rgb(207,226,44)" fg:x="1939" fg:w="7"/><text x="63.8238%" y="158.50"></text></g><g><title>__iter__ (pandas/core/base.py:862) (4 samples, 0.13%)</title><rect x="63.6721%" y="164" width="0.1311%" height="15" fill="rgb(208,126,0)" fg:x="1942" fg:w="4"/><text x="63.9221%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4070) (4 samples, 0.13%)</title><rect x="64.1311%" y="164" width="0.1311%" height="15" fill="rgb(244,66,21)" fg:x="1956" fg:w="4"/><text x="64.3811%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4075) (4 samples, 0.13%)</title><rect x="64.3934%" y="164" width="0.1311%" height="15" fill="rgb(222,97,12)" fg:x="1964" fg:w="4"/><text x="64.6434%" y="174.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4628) (4 samples, 0.13%)</title><rect x="64.5902%" y="180" width="0.1311%" height="15" fill="rgb(219,213,19)" fg:x="1970" fg:w="4"/><text x="64.8402%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (7 samples, 0.23%)</title><rect x="64.5246%" y="164" width="0.2295%" height="15" fill="rgb(252,169,30)" fg:x="1968" fg:w="7"/><text x="64.7746%" y="174.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (10 samples, 0.33%)</title><rect x="65.1148%" y="196" width="0.3279%" height="15" fill="rgb(206,32,51)" fg:x="1986" fg:w="10"/><text x="65.3648%" y="206.50"></text></g><g><title>get_revenue (evaluation_diff_quantity.py:152) (60 samples, 1.97%)</title><rect x="63.8033%" y="148" width="1.9672%" height="15" fill="rgb(250,172,42)" fg:x="1946" fg:w="60"/><text x="64.0533%" y="158.50">g..</text></g><g><title>get (pandas/core/generic.py:4581) (31 samples, 1.02%)</title><rect x="64.7541%" y="164" width="1.0164%" height="15" fill="rgb(209,34,43)" fg:x="1975" fg:w="31"/><text x="65.0041%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (25 samples, 0.82%)</title><rect x="64.9508%" y="180" width="0.8197%" height="15" fill="rgb(223,11,35)" fg:x="1981" fg:w="25"/><text x="65.2008%" y="190.50"></text></g><g><title>_get_value (pandas/core/series.py:1240) (7 samples, 0.23%)</title><rect x="65.5410%" y="196" width="0.2295%" height="15" fill="rgb(251,219,26)" fg:x="1999" fg:w="7"/><text x="65.7910%" y="206.50"></text></g><g><title>_values (pandas/core/series.py:863) (5 samples, 0.16%)</title><rect x="65.6066%" y="212" width="0.1639%" height="15" fill="rgb(231,119,3)" fg:x="2001" fg:w="5"/><text x="65.8566%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4063) (5 samples, 0.16%)</title><rect x="65.8033%" y="164" width="0.1639%" height="15" fill="rgb(216,97,11)" fg:x="2007" fg:w="5"/><text x="66.0533%" y="174.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3805) (5 samples, 0.16%)</title><rect x="66.8525%" y="212" width="0.1639%" height="15" fill="rgb(223,59,9)" fg:x="2039" fg:w="5"/><text x="67.1025%" y="222.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (13 samples, 0.43%)</title><rect x="66.6885%" y="196" width="0.4262%" height="15" fill="rgb(233,93,31)" fg:x="2034" fg:w="13"/><text x="66.9385%" y="206.50"></text></g><g><title>get_revenue (evaluation_diff_quantity.py:153) (46 samples, 1.51%)</title><rect x="65.7705%" y="148" width="1.5082%" height="15" fill="rgb(239,81,33)" fg:x="2006" fg:w="46"/><text x="66.0205%" y="158.50"></text></g><g><title>get (pandas/core/generic.py:4581) (29 samples, 0.95%)</title><rect x="66.3279%" y="164" width="0.9508%" height="15" fill="rgb(213,120,34)" fg:x="2023" fg:w="29"/><text x="66.5779%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (21 samples, 0.69%)</title><rect x="66.5902%" y="180" width="0.6885%" height="15" fill="rgb(243,49,53)" fg:x="2031" fg:w="21"/><text x="66.8402%" y="190.50"></text></g><g><title>_get_value (pandas/core/series.py:1240) (5 samples, 0.16%)</title><rect x="67.1148%" y="196" width="0.1639%" height="15" fill="rgb(247,216,33)" fg:x="2047" fg:w="5"/><text x="67.3648%" y="206.50"></text></g><g><title>fget (pandas/core/indexes/extension.py:68) (7 samples, 0.23%)</title><rect x="67.7049%" y="196" width="0.2295%" height="15" fill="rgb(226,26,14)" fg:x="2065" fg:w="7"/><text x="67.9549%" y="206.50"></text></g><g><title>categories (pandas/core/arrays/categorical.py:820) (7 samples, 0.23%)</title><rect x="67.7049%" y="212" width="0.2295%" height="15" fill="rgb(215,49,53)" fg:x="2065" fg:w="7"/><text x="67.9549%" y="222.50"></text></g><g><title>__contains__ (pandas/core/indexes/category.py:365) (14 samples, 0.46%)</title><rect x="67.6393%" y="180" width="0.4590%" height="15" fill="rgb(245,162,40)" fg:x="2063" fg:w="14"/><text x="67.8893%" y="190.50"></text></g><g><title>is_valid_na_for_dtype (pandas/core/dtypes/missing.py:741) (5 samples, 0.16%)</title><rect x="67.9344%" y="196" width="0.1639%" height="15" fill="rgb(229,68,17)" fg:x="2072" fg:w="5"/><text x="68.1844%" y="206.50"></text></g><g><title>contains (pandas/core/arrays/categorical.py:230) (15 samples, 0.49%)</title><rect x="68.1639%" y="196" width="0.4918%" height="15" fill="rgb(213,182,10)" fg:x="2079" fg:w="15"/><text x="68.4139%" y="206.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3805) (8 samples, 0.26%)</title><rect x="68.3934%" y="212" width="0.2623%" height="15" fill="rgb(245,125,30)" fg:x="2086" fg:w="8"/><text x="68.6434%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4075) (37 samples, 1.21%)</title><rect x="67.5738%" y="164" width="1.2131%" height="15" fill="rgb(232,202,2)" fg:x="2061" fg:w="37"/><text x="67.8238%" y="174.50"></text></g><g><title>__contains__ (pandas/core/indexes/category.py:368) (21 samples, 0.69%)</title><rect x="68.0984%" y="180" width="0.6885%" height="15" fill="rgb(237,140,51)" fg:x="2077" fg:w="21"/><text x="68.3484%" y="190.50"></text></g><g><title>contains (pandas/core/arrays/categorical.py:240) (4 samples, 0.13%)</title><rect x="68.6557%" y="196" width="0.1311%" height="15" fill="rgb(236,157,25)" fg:x="2094" fg:w="4"/><text x="68.9057%" y="206.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (4 samples, 0.13%)</title><rect x="68.7869%" y="164" width="0.1311%" height="15" fill="rgb(219,209,0)" fg:x="2098" fg:w="4"/><text x="69.0369%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1096) (4 samples, 0.13%)</title><rect x="68.9180%" y="180" width="0.1311%" height="15" fill="rgb(240,116,54)" fg:x="2102" fg:w="4"/><text x="69.1680%" y="190.50"></text></g><g><title>categories (pandas/core/arrays/categorical.py:820) (5 samples, 0.16%)</title><rect x="69.6066%" y="260" width="0.1639%" height="15" fill="rgb(216,10,36)" fg:x="2123" fg:w="5"/><text x="69.8566%" y="270.50"></text></g><g><title>_unbox_scalar (pandas/core/arrays/categorical.py:2151) (11 samples, 0.36%)</title><rect x="69.5082%" y="244" width="0.3607%" height="15" fill="rgb(222,72,44)" fg:x="2120" fg:w="11"/><text x="69.7582%" y="254.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3803) (30 samples, 0.98%)</title><rect x="69.2459%" y="212" width="0.9836%" height="15" fill="rgb(232,159,9)" fg:x="2112" fg:w="30"/><text x="69.4959%" y="222.50"></text></g><g><title>_maybe_cast_indexer (pandas/core/indexes/category.py:405) (27 samples, 0.89%)</title><rect x="69.3443%" y="228" width="0.8852%" height="15" fill="rgb(210,39,32)" fg:x="2115" fg:w="27"/><text x="69.5943%" y="238.50"></text></g><g><title>_unbox_scalar (pandas/core/arrays/categorical.py:2152) (11 samples, 0.36%)</title><rect x="69.8689%" y="244" width="0.3607%" height="15" fill="rgb(216,194,45)" fg:x="2131" fg:w="11"/><text x="70.1189%" y="254.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (37 samples, 1.21%)</title><rect x="69.2131%" y="196" width="1.2131%" height="15" fill="rgb(218,18,35)" fg:x="2111" fg:w="37"/><text x="69.4631%" y="206.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3805) (5 samples, 0.16%)</title><rect x="70.2623%" y="212" width="0.1639%" height="15" fill="rgb(207,83,51)" fg:x="2143" fg:w="5"/><text x="70.5123%" y="222.50"></text></g><g><title>get_revenue (evaluation_diff_quantity.py:154) (103 samples, 3.38%)</title><rect x="67.2787%" y="148" width="3.3770%" height="15" fill="rgb(225,63,43)" fg:x="2052" fg:w="103"/><text x="67.5287%" y="158.50">get..</text></g><g><title>get (pandas/core/generic.py:4581) (53 samples, 1.74%)</title><rect x="68.9180%" y="164" width="1.7377%" height="15" fill="rgb(207,57,36)" fg:x="2102" fg:w="53"/><text x="69.1680%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (45 samples, 1.48%)</title><rect x="69.1803%" y="180" width="1.4754%" height="15" fill="rgb(216,99,33)" fg:x="2110" fg:w="45"/><text x="69.4303%" y="190.50"></text></g><g><title>_get_value (pandas/core/series.py:1240) (7 samples, 0.23%)</title><rect x="70.4262%" y="196" width="0.2295%" height="15" fill="rgb(225,42,16)" fg:x="2148" fg:w="7"/><text x="70.6762%" y="206.50"></text></g><g><title>_values (pandas/core/series.py:863) (5 samples, 0.16%)</title><rect x="70.4918%" y="212" width="0.1639%" height="15" fill="rgb(220,201,45)" fg:x="2150" fg:w="5"/><text x="70.7418%" y="222.50"></text></g><g><title>get_profit (evaluation_diff_quantity.py:206) (225 samples, 7.38%)</title><rect x="63.4098%" y="132" width="7.3770%" height="15" fill="rgb(225,33,4)" fg:x="1934" fg:w="225"/><text x="63.6598%" y="142.50">get_profit..</text></g><g><title>get_revenue (evaluation_diff_quantity.py:155) (4 samples, 0.13%)</title><rect x="70.6557%" y="148" width="0.1311%" height="15" fill="rgb(224,33,50)" fg:x="2155" fg:w="4"/><text x="70.9057%" y="158.50"></text></g><g><title>get_cost (evaluation_diff_quantity.py:186) (5 samples, 0.16%)</title><rect x="70.9180%" y="148" width="0.1639%" height="15" fill="rgb(246,198,51)" fg:x="2163" fg:w="5"/><text x="71.1680%" y="158.50"></text></g><g><title>get_cost (evaluation_diff_quantity.py:189) (4 samples, 0.13%)</title><rect x="71.0820%" y="148" width="0.1311%" height="15" fill="rgb(205,22,4)" fg:x="2168" fg:w="4"/><text x="71.3320%" y="158.50"></text></g><g><title>get_cost (evaluation_diff_quantity.py:190) (4 samples, 0.13%)</title><rect x="71.2131%" y="148" width="0.1311%" height="15" fill="rgb(206,3,8)" fg:x="2172" fg:w="4"/><text x="71.4631%" y="158.50"></text></g><g><title>_constructor_sliced_from_mgr (pandas/core/frame.py:679) (4 samples, 0.13%)</title><rect x="71.6721%" y="228" width="0.1311%" height="15" fill="rgb(251,23,15)" fg:x="2186" fg:w="4"/><text x="71.9221%" y="238.50"></text></g><g><title>_from_mgr (pandas/core/generic.py:357) (4 samples, 0.13%)</title><rect x="71.6721%" y="244" width="0.1311%" height="15" fill="rgb(252,88,28)" fg:x="2186" fg:w="4"/><text x="71.9221%" y="254.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4616) (5 samples, 0.16%)</title><rect x="71.6721%" y="212" width="0.1639%" height="15" fill="rgb(212,127,14)" fg:x="2186" fg:w="5"/><text x="71.9221%" y="222.50"></text></g><g><title>_ixs (pandas/core/frame.py:4011) (12 samples, 0.39%)</title><rect x="71.5738%" y="196" width="0.3934%" height="15" fill="rgb(247,145,37)" fg:x="2183" fg:w="12"/><text x="71.8238%" y="206.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4618) (4 samples, 0.13%)</title><rect x="71.8361%" y="212" width="0.1311%" height="15" fill="rgb(209,117,53)" fg:x="2191" fg:w="4"/><text x="72.0861%" y="222.50"></text></g><g><title>get_cost (evaluation_diff_quantity.py:191) (20 samples, 0.66%)</title><rect x="71.3443%" y="148" width="0.6557%" height="15" fill="rgb(212,90,42)" fg:x="2176" fg:w="20"/><text x="71.5943%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (16 samples, 0.52%)</title><rect x="71.4754%" y="164" width="0.5246%" height="15" fill="rgb(218,164,37)" fg:x="2180" fg:w="16"/><text x="71.7254%" y="174.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4639) (16 samples, 0.52%)</title><rect x="71.4754%" y="180" width="0.5246%" height="15" fill="rgb(246,65,34)" fg:x="2180" fg:w="16"/><text x="71.7254%" y="190.50"></text></g><g><title>_arith_method (pandas/core/base.py:1372) (6 samples, 0.20%)</title><rect x="72.2623%" y="212" width="0.1967%" height="15" fill="rgb(231,100,33)" fg:x="2204" fg:w="6"/><text x="72.5123%" y="222.50"></text></g><g><title>_arith_method (pandas/core/base.py:1381) (5 samples, 0.16%)</title><rect x="72.5902%" y="212" width="0.1639%" height="15" fill="rgb(228,126,14)" fg:x="2214" fg:w="5"/><text x="72.8402%" y="222.50"></text></g><g><title>_na_arithmetic_op (pandas/core/ops/array_ops.py:218) (4 samples, 0.13%)</title><rect x="72.9508%" y="244" width="0.1311%" height="15" fill="rgb(215,173,21)" fg:x="2225" fg:w="4"/><text x="73.2008%" y="254.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (12 samples, 0.39%)</title><rect x="72.7541%" y="212" width="0.3934%" height="15" fill="rgb(210,6,40)" fg:x="2219" fg:w="12"/><text x="73.0041%" y="222.50"></text></g><g><title>arithmetic_op (pandas/core/ops/array_ops.py:283) (7 samples, 0.23%)</title><rect x="72.9180%" y="228" width="0.2295%" height="15" fill="rgb(212,48,18)" fg:x="2224" fg:w="7"/><text x="73.1680%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (4 samples, 0.13%)</title><rect x="73.5738%" y="244" width="0.1311%" height="15" fill="rgb(230,214,11)" fg:x="2244" fg:w="4"/><text x="73.8238%" y="254.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (4 samples, 0.13%)</title><rect x="73.9016%" y="260" width="0.1311%" height="15" fill="rgb(254,105,39)" fg:x="2254" fg:w="4"/><text x="74.1516%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (7 samples, 0.23%)</title><rect x="73.9016%" y="244" width="0.2295%" height="15" fill="rgb(245,158,5)" fg:x="2254" fg:w="7"/><text x="74.1516%" y="254.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (36 samples, 1.18%)</title><rect x="73.1803%" y="228" width="1.1803%" height="15" fill="rgb(249,208,11)" fg:x="2232" fg:w="36"/><text x="73.4303%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:594) (7 samples, 0.23%)</title><rect x="74.1311%" y="244" width="0.2295%" height="15" fill="rgb(210,39,28)" fg:x="2261" fg:w="7"/><text x="74.3811%" y="254.50"></text></g><g><title>_set_axis (pandas/core/generic.py:814) (6 samples, 0.20%)</title><rect x="74.1639%" y="260" width="0.1967%" height="15" fill="rgb(211,56,53)" fg:x="2262" fg:w="6"/><text x="74.4139%" y="270.50"></text></g><g><title>set_axis (pandas/core/internals/managers.py:238) (6 samples, 0.20%)</title><rect x="74.1639%" y="276" width="0.1967%" height="15" fill="rgb(226,201,30)" fg:x="2262" fg:w="6"/><text x="74.4139%" y="286.50"></text></g><g><title>__rmul__ (pandas/core/arraylike.py:206) (69 samples, 2.26%)</title><rect x="72.2295%" y="180" width="2.2623%" height="15" fill="rgb(239,101,34)" fg:x="2203" fg:w="69"/><text x="72.4795%" y="190.50">_..</text></g><g><title>_arith_method (pandas/core/series.py:6135) (69 samples, 2.26%)</title><rect x="72.2295%" y="196" width="2.2623%" height="15" fill="rgb(226,209,5)" fg:x="2203" fg:w="69"/><text x="72.4795%" y="206.50">_..</text></g><g><title>_arith_method (pandas/core/base.py:1384) (41 samples, 1.34%)</title><rect x="73.1475%" y="212" width="1.3443%" height="15" fill="rgb(250,105,47)" fg:x="2231" fg:w="41"/><text x="73.3975%" y="222.50"></text></g><g><title>_construct_result (pandas/core/series.py:6236) (4 samples, 0.13%)</title><rect x="74.3607%" y="228" width="0.1311%" height="15" fill="rgb(230,72,3)" fg:x="2268" fg:w="4"/><text x="74.6107%" y="238.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6313) (4 samples, 0.13%)</title><rect x="74.3607%" y="244" width="0.1311%" height="15" fill="rgb(232,218,39)" fg:x="2268" fg:w="4"/><text x="74.6107%" y="254.50"></text></g><g><title>get_op_result_name (pandas/core/ops/common.py:96) (5 samples, 0.16%)</title><rect x="74.5574%" y="228" width="0.1639%" height="15" fill="rgb(248,166,6)" fg:x="2274" fg:w="5"/><text x="74.8074%" y="238.50"></text></g><g><title>_arith_method (pandas/core/base.py:1372) (6 samples, 0.20%)</title><rect x="74.5574%" y="212" width="0.1967%" height="15" fill="rgb(247,89,20)" fg:x="2274" fg:w="6"/><text x="74.8074%" y="222.50"></text></g><g><title>_arith_method (pandas/core/base.py:1381) (4 samples, 0.13%)</title><rect x="74.9180%" y="212" width="0.1311%" height="15" fill="rgb(248,130,54)" fg:x="2285" fg:w="4"/><text x="75.1680%" y="222.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:431) (4 samples, 0.13%)</title><rect x="74.9180%" y="228" width="0.1311%" height="15" fill="rgb(234,196,4)" fg:x="2285" fg:w="4"/><text x="75.1680%" y="238.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (8 samples, 0.26%)</title><rect x="75.0492%" y="212" width="0.2623%" height="15" fill="rgb(250,143,31)" fg:x="2289" fg:w="8"/><text x="75.2992%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (7 samples, 0.23%)</title><rect x="75.5410%" y="244" width="0.2295%" height="15" fill="rgb(211,110,34)" fg:x="2304" fg:w="7"/><text x="75.7910%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:586) (4 samples, 0.13%)</title><rect x="75.7705%" y="244" width="0.1311%" height="15" fill="rgb(215,124,48)" fg:x="2311" fg:w="4"/><text x="76.0205%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (4 samples, 0.13%)</title><rect x="75.9344%" y="244" width="0.1311%" height="15" fill="rgb(216,46,13)" fg:x="2316" fg:w="4"/><text x="76.1844%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (5 samples, 0.16%)</title><rect x="76.1311%" y="244" width="0.1639%" height="15" fill="rgb(205,184,25)" fg:x="2322" fg:w="5"/><text x="76.3811%" y="254.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (34 samples, 1.11%)</title><rect x="75.3115%" y="228" width="1.1148%" height="15" fill="rgb(228,1,10)" fg:x="2297" fg:w="34"/><text x="75.5615%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:594) (4 samples, 0.13%)</title><rect x="76.2951%" y="244" width="0.1311%" height="15" fill="rgb(213,116,27)" fg:x="2327" fg:w="4"/><text x="76.5451%" y="254.50"></text></g><g><title>get_cost (evaluation_diff_quantity.py:194) (137 samples, 4.49%)</title><rect x="72.0000%" y="148" width="4.4918%" height="15" fill="rgb(241,95,50)" fg:x="2196" fg:w="137"/><text x="72.2500%" y="158.50">get_c..</text></g><g><title>new_method (pandas/core/ops/common.py:76) (132 samples, 4.33%)</title><rect x="72.1639%" y="164" width="4.3279%" height="15" fill="rgb(238,48,32)" fg:x="2201" fg:w="132"/><text x="72.4139%" y="174.50">new_m..</text></g><g><title>__truediv__ (pandas/core/arraylike.py:210) (61 samples, 2.00%)</title><rect x="74.4918%" y="180" width="2.0000%" height="15" fill="rgb(235,113,49)" fg:x="2272" fg:w="61"/><text x="74.7418%" y="190.50">_..</text></g><g><title>_arith_method (pandas/core/series.py:6135) (59 samples, 1.93%)</title><rect x="74.5574%" y="196" width="1.9344%" height="15" fill="rgb(205,127,43)" fg:x="2274" fg:w="59"/><text x="74.8074%" y="206.50">_..</text></g><g><title>_arith_method (pandas/core/base.py:1384) (36 samples, 1.18%)</title><rect x="75.3115%" y="212" width="1.1803%" height="15" fill="rgb(250,162,2)" fg:x="2297" fg:w="36"/><text x="75.5615%" y="222.50"></text></g><g><title>array_ufunc (pandas/core/arraylike.py:276) (4 samples, 0.13%)</title><rect x="76.8852%" y="180" width="0.1311%" height="15" fill="rgb(220,13,41)" fg:x="2345" fg:w="4"/><text x="77.1352%" y="190.50"></text></g><g><title>array_ufunc (pandas/core/arraylike.py:300) (4 samples, 0.13%)</title><rect x="77.1475%" y="180" width="0.1311%" height="15" fill="rgb(249,221,25)" fg:x="2353" fg:w="4"/><text x="77.3975%" y="190.50"></text></g><g><title>array_ufunc (pandas/core/arraylike.py:398) (4 samples, 0.13%)</title><rect x="77.5082%" y="180" width="0.1311%" height="15" fill="rgb(215,208,19)" fg:x="2364" fg:w="4"/><text x="77.7582%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/arraylike.py:398) (4 samples, 0.13%)</title><rect x="77.5082%" y="196" width="0.1311%" height="15" fill="rgb(236,175,2)" fg:x="2364" fg:w="4"/><text x="77.7582%" y="206.50"></text></g><g><title>array_ufunc (pandas/core/arraylike.py:399) (8 samples, 0.26%)</title><rect x="77.6393%" y="180" width="0.2623%" height="15" fill="rgb(241,52,2)" fg:x="2368" fg:w="8"/><text x="77.8893%" y="190.50"></text></g><g><title>__init__ (pandas/core/series.py:487) (5 samples, 0.16%)</title><rect x="78.2951%" y="228" width="0.1639%" height="15" fill="rgb(248,140,14)" fg:x="2388" fg:w="5"/><text x="78.5451%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (16 samples, 0.52%)</title><rect x="78.5574%" y="228" width="0.5246%" height="15" fill="rgb(253,22,42)" fg:x="2396" fg:w="16"/><text x="78.8074%" y="238.50"></text></g><g><title>_get_option (pandas/_config/config.py:146) (4 samples, 0.13%)</title><rect x="79.0820%" y="244" width="0.1311%" height="15" fill="rgb(234,61,47)" fg:x="2412" fg:w="4"/><text x="79.3320%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:586) (5 samples, 0.16%)</title><rect x="79.0820%" y="228" width="0.1639%" height="15" fill="rgb(208,226,15)" fg:x="2412" fg:w="5"/><text x="79.3320%" y="238.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1870) (5 samples, 0.16%)</title><rect x="79.3115%" y="244" width="0.1639%" height="15" fill="rgb(217,221,4)" fg:x="2419" fg:w="5"/><text x="79.5615%" y="254.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1872) (7 samples, 0.23%)</title><rect x="79.5082%" y="244" width="0.2295%" height="15" fill="rgb(212,174,34)" fg:x="2425" fg:w="7"/><text x="79.7582%" y="254.50"></text></g><g><title>new_block (pandas/core/internals/blocks.py:2728) (5 samples, 0.16%)</title><rect x="79.5738%" y="260" width="0.1639%" height="15" fill="rgb(253,83,4)" fg:x="2427" fg:w="5"/><text x="79.8238%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (15 samples, 0.49%)</title><rect x="79.2787%" y="228" width="0.4918%" height="15" fill="rgb(250,195,49)" fg:x="2418" fg:w="15"/><text x="79.5287%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:592) (7 samples, 0.23%)</title><rect x="79.7705%" y="228" width="0.2295%" height="15" fill="rgb(241,192,25)" fg:x="2433" fg:w="7"/><text x="80.0205%" y="238.50"></text></g><g><title>__init__ (pandas/core/generic.py:283) (5 samples, 0.16%)</title><rect x="79.8361%" y="244" width="0.1639%" height="15" fill="rgb(208,124,10)" fg:x="2435" fg:w="5"/><text x="80.0861%" y="254.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (5 samples, 0.16%)</title><rect x="80.0000%" y="244" width="0.1639%" height="15" fill="rgb(222,33,0)" fg:x="2440" fg:w="5"/><text x="80.2500%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (11 samples, 0.36%)</title><rect x="80.0000%" y="228" width="0.3607%" height="15" fill="rgb(234,209,28)" fg:x="2440" fg:w="11"/><text x="80.2500%" y="238.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6320) (6 samples, 0.20%)</title><rect x="80.1639%" y="244" width="0.1967%" height="15" fill="rgb(224,11,23)" fg:x="2445" fg:w="6"/><text x="80.4139%" y="254.50"></text></g><g><title>name (pandas/core/series.py:786) (6 samples, 0.20%)</title><rect x="80.1639%" y="260" width="0.1967%" height="15" fill="rgb(232,99,1)" fg:x="2445" fg:w="6"/><text x="80.4139%" y="270.50"></text></g><g><title>validate_all_hashable (pandas/core/dtypes/common.py:1590) (5 samples, 0.16%)</title><rect x="80.1967%" y="276" width="0.1639%" height="15" fill="rgb(237,95,45)" fg:x="2446" fg:w="5"/><text x="80.4467%" y="286.50"></text></g><g><title>__init__ (pandas/core/series.py:594) (4 samples, 0.13%)</title><rect x="80.3607%" y="228" width="0.1311%" height="15" fill="rgb(208,109,11)" fg:x="2451" fg:w="4"/><text x="80.6107%" y="238.50"></text></g><g><title>_reconstruct (pandas/core/arraylike.py:358) (76 samples, 2.49%)</title><rect x="78.0328%" y="212" width="2.4918%" height="15" fill="rgb(216,190,48)" fg:x="2380" fg:w="76"/><text x="78.2828%" y="222.50">_r..</text></g><g><title>get_cost (evaluation_diff_quantity.py:195) (129 samples, 4.23%)</title><rect x="76.4918%" y="148" width="4.2295%" height="15" fill="rgb(251,171,36)" fg:x="2333" fg:w="129"/><text x="76.7418%" y="158.50">get_c..</text></g><g><title>__array_ufunc__ (pandas/core/generic.py:2171) (124 samples, 4.07%)</title><rect x="76.6557%" y="164" width="4.0656%" height="15" fill="rgb(230,62,22)" fg:x="2338" fg:w="124"/><text x="76.9057%" y="174.50">__ar..</text></g><g><title>array_ufunc (pandas/core/arraylike.py:414) (86 samples, 2.82%)</title><rect x="77.9016%" y="180" width="2.8197%" height="15" fill="rgb(225,114,35)" fg:x="2376" fg:w="86"/><text x="78.1516%" y="190.50">ar..</text></g><g><title>reconstruct (pandas/core/arraylike.py:343) (85 samples, 2.79%)</title><rect x="77.9344%" y="196" width="2.7869%" height="15" fill="rgb(215,118,42)" fg:x="2377" fg:w="85"/><text x="78.1844%" y="206.50">re..</text></g><g><title>_reconstruct (pandas/core/arraylike.py:366) (5 samples, 0.16%)</title><rect x="80.5574%" y="212" width="0.1639%" height="15" fill="rgb(243,119,21)" fg:x="2457" fg:w="5"/><text x="80.8074%" y="222.50"></text></g><g><title>_arith_method (pandas/core/series.py:6134) (6 samples, 0.20%)</title><rect x="81.1148%" y="196" width="0.1967%" height="15" fill="rgb(252,177,53)" fg:x="2474" fg:w="6"/><text x="81.3648%" y="206.50"></text></g><g><title>get_op_result_name (pandas/core/ops/common.py:96) (5 samples, 0.16%)</title><rect x="81.4426%" y="228" width="0.1639%" height="15" fill="rgb(237,209,29)" fg:x="2484" fg:w="5"/><text x="81.6926%" y="238.50"></text></g><g><title>_instancecheck (pandas/core/dtypes/generic.py:44) (4 samples, 0.13%)</title><rect x="81.4754%" y="244" width="0.1311%" height="15" fill="rgb(212,65,23)" fg:x="2485" fg:w="4"/><text x="81.7254%" y="254.50"></text></g><g><title>_arith_method (pandas/core/base.py:1372) (10 samples, 0.33%)</title><rect x="81.4098%" y="212" width="0.3279%" height="15" fill="rgb(230,222,46)" fg:x="2483" fg:w="10"/><text x="81.6598%" y="222.50"></text></g><g><title>get_op_result_name (pandas/core/ops/common.py:97) (4 samples, 0.13%)</title><rect x="81.6066%" y="228" width="0.1311%" height="15" fill="rgb(215,135,32)" fg:x="2489" fg:w="4"/><text x="81.8566%" y="238.50"></text></g><g><title>_arith_method (pandas/core/base.py:1374) (6 samples, 0.20%)</title><rect x="81.7377%" y="212" width="0.1967%" height="15" fill="rgb(246,101,22)" fg:x="2493" fg:w="6"/><text x="81.9877%" y="222.50"></text></g><g><title>_values (pandas/core/series.py:863) (5 samples, 0.16%)</title><rect x="81.7705%" y="228" width="0.1639%" height="15" fill="rgb(206,107,13)" fg:x="2494" fg:w="5"/><text x="82.0205%" y="238.50"></text></g><g><title>internal_values (pandas/core/internals/managers.py:2006) (5 samples, 0.16%)</title><rect x="81.7705%" y="244" width="0.1639%" height="15" fill="rgb(250,100,44)" fg:x="2494" fg:w="5"/><text x="82.0205%" y="254.50"></text></g><g><title>_arith_method (pandas/core/base.py:1375) (4 samples, 0.13%)</title><rect x="81.9344%" y="212" width="0.1311%" height="15" fill="rgb(231,147,38)" fg:x="2499" fg:w="4"/><text x="82.1844%" y="222.50"></text></g><g><title>_arith_method (pandas/core/base.py:1376) (8 samples, 0.26%)</title><rect x="82.0656%" y="212" width="0.2623%" height="15" fill="rgb(229,8,40)" fg:x="2503" fg:w="8"/><text x="82.3156%" y="222.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:111) (8 samples, 0.26%)</title><rect x="82.3607%" y="244" width="0.2623%" height="15" fill="rgb(221,135,30)" fg:x="2512" fg:w="8"/><text x="82.6107%" y="254.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:431) (10 samples, 0.33%)</title><rect x="82.3607%" y="228" width="0.3279%" height="15" fill="rgb(249,193,18)" fg:x="2512" fg:w="10"/><text x="82.6107%" y="238.50"></text></g><g><title>_arith_method (pandas/core/base.py:1381) (15 samples, 0.49%)</title><rect x="82.3607%" y="212" width="0.4918%" height="15" fill="rgb(209,133,39)" fg:x="2512" fg:w="15"/><text x="82.6107%" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:174) (5 samples, 0.16%)</title><rect x="83.0164%" y="260" width="0.1639%" height="15" fill="rgb(232,100,14)" fg:x="2532" fg:w="5"/><text x="83.2664%" y="270.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:111) (11 samples, 0.36%)</title><rect x="82.8852%" y="244" width="0.3607%" height="15" fill="rgb(224,185,1)" fg:x="2528" fg:w="11"/><text x="83.1352%" y="254.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:436) (15 samples, 0.49%)</title><rect x="82.8525%" y="228" width="0.4918%" height="15" fill="rgb(223,139,8)" fg:x="2527" fg:w="15"/><text x="83.1025%" y="238.50"></text></g><g><title>_na_arithmetic_op (pandas/core/ops/array_ops.py:218) (6 samples, 0.20%)</title><rect x="83.5410%" y="244" width="0.1967%" height="15" fill="rgb(232,213,38)" fg:x="2548" fg:w="6"/><text x="83.7910%" y="254.50"></text></g><g><title>evaluate (pandas/core/computation/expressions.py:242) (5 samples, 0.16%)</title><rect x="83.5738%" y="260" width="0.1639%" height="15" fill="rgb(207,94,22)" fg:x="2549" fg:w="5"/><text x="83.8238%" y="270.50"></text></g><g><title>_evaluate_standard (pandas/core/computation/expressions.py:73) (5 samples, 0.16%)</title><rect x="83.5738%" y="276" width="0.1639%" height="15" fill="rgb(219,183,54)" fg:x="2549" fg:w="5"/><text x="83.8238%" y="286.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (29 samples, 0.95%)</title><rect x="82.8525%" y="212" width="0.9508%" height="15" fill="rgb(216,185,54)" fg:x="2527" fg:w="29"/><text x="83.1025%" y="222.50"></text></g><g><title>arithmetic_op (pandas/core/ops/array_ops.py:283) (11 samples, 0.36%)</title><rect x="83.4426%" y="228" width="0.3607%" height="15" fill="rgb(254,217,39)" fg:x="2545" fg:w="11"/><text x="83.6926%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:487) (7 samples, 0.23%)</title><rect x="84.1311%" y="244" width="0.2295%" height="15" fill="rgb(240,178,23)" fg:x="2566" fg:w="7"/><text x="84.3811%" y="254.50"></text></g><g><title>maybe_extract_name (pandas/core/indexes/base.py:7698) (4 samples, 0.13%)</title><rect x="84.2295%" y="260" width="0.1311%" height="15" fill="rgb(218,11,47)" fg:x="2569" fg:w="4"/><text x="84.4795%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:575) (5 samples, 0.16%)</title><rect x="84.4918%" y="244" width="0.1639%" height="15" fill="rgb(218,51,51)" fg:x="2577" fg:w="5"/><text x="84.7418%" y="254.50"></text></g><g><title>require_length_match (pandas/core/common.py:572) (4 samples, 0.13%)</title><rect x="84.5246%" y="260" width="0.1311%" height="15" fill="rgb(238,126,27)" fg:x="2578" fg:w="4"/><text x="84.7746%" y="270.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:625) (4 samples, 0.13%)</title><rect x="84.8197%" y="260" width="0.1311%" height="15" fill="rgb(249,202,22)" fg:x="2587" fg:w="4"/><text x="85.0697%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (13 samples, 0.43%)</title><rect x="84.6557%" y="244" width="0.4262%" height="15" fill="rgb(254,195,49)" fg:x="2582" fg:w="13"/><text x="84.9057%" y="254.50"></text></g><g><title>_get_option (pandas/_config/config.py:146) (6 samples, 0.20%)</title><rect x="85.0820%" y="260" width="0.1967%" height="15" fill="rgb(208,123,14)" fg:x="2595" fg:w="6"/><text x="85.3320%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:586) (10 samples, 0.33%)</title><rect x="85.0820%" y="244" width="0.3279%" height="15" fill="rgb(224,200,8)" fg:x="2595" fg:w="10"/><text x="85.3320%" y="254.50"></text></g><g><title>maybe_coerce_values (pandas/core/internals/blocks.py:2662) (4 samples, 0.13%)</title><rect x="85.6066%" y="276" width="0.1311%" height="15" fill="rgb(217,61,36)" fg:x="2611" fg:w="4"/><text x="85.8566%" y="286.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1870) (6 samples, 0.20%)</title><rect x="85.5738%" y="260" width="0.1967%" height="15" fill="rgb(206,35,45)" fg:x="2610" fg:w="6"/><text x="85.8238%" y="270.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1872) (12 samples, 0.39%)</title><rect x="85.7705%" y="260" width="0.3934%" height="15" fill="rgb(217,65,33)" fg:x="2616" fg:w="12"/><text x="86.0205%" y="270.50"></text></g><g><title>new_block (pandas/core/internals/blocks.py:2728) (8 samples, 0.26%)</title><rect x="85.9016%" y="276" width="0.2623%" height="15" fill="rgb(222,158,48)" fg:x="2620" fg:w="8"/><text x="86.1516%" y="286.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (25 samples, 0.82%)</title><rect x="85.4098%" y="244" width="0.8197%" height="15" fill="rgb(254,2,54)" fg:x="2605" fg:w="25"/><text x="85.6598%" y="254.50"></text></g><g><title>__init__ (pandas/core/generic.py:279) (5 samples, 0.16%)</title><rect x="86.2623%" y="260" width="0.1639%" height="15" fill="rgb(250,143,38)" fg:x="2631" fg:w="5"/><text x="86.5123%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:592) (10 samples, 0.33%)</title><rect x="86.2295%" y="244" width="0.3279%" height="15" fill="rgb(248,25,0)" fg:x="2630" fg:w="10"/><text x="86.4795%" y="254.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (5 samples, 0.16%)</title><rect x="86.5574%" y="260" width="0.1639%" height="15" fill="rgb(206,152,27)" fg:x="2640" fg:w="5"/><text x="86.8074%" y="270.50"></text></g><g><title>name (pandas/core/series.py:782) (4 samples, 0.13%)</title><rect x="86.5902%" y="276" width="0.1311%" height="15" fill="rgb(240,77,30)" fg:x="2641" fg:w="4"/><text x="86.8402%" y="286.50"></text></g><g><title>name (pandas/core/series.py:786) (6 samples, 0.20%)</title><rect x="86.7869%" y="276" width="0.1967%" height="15" fill="rgb(231,5,3)" fg:x="2647" fg:w="6"/><text x="87.0369%" y="286.50"></text></g><g><title>validate_all_hashable (pandas/core/dtypes/common.py:1590) (5 samples, 0.16%)</title><rect x="86.8197%" y="292" width="0.1639%" height="15" fill="rgb(207,226,32)" fg:x="2648" fg:w="5"/><text x="87.0697%" y="302.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (15 samples, 0.49%)</title><rect x="86.5574%" y="244" width="0.4918%" height="15" fill="rgb(222,207,47)" fg:x="2640" fg:w="15"/><text x="86.8074%" y="254.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6320) (8 samples, 0.26%)</title><rect x="86.7869%" y="260" width="0.2623%" height="15" fill="rgb(229,115,45)" fg:x="2647" fg:w="8"/><text x="87.0369%" y="270.50"></text></g><g><title>_validate_set_axis (pandas/core/internals/base.py:89) (4 samples, 0.13%)</title><rect x="87.0820%" y="292" width="0.1311%" height="15" fill="rgb(224,191,6)" fg:x="2656" fg:w="4"/><text x="87.3320%" y="302.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (104 samples, 3.41%)</title><rect x="83.8361%" y="228" width="3.4098%" height="15" fill="rgb(230,227,24)" fg:x="2557" fg:w="104"/><text x="84.0861%" y="238.50">_co..</text></g><g><title>__init__ (pandas/core/series.py:594) (6 samples, 0.20%)</title><rect x="87.0492%" y="244" width="0.1967%" height="15" fill="rgb(228,80,19)" fg:x="2655" fg:w="6"/><text x="87.2992%" y="254.50"></text></g><g><title>_set_axis (pandas/core/generic.py:814) (5 samples, 0.16%)</title><rect x="87.0820%" y="260" width="0.1639%" height="15" fill="rgb(247,229,0)" fg:x="2656" fg:w="5"/><text x="87.3320%" y="270.50"></text></g><g><title>set_axis (pandas/core/internals/managers.py:238) (5 samples, 0.16%)</title><rect x="87.0820%" y="276" width="0.1639%" height="15" fill="rgb(237,194,15)" fg:x="2656" fg:w="5"/><text x="87.3320%" y="286.50"></text></g><g><title>__finalize__ (pandas/core/generic.py:6262) (7 samples, 0.23%)</title><rect x="87.4426%" y="244" width="0.2295%" height="15" fill="rgb(219,203,20)" fg:x="2667" fg:w="7"/><text x="87.6926%" y="254.50"></text></g><g><title>_construct_result (pandas/core/series.py:6232) (17 samples, 0.56%)</title><rect x="87.2459%" y="228" width="0.5574%" height="15" fill="rgb(234,128,8)" fg:x="2661" fg:w="17"/><text x="87.4959%" y="238.50"></text></g><g><title>__mul__ (pandas/core/arraylike.py:202) (215 samples, 7.05%)</title><rect x="81.0492%" y="180" width="7.0492%" height="15" fill="rgb(248,202,8)" fg:x="2472" fg:w="215"/><text x="81.2992%" y="190.50">__mul__ (..</text></g><g><title>_arith_method (pandas/core/series.py:6135) (207 samples, 6.79%)</title><rect x="81.3115%" y="196" width="6.7869%" height="15" fill="rgb(206,104,37)" fg:x="2480" fg:w="207"/><text x="81.5615%" y="206.50">_arith_me..</text></g><g><title>_arith_method (pandas/core/base.py:1384) (131 samples, 4.30%)</title><rect x="83.8033%" y="212" width="4.2951%" height="15" fill="rgb(223,8,27)" fg:x="2556" fg:w="131"/><text x="84.0533%" y="222.50">_arit..</text></g><g><title>_construct_result (pandas/core/series.py:6236) (9 samples, 0.30%)</title><rect x="87.8033%" y="228" width="0.2951%" height="15" fill="rgb(216,217,28)" fg:x="2678" fg:w="9"/><text x="88.0533%" y="238.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6313) (6 samples, 0.20%)</title><rect x="87.9016%" y="244" width="0.1967%" height="15" fill="rgb(249,199,1)" fg:x="2681" fg:w="6"/><text x="88.1516%" y="254.50"></text></g><g><title>_arith_method (pandas/core/base.py:1376) (4 samples, 0.13%)</title><rect x="88.3279%" y="212" width="0.1311%" height="15" fill="rgb(240,85,17)" fg:x="2694" fg:w="4"/><text x="88.5779%" y="222.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:436) (4 samples, 0.13%)</title><rect x="88.6557%" y="228" width="0.1311%" height="15" fill="rgb(206,108,45)" fg:x="2704" fg:w="4"/><text x="88.9057%" y="238.50"></text></g><g><title>_na_arithmetic_op (pandas/core/ops/array_ops.py:218) (6 samples, 0.20%)</title><rect x="88.9180%" y="244" width="0.1967%" height="15" fill="rgb(245,210,41)" fg:x="2712" fg:w="6"/><text x="89.1680%" y="254.50"></text></g><g><title>evaluate (pandas/core/computation/expressions.py:242) (5 samples, 0.16%)</title><rect x="88.9508%" y="260" width="0.1639%" height="15" fill="rgb(206,13,37)" fg:x="2713" fg:w="5"/><text x="89.2008%" y="270.50"></text></g><g><title>_evaluate_standard (pandas/core/computation/expressions.py:73) (4 samples, 0.13%)</title><rect x="88.9836%" y="276" width="0.1311%" height="15" fill="rgb(250,61,18)" fg:x="2714" fg:w="4"/><text x="89.2336%" y="286.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (17 samples, 0.56%)</title><rect x="88.6230%" y="212" width="0.5574%" height="15" fill="rgb(235,172,48)" fg:x="2703" fg:w="17"/><text x="88.8730%" y="222.50"></text></g><g><title>arithmetic_op (pandas/core/ops/array_ops.py:283) (8 samples, 0.26%)</title><rect x="88.9180%" y="228" width="0.2623%" height="15" fill="rgb(249,201,17)" fg:x="2712" fg:w="8"/><text x="89.1680%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:575) (4 samples, 0.13%)</title><rect x="89.4426%" y="244" width="0.1311%" height="15" fill="rgb(219,208,6)" fg:x="2728" fg:w="4"/><text x="89.6926%" y="254.50"></text></g><g><title>require_length_match (pandas/core/common.py:572) (4 samples, 0.13%)</title><rect x="89.4426%" y="260" width="0.1311%" height="15" fill="rgb(248,31,23)" fg:x="2728" fg:w="4"/><text x="89.6926%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (5 samples, 0.16%)</title><rect x="89.5738%" y="244" width="0.1639%" height="15" fill="rgb(245,15,42)" fg:x="2732" fg:w="5"/><text x="89.8238%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (4 samples, 0.13%)</title><rect x="89.8033%" y="244" width="0.1311%" height="15" fill="rgb(222,217,39)" fg:x="2739" fg:w="4"/><text x="90.0533%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (7 samples, 0.23%)</title><rect x="89.9672%" y="244" width="0.2295%" height="15" fill="rgb(210,219,27)" fg:x="2744" fg:w="7"/><text x="90.2172%" y="254.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6320) (5 samples, 0.16%)</title><rect x="90.0328%" y="260" width="0.1639%" height="15" fill="rgb(252,166,36)" fg:x="2746" fg:w="5"/><text x="90.2828%" y="270.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (31 samples, 1.02%)</title><rect x="89.2459%" y="228" width="1.0164%" height="15" fill="rgb(245,132,34)" fg:x="2722" fg:w="31"/><text x="89.4959%" y="238.50"></text></g><g><title>get_cost (evaluation_diff_quantity.py:196) (294 samples, 9.64%)</title><rect x="80.7213%" y="148" width="9.6393%" height="15" fill="rgb(236,54,3)" fg:x="2462" fg:w="294"/><text x="80.9713%" y="158.50">get_cost (eval..</text></g><g><title>new_method (pandas/core/ops/common.py:76) (285 samples, 9.34%)</title><rect x="81.0164%" y="164" width="9.3443%" height="15" fill="rgb(241,173,43)" fg:x="2471" fg:w="285"/><text x="81.2664%" y="174.50">new_method (p..</text></g><g><title>__radd__ (pandas/core/arraylike.py:190) (69 samples, 2.26%)</title><rect x="88.0984%" y="180" width="2.2623%" height="15" fill="rgb(215,190,9)" fg:x="2687" fg:w="69"/><text x="88.3484%" y="190.50">_..</text></g><g><title>_arith_method (pandas/core/series.py:6135) (67 samples, 2.20%)</title><rect x="88.1639%" y="196" width="2.1967%" height="15" fill="rgb(242,101,16)" fg:x="2689" fg:w="67"/><text x="88.4139%" y="206.50">_..</text></g><g><title>_arith_method (pandas/core/base.py:1384) (36 samples, 1.18%)</title><rect x="89.1803%" y="212" width="1.1803%" height="15" fill="rgb(223,190,21)" fg:x="2720" fg:w="36"/><text x="89.4303%" y="222.50"></text></g><g><title>_ixs (pandas/core/frame.py:4010) (8 samples, 0.26%)</title><rect x="90.8852%" y="196" width="0.2623%" height="15" fill="rgb(215,228,25)" fg:x="2772" fg:w="8"/><text x="91.1352%" y="206.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4616) (4 samples, 0.13%)</title><rect x="91.1803%" y="212" width="0.1311%" height="15" fill="rgb(225,36,22)" fg:x="2781" fg:w="4"/><text x="91.4303%" y="222.50"></text></g><g><title>_ixs (pandas/core/frame.py:4011) (10 samples, 0.33%)</title><rect x="91.1475%" y="196" width="0.3279%" height="15" fill="rgb(251,106,46)" fg:x="2780" fg:w="10"/><text x="91.3975%" y="206.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4639) (28 samples, 0.92%)</title><rect x="90.7213%" y="180" width="0.9180%" height="15" fill="rgb(208,90,1)" fg:x="2767" fg:w="28"/><text x="90.9713%" y="190.50"></text></g><g><title>_ixs (pandas/core/frame.py:4014) (5 samples, 0.16%)</title><rect x="91.4754%" y="196" width="0.1639%" height="15" fill="rgb(243,10,4)" fg:x="2790" fg:w="5"/><text x="91.7254%" y="206.50"></text></g><g><title>_set_as_cached (pandas/core/series.py:1478) (5 samples, 0.16%)</title><rect x="91.4754%" y="212" width="0.1639%" height="15" fill="rgb(212,137,27)" fg:x="2790" fg:w="5"/><text x="91.7254%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (33 samples, 1.08%)</title><rect x="90.5902%" y="164" width="1.0820%" height="15" fill="rgb(231,220,49)" fg:x="2763" fg:w="33"/><text x="90.8402%" y="174.50"></text></g><g><title>_arith_method (pandas/core/base.py:1375) (4 samples, 0.13%)</title><rect x="91.8361%" y="212" width="0.1311%" height="15" fill="rgb(237,96,20)" fg:x="2801" fg:w="4"/><text x="92.0861%" y="222.50"></text></g><g><title>_arith_method (pandas/core/base.py:1381) (5 samples, 0.16%)</title><rect x="92.0984%" y="212" width="0.1639%" height="15" fill="rgb(239,229,30)" fg:x="2809" fg:w="5"/><text x="92.3484%" y="222.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:436) (5 samples, 0.16%)</title><rect x="92.2623%" y="228" width="0.1639%" height="15" fill="rgb(219,65,33)" fg:x="2814" fg:w="5"/><text x="92.5123%" y="238.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (13 samples, 0.43%)</title><rect x="92.2623%" y="212" width="0.4262%" height="15" fill="rgb(243,134,7)" fg:x="2814" fg:w="13"/><text x="92.5123%" y="222.50"></text></g><g><title>arithmetic_op (pandas/core/ops/array_ops.py:283) (6 samples, 0.20%)</title><rect x="92.4918%" y="228" width="0.1967%" height="15" fill="rgb(216,177,54)" fg:x="2821" fg:w="6"/><text x="92.7418%" y="238.50"></text></g><g><title>_na_arithmetic_op (pandas/core/ops/array_ops.py:218) (4 samples, 0.13%)</title><rect x="92.5574%" y="244" width="0.1311%" height="15" fill="rgb(211,160,20)" fg:x="2823" fg:w="4"/><text x="92.8074%" y="254.50"></text></g><g><title>evaluate (pandas/core/computation/expressions.py:242) (4 samples, 0.13%)</title><rect x="92.5574%" y="260" width="0.1311%" height="15" fill="rgb(239,85,39)" fg:x="2823" fg:w="4"/><text x="92.8074%" y="270.50"></text></g><g><title>_evaluate_standard (pandas/core/computation/expressions.py:73) (4 samples, 0.13%)</title><rect x="92.5574%" y="276" width="0.1311%" height="15" fill="rgb(232,125,22)" fg:x="2823" fg:w="4"/><text x="92.8074%" y="286.50"></text></g><g><title>__init__ (pandas/core/series.py:493) (7 samples, 0.23%)</title><rect x="92.8852%" y="244" width="0.2295%" height="15" fill="rgb(244,57,34)" fg:x="2833" fg:w="7"/><text x="93.1352%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (10 samples, 0.33%)</title><rect x="93.1148%" y="244" width="0.3279%" height="15" fill="rgb(214,203,32)" fg:x="2840" fg:w="10"/><text x="93.3648%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:586) (5 samples, 0.16%)</title><rect x="93.4426%" y="244" width="0.1639%" height="15" fill="rgb(207,58,43)" fg:x="2850" fg:w="5"/><text x="93.6926%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:592) (4 samples, 0.13%)</title><rect x="93.7049%" y="244" width="0.1311%" height="15" fill="rgb(215,193,15)" fg:x="2858" fg:w="4"/><text x="93.9549%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (4 samples, 0.13%)</title><rect x="93.8361%" y="244" width="0.1311%" height="15" fill="rgb(232,15,44)" fg:x="2862" fg:w="4"/><text x="94.0861%" y="254.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (41 samples, 1.34%)</title><rect x="92.7213%" y="228" width="1.3443%" height="15" fill="rgb(212,3,48)" fg:x="2828" fg:w="41"/><text x="92.9713%" y="238.50"></text></g><g><title>get_cost (evaluation_diff_quantity.py:199) (117 samples, 3.84%)</title><rect x="90.3607%" y="148" width="3.8361%" height="15" fill="rgb(218,128,7)" fg:x="2756" fg:w="117"/><text x="90.6107%" y="158.50">get_..</text></g><g><title>new_method (pandas/core/ops/common.py:76) (77 samples, 2.52%)</title><rect x="91.6721%" y="164" width="2.5246%" height="15" fill="rgb(226,216,39)" fg:x="2796" fg:w="77"/><text x="91.9221%" y="174.50">ne..</text></g><g><title>__add__ (pandas/core/arraylike.py:186) (77 samples, 2.52%)</title><rect x="91.6721%" y="180" width="2.5246%" height="15" fill="rgb(243,47,51)" fg:x="2796" fg:w="77"/><text x="91.9221%" y="190.50">__..</text></g><g><title>_arith_method (pandas/core/series.py:6135) (77 samples, 2.52%)</title><rect x="91.6721%" y="196" width="2.5246%" height="15" fill="rgb(241,183,40)" fg:x="2796" fg:w="77"/><text x="91.9221%" y="206.50">_a..</text></g><g><title>_arith_method (pandas/core/base.py:1384) (46 samples, 1.51%)</title><rect x="92.6885%" y="212" width="1.5082%" height="15" fill="rgb(231,217,32)" fg:x="2827" fg:w="46"/><text x="92.9385%" y="222.50"></text></g><g><title>_get_values (pandas/core/nanops.py:294) (10 samples, 0.33%)</title><rect x="94.5246%" y="292" width="0.3279%" height="15" fill="rgb(229,61,38)" fg:x="2883" fg:w="10"/><text x="94.7746%" y="302.50"></text></g><g><title>_maybe_get_mask (pandas/core/nanops.py:248) (10 samples, 0.33%)</title><rect x="94.5246%" y="308" width="0.3279%" height="15" fill="rgb(225,210,5)" fg:x="2883" fg:w="10"/><text x="94.7746%" y="318.50"></text></g><g><title>isna (pandas/core/dtypes/missing.py:178) (10 samples, 0.33%)</title><rect x="94.5246%" y="324" width="0.3279%" height="15" fill="rgb(231,79,45)" fg:x="2883" fg:w="10"/><text x="94.7746%" y="334.50"></text></g><g><title>_isna (pandas/core/dtypes/missing.py:207) (9 samples, 0.30%)</title><rect x="94.5574%" y="340" width="0.2951%" height="15" fill="rgb(224,100,7)" fg:x="2884" fg:w="9"/><text x="94.8074%" y="350.50"></text></g><g><title>_isna_array (pandas/core/dtypes/missing.py:292) (8 samples, 0.26%)</title><rect x="94.5902%" y="356" width="0.2623%" height="15" fill="rgb(241,198,18)" fg:x="2885" fg:w="8"/><text x="94.8402%" y="366.50"></text></g><g><title>_isna_string_dtype (pandas/core/dtypes/missing.py:313) (6 samples, 0.20%)</title><rect x="94.6557%" y="372" width="0.1967%" height="15" fill="rgb(252,97,53)" fg:x="2887" fg:w="6"/><text x="94.9057%" y="382.50"></text></g><g><title>nansum (pandas/core/nanops.py:639) (12 samples, 0.39%)</title><rect x="94.5246%" y="276" width="0.3934%" height="15" fill="rgb(220,88,7)" fg:x="2883" fg:w="12"/><text x="94.7746%" y="286.50"></text></g><g><title>nansum (pandas/core/nanops.py:646) (4 samples, 0.13%)</title><rect x="94.9508%" y="276" width="0.1311%" height="15" fill="rgb(213,176,14)" fg:x="2896" fg:w="4"/><text x="95.2008%" y="286.50"></text></g><g><title>_sum (numpy/core/_methods.py:49) (4 samples, 0.13%)</title><rect x="94.9508%" y="292" width="0.1311%" height="15" fill="rgb(246,73,7)" fg:x="2896" fg:w="4"/><text x="95.2008%" y="302.50"></text></g><g><title>sum (pandas/core/generic.py:12506) (29 samples, 0.95%)</title><rect x="94.1967%" y="180" width="0.9508%" height="15" fill="rgb(245,64,36)" fg:x="2873" fg:w="29"/><text x="94.4467%" y="190.50"></text></g><g><title>_min_count_stat_function (pandas/core/generic.py:12489) (29 samples, 0.95%)</title><rect x="94.1967%" y="196" width="0.9508%" height="15" fill="rgb(245,80,10)" fg:x="2873" fg:w="29"/><text x="94.4467%" y="206.50"></text></g><g><title>_reduce (pandas/core/series.py:6457) (27 samples, 0.89%)</title><rect x="94.2623%" y="212" width="0.8852%" height="15" fill="rgb(232,107,50)" fg:x="2875" fg:w="27"/><text x="94.5123%" y="222.50"></text></g><g><title>_f (pandas/core/nanops.py:85) (24 samples, 0.79%)</title><rect x="94.3607%" y="228" width="0.7869%" height="15" fill="rgb(253,3,0)" fg:x="2878" fg:w="24"/><text x="94.6107%" y="238.50"></text></g><g><title>new_func (pandas/core/nanops.py:404) (24 samples, 0.79%)</title><rect x="94.3607%" y="244" width="0.7869%" height="15" fill="rgb(212,99,53)" fg:x="2878" fg:w="24"/><text x="94.6107%" y="254.50"></text></g><g><title>newfunc (pandas/core/nanops.py:477) (21 samples, 0.69%)</title><rect x="94.4590%" y="260" width="0.6885%" height="15" fill="rgb(249,111,54)" fg:x="2881" fg:w="21"/><text x="94.7090%" y="270.50"></text></g><g><title>get_profit (evaluation_diff_quantity.py:207) (744 samples, 24.39%)</title><rect x="70.7869%" y="132" width="24.3934%" height="15" fill="rgb(249,55,30)" fg:x="2159" fg:w="744"/><text x="71.0369%" y="142.50">get_profit (evaluation_diff_quantity.py..</text></g><g><title>get_cost (evaluation_diff_quantity.py:201) (30 samples, 0.98%)</title><rect x="94.1967%" y="148" width="0.9836%" height="15" fill="rgb(237,47,42)" fg:x="2873" fg:w="30"/><text x="94.4467%" y="158.50"></text></g><g><title>sum (pandas/core/series.py:6528) (30 samples, 0.98%)</title><rect x="94.1967%" y="164" width="0.9836%" height="15" fill="rgb(211,20,18)" fg:x="2873" fg:w="30"/><text x="94.4467%" y="174.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:430) (970 samples, 31.80%)</title><rect x="63.4098%" y="116" width="31.8033%" height="15" fill="rgb(231,203,46)" fg:x="1934" fg:w="970"/><text x="63.6598%" y="126.50">SA_evaluation_function (evaluation_diff_quantity.py..</text></g><g><title>__setitem__ (pandas/core/indexing.py:2578) (5 samples, 0.16%)</title><rect x="95.2459%" y="132" width="0.1639%" height="15" fill="rgb(237,142,3)" fg:x="2905" fg:w="5"/><text x="95.4959%" y="142.50"></text></g><g><title>_axes_are_unique (pandas/core/indexing.py:2566) (5 samples, 0.16%)</title><rect x="95.2459%" y="148" width="0.1639%" height="15" fill="rgb(241,107,1)" fg:x="2905" fg:w="5"/><text x="95.4959%" y="158.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2531) (7 samples, 0.23%)</title><rect x="95.4426%" y="148" width="0.2295%" height="15" fill="rgb(229,83,13)" fg:x="2911" fg:w="7"/><text x="95.6926%" y="158.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/indexing.py:2531) (4 samples, 0.13%)</title><rect x="95.5410%" y="164" width="0.1311%" height="15" fill="rgb(241,91,40)" fg:x="2914" fg:w="4"/><text x="95.7910%" y="174.50"></text></g><g><title>_set_value (pandas/core/frame.py:4561) (5 samples, 0.16%)</title><rect x="95.8033%" y="164" width="0.1639%" height="15" fill="rgb(225,3,45)" fg:x="2922" fg:w="5"/><text x="96.0533%" y="174.50"></text></g><g><title>iget (pandas/core/internals/managers.py:1016) (6 samples, 0.20%)</title><rect x="96.0656%" y="196" width="0.1967%" height="15" fill="rgb(244,223,14)" fg:x="2930" fg:w="6"/><text x="96.3156%" y="206.50"></text></g><g><title>iget (pandas/core/internals/managers.py:1017) (4 samples, 0.13%)</title><rect x="96.2623%" y="196" width="0.1311%" height="15" fill="rgb(224,124,37)" fg:x="2936" fg:w="4"/><text x="96.5123%" y="206.50"></text></g><g><title>iget (pandas/core/internals/managers.py:1020) (4 samples, 0.13%)</title><rect x="96.3934%" y="196" width="0.1311%" height="15" fill="rgb(251,171,30)" fg:x="2940" fg:w="4"/><text x="96.6434%" y="206.50"></text></g><g><title>column_setitem (pandas/core/internals/managers.py:1333) (18 samples, 0.59%)</title><rect x="96.0656%" y="180" width="0.5902%" height="15" fill="rgb(236,46,54)" fg:x="2930" fg:w="18"/><text x="96.3156%" y="190.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2586) (47 samples, 1.54%)</title><rect x="95.4098%" y="132" width="1.5410%" height="15" fill="rgb(245,213,5)" fg:x="2910" fg:w="47"/><text x="95.6598%" y="142.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2542) (36 samples, 1.18%)</title><rect x="95.7705%" y="148" width="1.1803%" height="15" fill="rgb(230,144,27)" fg:x="2921" fg:w="36"/><text x="96.0205%" y="158.50"></text></g><g><title>_set_value (pandas/core/frame.py:4563) (28 samples, 0.92%)</title><rect x="96.0328%" y="164" width="0.9180%" height="15" fill="rgb(220,86,6)" fg:x="2929" fg:w="28"/><text x="96.2828%" y="174.50"></text></g><g><title>column_setitem (pandas/core/internals/managers.py:1335) (9 samples, 0.30%)</title><rect x="96.6557%" y="180" width="0.2951%" height="15" fill="rgb(240,20,13)" fg:x="2948" fg:w="9"/><text x="96.9057%" y="190.50"></text></g><g><title>setitem_inplace (pandas/core/internals/managers.py:2044) (7 samples, 0.23%)</title><rect x="96.7213%" y="196" width="0.2295%" height="15" fill="rgb(217,89,34)" fg:x="2950" fg:w="7"/><text x="96.9713%" y="206.50"></text></g><g><title>setitem_inplace (pandas/core/internals/base.py:357) (7 samples, 0.23%)</title><rect x="96.7213%" y="212" width="0.2295%" height="15" fill="rgb(229,13,5)" fg:x="2950" fg:w="7"/><text x="96.9713%" y="222.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:433) (54 samples, 1.77%)</title><rect x="95.2131%" y="116" width="1.7705%" height="15" fill="rgb(244,67,35)" fg:x="2904" fg:w="54"/><text x="95.4631%" y="126.50">S..</text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:434) (11 samples, 0.36%)</title><rect x="96.9836%" y="116" width="0.3607%" height="15" fill="rgb(221,40,2)" fg:x="2958" fg:w="11"/><text x="97.2336%" y="126.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2586) (9 samples, 0.30%)</title><rect x="97.0492%" y="132" width="0.2951%" height="15" fill="rgb(237,157,21)" fg:x="2960" fg:w="9"/><text x="97.2992%" y="142.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2542) (6 samples, 0.20%)</title><rect x="97.1475%" y="148" width="0.1967%" height="15" fill="rgb(222,94,11)" fg:x="2963" fg:w="6"/><text x="97.3975%" y="158.50"></text></g><g><title>_set_value (pandas/core/frame.py:4563) (5 samples, 0.16%)</title><rect x="97.1803%" y="164" width="0.1639%" height="15" fill="rgb(249,113,6)" fg:x="2964" fg:w="5"/><text x="97.4303%" y="174.50"></text></g><g><title>column_setitem (pandas/core/internals/managers.py:1333) (4 samples, 0.13%)</title><rect x="97.4754%" y="180" width="0.1311%" height="15" fill="rgb(238,137,36)" fg:x="2973" fg:w="4"/><text x="97.7254%" y="190.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:435) (15 samples, 0.49%)</title><rect x="97.3443%" y="116" width="0.4918%" height="15" fill="rgb(210,102,26)" fg:x="2969" fg:w="15"/><text x="97.5943%" y="126.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2586) (14 samples, 0.46%)</title><rect x="97.3770%" y="132" width="0.4590%" height="15" fill="rgb(218,30,30)" fg:x="2970" fg:w="14"/><text x="97.6270%" y="142.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2542) (13 samples, 0.43%)</title><rect x="97.4098%" y="148" width="0.4262%" height="15" fill="rgb(214,67,26)" fg:x="2971" fg:w="13"/><text x="97.6598%" y="158.50"></text></g><g><title>_set_value (pandas/core/frame.py:4563) (11 samples, 0.36%)</title><rect x="97.4754%" y="164" width="0.3607%" height="15" fill="rgb(251,9,53)" fg:x="2973" fg:w="11"/><text x="97.7254%" y="174.50"></text></g><g><title>column_setitem (pandas/core/internals/managers.py:1335) (7 samples, 0.23%)</title><rect x="97.6066%" y="180" width="0.2295%" height="15" fill="rgb(228,204,25)" fg:x="2977" fg:w="7"/><text x="97.8566%" y="190.50"></text></g><g><title>setitem_inplace (pandas/core/internals/managers.py:2044) (5 samples, 0.16%)</title><rect x="97.6721%" y="196" width="0.1639%" height="15" fill="rgb(207,153,8)" fg:x="2979" fg:w="5"/><text x="97.9221%" y="206.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:439) (5 samples, 0.16%)</title><rect x="97.8361%" y="116" width="0.1639%" height="15" fill="rgb(242,9,16)" fg:x="2984" fg:w="5"/><text x="98.0861%" y="126.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:440) (5 samples, 0.16%)</title><rect x="98.0000%" y="116" width="0.1639%" height="15" fill="rgb(217,211,10)" fg:x="2989" fg:w="5"/><text x="98.2500%" y="126.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:441) (4 samples, 0.13%)</title><rect x="98.1639%" y="116" width="0.1311%" height="15" fill="rgb(219,228,52)" fg:x="2994" fg:w="4"/><text x="98.4139%" y="126.50"></text></g><g><title>_f (pandas/core/nanops.py:79) (4 samples, 0.13%)</title><rect x="98.7213%" y="196" width="0.1311%" height="15" fill="rgb(231,92,29)" fg:x="3011" fg:w="4"/><text x="98.9713%" y="206.50"></text></g><g><title>_get_values (pandas/core/nanops.py:294) (5 samples, 0.16%)</title><rect x="98.9180%" y="260" width="0.1639%" height="15" fill="rgb(232,8,23)" fg:x="3017" fg:w="5"/><text x="99.1680%" y="270.50"></text></g><g><title>_maybe_get_mask (pandas/core/nanops.py:248) (5 samples, 0.16%)</title><rect x="98.9180%" y="276" width="0.1639%" height="15" fill="rgb(216,211,34)" fg:x="3017" fg:w="5"/><text x="99.1680%" y="286.50"></text></g><g><title>isna (pandas/core/dtypes/missing.py:178) (5 samples, 0.16%)</title><rect x="98.9180%" y="292" width="0.1639%" height="15" fill="rgb(236,151,0)" fg:x="3017" fg:w="5"/><text x="99.1680%" y="302.50"></text></g><g><title>_isna (pandas/core/dtypes/missing.py:207) (5 samples, 0.16%)</title><rect x="98.9180%" y="308" width="0.1639%" height="15" fill="rgb(209,168,3)" fg:x="3017" fg:w="5"/><text x="99.1680%" y="318.50"></text></g><g><title>_isna_array (pandas/core/dtypes/missing.py:292) (4 samples, 0.13%)</title><rect x="98.9508%" y="324" width="0.1311%" height="15" fill="rgb(208,129,28)" fg:x="3018" fg:w="4"/><text x="99.2008%" y="334.50"></text></g><g><title>_isna_string_dtype (pandas/core/dtypes/missing.py:313) (4 samples, 0.13%)</title><rect x="98.9508%" y="340" width="0.1311%" height="15" fill="rgb(229,78,22)" fg:x="3018" fg:w="4"/><text x="99.2008%" y="350.50"></text></g><g><title>nansum (pandas/core/nanops.py:639) (6 samples, 0.20%)</title><rect x="98.9180%" y="244" width="0.1967%" height="15" fill="rgb(228,187,13)" fg:x="3017" fg:w="6"/><text x="99.1680%" y="254.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:442) (30 samples, 0.98%)</title><rect x="98.2951%" y="116" width="0.9836%" height="15" fill="rgb(240,119,24)" fg:x="2998" fg:w="30"/><text x="98.5451%" y="126.50"></text></g><g><title>sum (pandas/core/series.py:6528) (24 samples, 0.79%)</title><rect x="98.4918%" y="132" width="0.7869%" height="15" fill="rgb(209,194,42)" fg:x="3004" fg:w="24"/><text x="98.7418%" y="142.50"></text></g><g><title>sum (pandas/core/generic.py:12506) (22 samples, 0.72%)</title><rect x="98.5574%" y="148" width="0.7213%" height="15" fill="rgb(247,200,46)" fg:x="3006" fg:w="22"/><text x="98.8074%" y="158.50"></text></g><g><title>_min_count_stat_function (pandas/core/generic.py:12489) (19 samples, 0.62%)</title><rect x="98.6557%" y="164" width="0.6230%" height="15" fill="rgb(218,76,16)" fg:x="3009" fg:w="19"/><text x="98.9057%" y="174.50"></text></g><g><title>_reduce (pandas/core/series.py:6457) (18 samples, 0.59%)</title><rect x="98.6885%" y="180" width="0.5902%" height="15" fill="rgb(225,21,48)" fg:x="3010" fg:w="18"/><text x="98.9385%" y="190.50"></text></g><g><title>_f (pandas/core/nanops.py:85) (13 samples, 0.43%)</title><rect x="98.8525%" y="196" width="0.4262%" height="15" fill="rgb(239,223,50)" fg:x="3015" fg:w="13"/><text x="99.1025%" y="206.50"></text></g><g><title>new_func (pandas/core/nanops.py:404) (13 samples, 0.43%)</title><rect x="98.8525%" y="212" width="0.4262%" height="15" fill="rgb(244,45,21)" fg:x="3015" fg:w="13"/><text x="99.1025%" y="222.50"></text></g><g><title>newfunc (pandas/core/nanops.py:477) (12 samples, 0.39%)</title><rect x="98.8852%" y="228" width="0.3934%" height="15" fill="rgb(232,33,43)" fg:x="3016" fg:w="12"/><text x="99.1352%" y="238.50"></text></g><g><title>run (SA_quantity_new.py:513) (2,964 samples, 97.18%)</title><rect x="2.2295%" y="100" width="97.1803%" height="15" fill="rgb(209,8,3)" fg:x="68" fg:w="2964"/><text x="2.4795%" y="110.50">run (SA_quantity_new.py:513)</text></g><g><title>run (SA_quantity_new.py:524) (9 samples, 0.30%)</title><rect x="99.4754%" y="100" width="0.2951%" height="15" fill="rgb(214,25,53)" fg:x="3034" fg:w="9"/><text x="99.7254%" y="110.50"></text></g><g><title>update_slot (SA_quantity_new.py:552) (9 samples, 0.30%)</title><rect x="99.4754%" y="116" width="0.2951%" height="15" fill="rgb(254,186,54)" fg:x="3034" fg:w="9"/><text x="99.7254%" y="126.50"></text></g><g><title>update_slots (SA_quantity_new.py:99) (7 samples, 0.23%)</title><rect x="99.5410%" y="132" width="0.2295%" height="15" fill="rgb(208,174,49)" fg:x="3036" fg:w="7"/><text x="99.7910%" y="142.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2586) (5 samples, 0.16%)</title><rect x="99.6066%" y="148" width="0.1639%" height="15" fill="rgb(233,191,51)" fg:x="3038" fg:w="5"/><text x="99.8566%" y="158.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2542) (5 samples, 0.16%)</title><rect x="99.6066%" y="164" width="0.1639%" height="15" fill="rgb(222,134,10)" fg:x="3038" fg:w="5"/><text x="99.8566%" y="174.50"></text></g><g><title>run (SA_quantity_new.py:536) (6 samples, 0.20%)</title><rect x="99.7705%" y="100" width="0.1967%" height="15" fill="rgb(230,226,20)" fg:x="3043" fg:w="6"/><text x="100.0205%" y="110.50"></text></g><g><title>update_operation_probabilities (SA_quantity_new.py:203) (6 samples, 0.20%)</title><rect x="99.7705%" y="116" width="0.1967%" height="15" fill="rgb(251,111,25)" fg:x="3043" fg:w="6"/><text x="100.0205%" y="126.50"></text></g><g><title>_print (SA_quantity_new.py:183) (6 samples, 0.20%)</title><rect x="99.7705%" y="132" width="0.1967%" height="15" fill="rgb(224,40,46)" fg:x="3043" fg:w="6"/><text x="100.0205%" y="142.50"></text></g><g><title>debug (logging/__init__.py:1434) (6 samples, 0.20%)</title><rect x="99.7705%" y="148" width="0.1967%" height="15" fill="rgb(236,108,47)" fg:x="3043" fg:w="6"/><text x="100.0205%" y="158.50"></text></g><g><title>_log (logging/__init__.py:1589) (5 samples, 0.16%)</title><rect x="99.8033%" y="164" width="0.1639%" height="15" fill="rgb(234,93,0)" fg:x="3044" fg:w="5"/><text x="100.0533%" y="174.50"></text></g><g><title>handle (logging/__init__.py:1599) (5 samples, 0.16%)</title><rect x="99.8033%" y="180" width="0.1639%" height="15" fill="rgb(224,213,32)" fg:x="3044" fg:w="5"/><text x="100.0533%" y="190.50"></text></g><g><title>callHandlers (logging/__init__.py:1661) (5 samples, 0.16%)</title><rect x="99.8033%" y="196" width="0.1639%" height="15" fill="rgb(251,11,48)" fg:x="3044" fg:w="5"/><text x="100.0533%" y="206.50"></text></g><g><title>handle (logging/__init__.py:952) (5 samples, 0.16%)</title><rect x="99.8033%" y="212" width="0.1639%" height="15" fill="rgb(236,173,5)" fg:x="3044" fg:w="5"/><text x="100.0533%" y="222.50"></text></g><g><title>emit (logging/__init__.py:1187) (5 samples, 0.16%)</title><rect x="99.8033%" y="228" width="0.1639%" height="15" fill="rgb(230,95,12)" fg:x="3044" fg:w="5"/><text x="100.0533%" y="238.50"></text></g><g><title>emit (logging/__init__.py:1083) (5 samples, 0.16%)</title><rect x="99.8033%" y="244" width="0.1639%" height="15" fill="rgb(232,209,1)" fg:x="3044" fg:w="5"/><text x="100.0533%" y="254.50"></text></g><g><title>format (logging/__init__.py:927) (5 samples, 0.16%)</title><rect x="99.8033%" y="260" width="0.1639%" height="15" fill="rgb(232,6,1)" fg:x="3044" fg:w="5"/><text x="100.0533%" y="270.50"></text></g><g><title>all (3,050 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(210,224,50)" fg:x="0" fg:w="3050"/><text x="0.2500%" y="62.50"></text></g><g><title>&lt;module&gt; (SA_quantity_new.py:609) (3,012 samples, 98.75%)</title><rect x="1.2459%" y="68" width="98.7541%" height="15" fill="rgb(228,127,35)" fg:x="38" fg:w="3012"/><text x="1.4959%" y="78.50">&lt;module&gt; (SA_quantity_new.py:609)</text></g><g><title>get_my_solution (SA_quantity_new.py:573) (3,007 samples, 98.59%)</title><rect x="1.4098%" y="84" width="98.5902%" height="15" fill="rgb(245,102,45)" fg:x="43" fg:w="3007"/><text x="1.6598%" y="94.50">get_my_solution (SA_quantity_new.py:573)</text></g></svg></svg>