<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1450" onload="init(evt)" viewBox="0 0 1200 1450" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
            if (!isEdge) {
                svg.removeAttribute("viewBox");
            }
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1450" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">py-spy record -o profile.svg -- python SA_quantity_new.py</text><text id="details" x="10" y="40.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1190" y="24.00">Search</text><text id="matched" x="1190" y="1439.00"> </text><svg id="frames" x="10" width="1180" total_samples="2116"><g><title>&lt;module&gt; (pandas/__init__.py:138) (5 samples, 0.24%)</title><rect x="0.0000%" y="164" width="0.2363%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="174.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (5 samples, 0.24%)</title><rect x="0.0000%" y="180" width="0.2363%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="190.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.24%)</title><rect x="0.0000%" y="196" width="0.2363%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5"/><text x="0.2500%" y="206.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (5 samples, 0.24%)</title><rect x="0.0000%" y="212" width="0.2363%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="222.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (5 samples, 0.24%)</title><rect x="0.0000%" y="228" width="0.2363%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="5"/><text x="0.2500%" y="238.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (5 samples, 0.24%)</title><rect x="0.0000%" y="244" width="0.2363%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="5"/><text x="0.2500%" y="254.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (5 samples, 0.24%)</title><rect x="0.0000%" y="260" width="0.2363%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="270.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.24%)</title><rect x="0.0000%" y="276" width="0.2363%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="5"/><text x="0.2500%" y="286.50"></text></g><g><title>&lt;module&gt; (pandas/api/__init__.py:2) (5 samples, 0.24%)</title><rect x="0.0000%" y="292" width="0.2363%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="5"/><text x="0.2500%" y="302.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (5 samples, 0.24%)</title><rect x="0.0000%" y="308" width="0.2363%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="5"/><text x="0.2500%" y="318.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.24%)</title><rect x="0.0000%" y="324" width="0.2363%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="5"/><text x="0.2500%" y="334.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (5 samples, 0.24%)</title><rect x="0.0000%" y="340" width="0.2363%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="5"/><text x="0.2500%" y="350.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (5 samples, 0.24%)</title><rect x="0.0000%" y="356" width="0.2363%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="5"/><text x="0.2500%" y="366.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (5 samples, 0.24%)</title><rect x="0.0000%" y="372" width="0.2363%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="5"/><text x="0.2500%" y="382.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (5 samples, 0.24%)</title><rect x="0.0000%" y="388" width="0.2363%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="5"/><text x="0.2500%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.24%)</title><rect x="0.0000%" y="404" width="0.2363%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="5"/><text x="0.2500%" y="414.50"></text></g><g><title>&lt;module&gt; (pandas/api/typing/__init__.py:32) (3 samples, 0.14%)</title><rect x="0.0945%" y="420" width="0.1418%" height="15" fill="rgb(225,20,46)" fg:x="2" fg:w="3"/><text x="0.3445%" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (3 samples, 0.14%)</title><rect x="0.0945%" y="436" width="0.1418%" height="15" fill="rgb(210,31,41)" fg:x="2" fg:w="3"/><text x="0.3445%" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (3 samples, 0.14%)</title><rect x="0.0945%" y="452" width="0.1418%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="3"/><text x="0.3445%" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (3 samples, 0.14%)</title><rect x="0.0945%" y="468" width="0.1418%" height="15" fill="rgb(226,26,5)" fg:x="2" fg:w="3"/><text x="0.3445%" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (3 samples, 0.14%)</title><rect x="0.0945%" y="484" width="0.1418%" height="15" fill="rgb(249,33,26)" fg:x="2" fg:w="3"/><text x="0.3445%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.14%)</title><rect x="0.0945%" y="500" width="0.1418%" height="15" fill="rgb(235,183,28)" fg:x="2" fg:w="3"/><text x="0.3445%" y="510.50"></text></g><g><title>&lt;module&gt; (pandas/io/stata.py:1116) (3 samples, 0.14%)</title><rect x="0.0945%" y="516" width="0.1418%" height="15" fill="rgb(221,5,38)" fg:x="2" fg:w="3"/><text x="0.3445%" y="526.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:666) (3 samples, 0.14%)</title><rect x="0.3308%" y="1028" width="0.1418%" height="15" fill="rgb(247,18,42)" fg:x="7" fg:w="3"/><text x="0.5808%" y="1038.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:565) (3 samples, 0.14%)</title><rect x="0.3308%" y="1044" width="0.1418%" height="15" fill="rgb(241,131,45)" fg:x="7" fg:w="3"/><text x="0.5808%" y="1054.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1173) (3 samples, 0.14%)</title><rect x="0.3308%" y="1060" width="0.1418%" height="15" fill="rgb(249,31,29)" fg:x="7" fg:w="3"/><text x="0.5808%" y="1070.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.14%)</title><rect x="0.3308%" y="1076" width="0.1418%" height="15" fill="rgb(225,111,53)" fg:x="7" fg:w="3"/><text x="0.5808%" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1181) (6 samples, 0.28%)</title><rect x="0.3308%" y="964" width="0.2836%" height="15" fill="rgb(238,160,17)" fg:x="7" fg:w="6"/><text x="0.5808%" y="974.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (6 samples, 0.28%)</title><rect x="0.3308%" y="980" width="0.2836%" height="15" fill="rgb(214,148,48)" fg:x="7" fg:w="6"/><text x="0.5808%" y="990.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (6 samples, 0.28%)</title><rect x="0.3308%" y="996" width="0.2836%" height="15" fill="rgb(232,36,49)" fg:x="7" fg:w="6"/><text x="0.5808%" y="1006.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (6 samples, 0.28%)</title><rect x="0.3308%" y="1012" width="0.2836%" height="15" fill="rgb(209,103,24)" fg:x="7" fg:w="6"/><text x="0.5808%" y="1022.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (3 samples, 0.14%)</title><rect x="0.4726%" y="1028" width="0.1418%" height="15" fill="rgb(229,88,8)" fg:x="10" fg:w="3"/><text x="0.7226%" y="1038.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1181) (3 samples, 0.14%)</title><rect x="0.4726%" y="1044" width="0.1418%" height="15" fill="rgb(213,181,19)" fg:x="10" fg:w="3"/><text x="0.7226%" y="1054.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.14%)</title><rect x="0.4726%" y="1060" width="0.1418%" height="15" fill="rgb(254,191,54)" fg:x="10" fg:w="3"/><text x="0.7226%" y="1070.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (3 samples, 0.14%)</title><rect x="0.4726%" y="1076" width="0.1418%" height="15" fill="rgb(241,83,37)" fg:x="10" fg:w="3"/><text x="0.7226%" y="1086.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:1) (7 samples, 0.33%)</title><rect x="0.3308%" y="260" width="0.3308%" height="15" fill="rgb(233,36,39)" fg:x="7" fg:w="7"/><text x="0.5808%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.33%)</title><rect x="0.3308%" y="276" width="0.3308%" height="15" fill="rgb(226,3,54)" fg:x="7" fg:w="7"/><text x="0.5808%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.33%)</title><rect x="0.3308%" y="292" width="0.3308%" height="15" fill="rgb(245,192,40)" fg:x="7" fg:w="7"/><text x="0.5808%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.33%)</title><rect x="0.3308%" y="308" width="0.3308%" height="15" fill="rgb(238,167,29)" fg:x="7" fg:w="7"/><text x="0.5808%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (7 samples, 0.33%)</title><rect x="0.3308%" y="324" width="0.3308%" height="15" fill="rgb(232,182,51)" fg:x="7" fg:w="7"/><text x="0.5808%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.33%)</title><rect x="0.3308%" y="340" width="0.3308%" height="15" fill="rgb(231,60,39)" fg:x="7" fg:w="7"/><text x="0.5808%" y="350.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/__init__.py:18) (7 samples, 0.33%)</title><rect x="0.3308%" y="356" width="0.3308%" height="15" fill="rgb(208,69,12)" fg:x="7" fg:w="7"/><text x="0.5808%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.33%)</title><rect x="0.3308%" y="372" width="0.3308%" height="15" fill="rgb(235,93,37)" fg:x="7" fg:w="7"/><text x="0.5808%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.33%)</title><rect x="0.3308%" y="388" width="0.3308%" height="15" fill="rgb(213,116,39)" fg:x="7" fg:w="7"/><text x="0.5808%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.33%)</title><rect x="0.3308%" y="404" width="0.3308%" height="15" fill="rgb(222,207,29)" fg:x="7" fg:w="7"/><text x="0.5808%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1181) (7 samples, 0.33%)</title><rect x="0.3308%" y="420" width="0.3308%" height="15" fill="rgb(206,96,30)" fg:x="7" fg:w="7"/><text x="0.5808%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.33%)</title><rect x="0.3308%" y="436" width="0.3308%" height="15" fill="rgb(218,138,4)" fg:x="7" fg:w="7"/><text x="0.5808%" y="446.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.33%)</title><rect x="0.3308%" y="452" width="0.3308%" height="15" fill="rgb(250,191,14)" fg:x="7" fg:w="7"/><text x="0.5808%" y="462.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.33%)</title><rect x="0.3308%" y="468" width="0.3308%" height="15" fill="rgb(239,60,40)" fg:x="7" fg:w="7"/><text x="0.5808%" y="478.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.33%)</title><rect x="0.3308%" y="484" width="0.3308%" height="15" fill="rgb(206,27,48)" fg:x="7" fg:w="7"/><text x="0.5808%" y="494.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1181) (7 samples, 0.33%)</title><rect x="0.3308%" y="500" width="0.3308%" height="15" fill="rgb(225,35,8)" fg:x="7" fg:w="7"/><text x="0.5808%" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.33%)</title><rect x="0.3308%" y="516" width="0.3308%" height="15" fill="rgb(250,213,24)" fg:x="7" fg:w="7"/><text x="0.5808%" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.33%)</title><rect x="0.3308%" y="532" width="0.3308%" height="15" fill="rgb(247,123,22)" fg:x="7" fg:w="7"/><text x="0.5808%" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.33%)</title><rect x="0.3308%" y="548" width="0.3308%" height="15" fill="rgb(231,138,38)" fg:x="7" fg:w="7"/><text x="0.5808%" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.33%)</title><rect x="0.3308%" y="564" width="0.3308%" height="15" fill="rgb(231,145,46)" fg:x="7" fg:w="7"/><text x="0.5808%" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1181) (7 samples, 0.33%)</title><rect x="0.3308%" y="580" width="0.3308%" height="15" fill="rgb(251,118,11)" fg:x="7" fg:w="7"/><text x="0.5808%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.33%)</title><rect x="0.3308%" y="596" width="0.3308%" height="15" fill="rgb(217,147,25)" fg:x="7" fg:w="7"/><text x="0.5808%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.33%)</title><rect x="0.3308%" y="612" width="0.3308%" height="15" fill="rgb(247,81,37)" fg:x="7" fg:w="7"/><text x="0.5808%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:972) (7 samples, 0.33%)</title><rect x="0.3308%" y="628" width="0.3308%" height="15" fill="rgb(209,12,38)" fg:x="7" fg:w="7"/><text x="0.5808%" y="638.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.33%)</title><rect x="0.3308%" y="644" width="0.3308%" height="15" fill="rgb(227,1,9)" fg:x="7" fg:w="7"/><text x="0.5808%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.33%)</title><rect x="0.3308%" y="660" width="0.3308%" height="15" fill="rgb(248,47,43)" fg:x="7" fg:w="7"/><text x="0.5808%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.33%)</title><rect x="0.3308%" y="676" width="0.3308%" height="15" fill="rgb(221,10,30)" fg:x="7" fg:w="7"/><text x="0.5808%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.33%)</title><rect x="0.3308%" y="692" width="0.3308%" height="15" fill="rgb(210,229,1)" fg:x="7" fg:w="7"/><text x="0.5808%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (7 samples, 0.33%)</title><rect x="0.3308%" y="708" width="0.3308%" height="15" fill="rgb(222,148,37)" fg:x="7" fg:w="7"/><text x="0.5808%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.33%)</title><rect x="0.3308%" y="724" width="0.3308%" height="15" fill="rgb(234,67,33)" fg:x="7" fg:w="7"/><text x="0.5808%" y="734.50"></text></g><g><title>&lt;module&gt; (pandas/_libs/tslibs/__init__.py:40) (7 samples, 0.33%)</title><rect x="0.3308%" y="740" width="0.3308%" height="15" fill="rgb(247,98,35)" fg:x="7" fg:w="7"/><text x="0.5808%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.33%)</title><rect x="0.3308%" y="756" width="0.3308%" height="15" fill="rgb(247,138,52)" fg:x="7" fg:w="7"/><text x="0.5808%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.33%)</title><rect x="0.3308%" y="772" width="0.3308%" height="15" fill="rgb(213,79,30)" fg:x="7" fg:w="7"/><text x="0.5808%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.33%)</title><rect x="0.3308%" y="788" width="0.3308%" height="15" fill="rgb(246,177,23)" fg:x="7" fg:w="7"/><text x="0.5808%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1181) (7 samples, 0.33%)</title><rect x="0.3308%" y="804" width="0.3308%" height="15" fill="rgb(230,62,27)" fg:x="7" fg:w="7"/><text x="0.5808%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.33%)</title><rect x="0.3308%" y="820" width="0.3308%" height="15" fill="rgb(216,154,8)" fg:x="7" fg:w="7"/><text x="0.5808%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.33%)</title><rect x="0.3308%" y="836" width="0.3308%" height="15" fill="rgb(244,35,45)" fg:x="7" fg:w="7"/><text x="0.5808%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.33%)</title><rect x="0.3308%" y="852" width="0.3308%" height="15" fill="rgb(251,115,12)" fg:x="7" fg:w="7"/><text x="0.5808%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.33%)</title><rect x="0.3308%" y="868" width="0.3308%" height="15" fill="rgb(240,54,50)" fg:x="7" fg:w="7"/><text x="0.5808%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1181) (7 samples, 0.33%)</title><rect x="0.3308%" y="884" width="0.3308%" height="15" fill="rgb(233,84,52)" fg:x="7" fg:w="7"/><text x="0.5808%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.33%)</title><rect x="0.3308%" y="900" width="0.3308%" height="15" fill="rgb(207,117,47)" fg:x="7" fg:w="7"/><text x="0.5808%" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.33%)</title><rect x="0.3308%" y="916" width="0.3308%" height="15" fill="rgb(249,43,39)" fg:x="7" fg:w="7"/><text x="0.5808%" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.33%)</title><rect x="0.3308%" y="932" width="0.3308%" height="15" fill="rgb(209,38,44)" fg:x="7" fg:w="7"/><text x="0.5808%" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.33%)</title><rect x="0.3308%" y="948" width="0.3308%" height="15" fill="rgb(236,212,23)" fg:x="7" fg:w="7"/><text x="0.5808%" y="958.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:28) (3 samples, 0.14%)</title><rect x="0.6616%" y="260" width="0.1418%" height="15" fill="rgb(242,79,21)" fg:x="14" fg:w="3"/><text x="0.9116%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (3 samples, 0.14%)</title><rect x="0.6616%" y="276" width="0.1418%" height="15" fill="rgb(211,96,35)" fg:x="14" fg:w="3"/><text x="0.9116%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (3 samples, 0.14%)</title><rect x="0.6616%" y="292" width="0.1418%" height="15" fill="rgb(253,215,40)" fg:x="14" fg:w="3"/><text x="0.9116%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (3 samples, 0.14%)</title><rect x="0.6616%" y="308" width="0.1418%" height="15" fill="rgb(211,81,21)" fg:x="14" fg:w="3"/><text x="0.9116%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (3 samples, 0.14%)</title><rect x="0.6616%" y="324" width="0.1418%" height="15" fill="rgb(208,190,38)" fg:x="14" fg:w="3"/><text x="0.9116%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.14%)</title><rect x="0.6616%" y="340" width="0.1418%" height="15" fill="rgb(235,213,38)" fg:x="14" fg:w="3"/><text x="0.9116%" y="350.50"></text></g><g><title>&lt;module&gt; (SA_quantity_new.py:3) (20 samples, 0.95%)</title><rect x="0.0000%" y="68" width="0.9452%" height="15" fill="rgb(237,122,38)" fg:x="0" fg:w="20"/><text x="0.2500%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (20 samples, 0.95%)</title><rect x="0.0000%" y="84" width="0.9452%" height="15" fill="rgb(244,218,35)" fg:x="0" fg:w="20"/><text x="0.2500%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (20 samples, 0.95%)</title><rect x="0.0000%" y="100" width="0.9452%" height="15" fill="rgb(240,68,47)" fg:x="0" fg:w="20"/><text x="0.2500%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (20 samples, 0.95%)</title><rect x="0.0000%" y="116" width="0.9452%" height="15" fill="rgb(210,16,53)" fg:x="0" fg:w="20"/><text x="0.2500%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (20 samples, 0.95%)</title><rect x="0.0000%" y="132" width="0.9452%" height="15" fill="rgb(235,124,12)" fg:x="0" fg:w="20"/><text x="0.2500%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (20 samples, 0.95%)</title><rect x="0.0000%" y="148" width="0.9452%" height="15" fill="rgb(224,169,11)" fg:x="0" fg:w="20"/><text x="0.2500%" y="158.50"></text></g><g><title>&lt;module&gt; (pandas/__init__.py:49) (13 samples, 0.61%)</title><rect x="0.3308%" y="164" width="0.6144%" height="15" fill="rgb(250,166,2)" fg:x="7" fg:w="13"/><text x="0.5808%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (13 samples, 0.61%)</title><rect x="0.3308%" y="180" width="0.6144%" height="15" fill="rgb(242,216,29)" fg:x="7" fg:w="13"/><text x="0.5808%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (13 samples, 0.61%)</title><rect x="0.3308%" y="196" width="0.6144%" height="15" fill="rgb(230,116,27)" fg:x="7" fg:w="13"/><text x="0.5808%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (13 samples, 0.61%)</title><rect x="0.3308%" y="212" width="0.6144%" height="15" fill="rgb(228,99,48)" fg:x="7" fg:w="13"/><text x="0.5808%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (13 samples, 0.61%)</title><rect x="0.3308%" y="228" width="0.6144%" height="15" fill="rgb(253,11,6)" fg:x="7" fg:w="13"/><text x="0.5808%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (13 samples, 0.61%)</title><rect x="0.3308%" y="244" width="0.6144%" height="15" fill="rgb(247,143,39)" fg:x="7" fg:w="13"/><text x="0.5808%" y="254.50"></text></g><g><title>&lt;module&gt; (pandas/core/api.py:47) (3 samples, 0.14%)</title><rect x="0.8034%" y="260" width="0.1418%" height="15" fill="rgb(236,97,10)" fg:x="17" fg:w="3"/><text x="1.0534%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (3 samples, 0.14%)</title><rect x="0.8034%" y="276" width="0.1418%" height="15" fill="rgb(233,208,19)" fg:x="17" fg:w="3"/><text x="1.0534%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (3 samples, 0.14%)</title><rect x="0.8034%" y="292" width="0.1418%" height="15" fill="rgb(216,164,2)" fg:x="17" fg:w="3"/><text x="1.0534%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (3 samples, 0.14%)</title><rect x="0.8034%" y="308" width="0.1418%" height="15" fill="rgb(220,129,5)" fg:x="17" fg:w="3"/><text x="1.0534%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (3 samples, 0.14%)</title><rect x="0.8034%" y="324" width="0.1418%" height="15" fill="rgb(242,17,10)" fg:x="17" fg:w="3"/><text x="1.0534%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.14%)</title><rect x="0.8034%" y="340" width="0.1418%" height="15" fill="rgb(242,107,0)" fg:x="17" fg:w="3"/><text x="1.0534%" y="350.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/__init__.py:1) (3 samples, 0.14%)</title><rect x="0.8034%" y="356" width="0.1418%" height="15" fill="rgb(251,28,31)" fg:x="17" fg:w="3"/><text x="1.0534%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (3 samples, 0.14%)</title><rect x="0.8034%" y="372" width="0.1418%" height="15" fill="rgb(233,223,10)" fg:x="17" fg:w="3"/><text x="1.0534%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (3 samples, 0.14%)</title><rect x="0.8034%" y="388" width="0.1418%" height="15" fill="rgb(215,21,27)" fg:x="17" fg:w="3"/><text x="1.0534%" y="398.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (3 samples, 0.14%)</title><rect x="0.8034%" y="404" width="0.1418%" height="15" fill="rgb(232,23,21)" fg:x="17" fg:w="3"/><text x="1.0534%" y="414.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (3 samples, 0.14%)</title><rect x="0.8034%" y="420" width="0.1418%" height="15" fill="rgb(244,5,23)" fg:x="17" fg:w="3"/><text x="1.0534%" y="430.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.14%)</title><rect x="0.8034%" y="436" width="0.1418%" height="15" fill="rgb(226,81,46)" fg:x="17" fg:w="3"/><text x="1.0534%" y="446.50"></text></g><g><title>&lt;module&gt; (pandas/core/groupby/generic.py:68) (3 samples, 0.14%)</title><rect x="0.8034%" y="452" width="0.1418%" height="15" fill="rgb(247,70,30)" fg:x="17" fg:w="3"/><text x="1.0534%" y="462.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (3 samples, 0.14%)</title><rect x="0.8034%" y="468" width="0.1418%" height="15" fill="rgb(212,68,19)" fg:x="17" fg:w="3"/><text x="1.0534%" y="478.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (3 samples, 0.14%)</title><rect x="0.8034%" y="484" width="0.1418%" height="15" fill="rgb(240,187,13)" fg:x="17" fg:w="3"/><text x="1.0534%" y="494.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (3 samples, 0.14%)</title><rect x="0.8034%" y="500" width="0.1418%" height="15" fill="rgb(223,113,26)" fg:x="17" fg:w="3"/><text x="1.0534%" y="510.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (3 samples, 0.14%)</title><rect x="0.8034%" y="516" width="0.1418%" height="15" fill="rgb(206,192,2)" fg:x="17" fg:w="3"/><text x="1.0534%" y="526.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.14%)</title><rect x="0.8034%" y="532" width="0.1418%" height="15" fill="rgb(241,108,4)" fg:x="17" fg:w="3"/><text x="1.0534%" y="542.50"></text></g><g><title>__init__ (evaluation_diff_quantity.py:209) (3 samples, 0.14%)</title><rect x="0.9452%" y="84" width="0.1418%" height="15" fill="rgb(247,173,49)" fg:x="20" fg:w="3"/><text x="1.1952%" y="94.50"></text></g><g><title>&lt;module&gt; (SA_quantity_new.py:411) (6 samples, 0.28%)</title><rect x="0.9452%" y="68" width="0.2836%" height="15" fill="rgb(224,114,35)" fg:x="20" fg:w="6"/><text x="1.1952%" y="78.50"></text></g><g><title>__init__ (evaluation_diff_quantity.py:212) (3 samples, 0.14%)</title><rect x="1.0870%" y="84" width="0.1418%" height="15" fill="rgb(245,159,27)" fg:x="23" fg:w="3"/><text x="1.3370%" y="94.50"></text></g><g><title>cache_time_step_demand (evaluation_diff_quantity.py:218) (3 samples, 0.14%)</title><rect x="1.0870%" y="100" width="0.1418%" height="15" fill="rgb(245,172,44)" fg:x="23" fg:w="3"/><text x="1.3370%" y="110.50"></text></g><g><title>generate_new_purchase (SA_quantity_new.py:223) (3 samples, 0.14%)</title><rect x="1.2287%" y="116" width="0.1418%" height="15" fill="rgb(236,23,11)" fg:x="26" fg:w="3"/><text x="1.4787%" y="126.50"></text></g><g><title>apply (pandas/core/series.py:4917) (3 samples, 0.14%)</title><rect x="1.2287%" y="132" width="0.1418%" height="15" fill="rgb(205,117,38)" fg:x="26" fg:w="3"/><text x="1.4787%" y="142.50"></text></g><g><title>apply (pandas/core/apply.py:1427) (3 samples, 0.14%)</title><rect x="1.2287%" y="148" width="0.1418%" height="15" fill="rgb(237,72,25)" fg:x="26" fg:w="3"/><text x="1.4787%" y="158.50"></text></g><g><title>apply_standard (pandas/core/apply.py:1507) (3 samples, 0.14%)</title><rect x="1.2287%" y="164" width="0.1418%" height="15" fill="rgb(244,70,9)" fg:x="26" fg:w="3"/><text x="1.4787%" y="174.50"></text></g><g><title>_map_values (pandas/core/base.py:921) (3 samples, 0.14%)</title><rect x="1.2287%" y="180" width="0.1418%" height="15" fill="rgb(217,125,39)" fg:x="26" fg:w="3"/><text x="1.4787%" y="190.50"></text></g><g><title>map_array (pandas/core/algorithms.py:1743) (3 samples, 0.14%)</title><rect x="1.2287%" y="196" width="0.1418%" height="15" fill="rgb(235,36,10)" fg:x="26" fg:w="3"/><text x="1.4787%" y="206.50"></text></g><g><title>run (SA_quantity_new.py:357) (6 samples, 0.28%)</title><rect x="1.2287%" y="84" width="0.2836%" height="15" fill="rgb(251,123,47)" fg:x="26" fg:w="6"/><text x="1.4787%" y="94.50"></text></g><g><title>generate_neighbor (SA_quantity_new.py:140) (6 samples, 0.28%)</title><rect x="1.2287%" y="100" width="0.2836%" height="15" fill="rgb(221,13,13)" fg:x="26" fg:w="6"/><text x="1.4787%" y="110.50"></text></g><g><title>get_result (pandas/core/reshape/merge.py:886) (3 samples, 0.14%)</title><rect x="1.6068%" y="164" width="0.1418%" height="15" fill="rgb(238,131,9)" fg:x="34" fg:w="3"/><text x="1.8568%" y="174.50"></text></g><g><title>_get_join_info (pandas/core/reshape/merge.py:1151) (3 samples, 0.14%)</title><rect x="1.6068%" y="180" width="0.1418%" height="15" fill="rgb(211,50,8)" fg:x="34" fg:w="3"/><text x="1.8568%" y="190.50"></text></g><g><title>_get_join_indexers (pandas/core/reshape/merge.py:1125) (3 samples, 0.14%)</title><rect x="1.6068%" y="196" width="0.1418%" height="15" fill="rgb(245,182,24)" fg:x="34" fg:w="3"/><text x="1.8568%" y="206.50"></text></g><g><title>get_join_indexers (pandas/core/reshape/merge.py:1759) (3 samples, 0.14%)</title><rect x="1.6068%" y="212" width="0.1418%" height="15" fill="rgb(242,14,37)" fg:x="34" fg:w="3"/><text x="1.8568%" y="222.50"></text></g><g><title>_reindex_and_concat (pandas/core/reshape/merge.py:863) (3 samples, 0.14%)</title><rect x="1.7486%" y="180" width="0.1418%" height="15" fill="rgb(246,228,12)" fg:x="37" fg:w="3"/><text x="1.9986%" y="190.50"></text></g><g><title>solution_data_preparation (evaluation_diff_quantity.py:318) (9 samples, 0.43%)</title><rect x="1.5595%" y="116" width="0.4253%" height="15" fill="rgb(213,55,15)" fg:x="33" fg:w="9"/><text x="1.8095%" y="126.50"></text></g><g><title>merge (pandas/core/frame.py:10832) (9 samples, 0.43%)</title><rect x="1.5595%" y="132" width="0.4253%" height="15" fill="rgb(209,9,3)" fg:x="33" fg:w="9"/><text x="1.8095%" y="142.50"></text></g><g><title>merge (pandas/core/reshape/merge.py:184) (8 samples, 0.38%)</title><rect x="1.6068%" y="148" width="0.3781%" height="15" fill="rgb(230,59,30)" fg:x="34" fg:w="8"/><text x="1.8568%" y="158.50"></text></g><g><title>get_result (pandas/core/reshape/merge.py:888) (5 samples, 0.24%)</title><rect x="1.7486%" y="164" width="0.2363%" height="15" fill="rgb(209,121,21)" fg:x="37" fg:w="5"/><text x="1.9986%" y="174.50"></text></g><g><title>solution_data_preparation (evaluation_diff_quantity.py:320) (4 samples, 0.19%)</title><rect x="1.9849%" y="116" width="0.1890%" height="15" fill="rgb(220,109,13)" fg:x="42" fg:w="4"/><text x="2.2349%" y="126.50"></text></g><g><title>merge (pandas/core/frame.py:10832) (4 samples, 0.19%)</title><rect x="1.9849%" y="132" width="0.1890%" height="15" fill="rgb(232,18,1)" fg:x="42" fg:w="4"/><text x="2.2349%" y="142.50"></text></g><g><title>merge (pandas/core/reshape/merge.py:184) (4 samples, 0.19%)</title><rect x="1.9849%" y="148" width="0.1890%" height="15" fill="rgb(215,41,42)" fg:x="42" fg:w="4"/><text x="2.2349%" y="158.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:349) (23 samples, 1.09%)</title><rect x="1.5595%" y="100" width="1.0870%" height="15" fill="rgb(224,123,36)" fg:x="33" fg:w="23"/><text x="1.8095%" y="110.50"></text></g><g><title>solution_data_preparation (evaluation_diff_quantity.py:323) (10 samples, 0.47%)</title><rect x="2.1739%" y="116" width="0.4726%" height="15" fill="rgb(240,125,3)" fg:x="46" fg:w="10"/><text x="2.4239%" y="126.50"></text></g><g><title>merge (pandas/core/frame.py:10832) (10 samples, 0.47%)</title><rect x="2.1739%" y="132" width="0.4726%" height="15" fill="rgb(205,98,50)" fg:x="46" fg:w="10"/><text x="2.4239%" y="142.50"></text></g><g><title>merge (pandas/core/reshape/merge.py:184) (8 samples, 0.38%)</title><rect x="2.2684%" y="148" width="0.3781%" height="15" fill="rgb(205,185,37)" fg:x="48" fg:w="8"/><text x="2.5184%" y="158.50"></text></g><g><title>get_result (pandas/core/reshape/merge.py:888) (6 samples, 0.28%)</title><rect x="2.3629%" y="164" width="0.2836%" height="15" fill="rgb(238,207,15)" fg:x="50" fg:w="6"/><text x="2.6129%" y="174.50"></text></g><g><title>_reindex_and_concat (pandas/core/reshape/merge.py:879) (3 samples, 0.14%)</title><rect x="2.5047%" y="180" width="0.1418%" height="15" fill="rgb(213,199,42)" fg:x="53" fg:w="3"/><text x="2.7547%" y="190.50"></text></g><g><title>__init__ (pandas/core/frame.py:876) (7 samples, 0.33%)</title><rect x="2.6465%" y="116" width="0.3308%" height="15" fill="rgb(235,201,11)" fg:x="56" fg:w="7"/><text x="2.8965%" y="126.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:353) (14 samples, 0.66%)</title><rect x="2.6465%" y="100" width="0.6616%" height="15" fill="rgb(207,46,11)" fg:x="56" fg:w="14"/><text x="2.8965%" y="110.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:354) (3 samples, 0.14%)</title><rect x="3.3081%" y="100" width="0.1418%" height="15" fill="rgb(241,35,35)" fg:x="70" fg:w="3"/><text x="3.5581%" y="110.50"></text></g><g><title>get_time_step_solution (evaluation_diff_quantity.py:79) (10 samples, 0.47%)</title><rect x="3.6389%" y="116" width="0.4726%" height="15" fill="rgb(243,32,47)" fg:x="77" fg:w="10"/><text x="3.8889%" y="126.50"></text></g><g><title>__contains__ (pandas/core/indexes/base.py:5360) (10 samples, 0.47%)</title><rect x="3.6389%" y="132" width="0.4726%" height="15" fill="rgb(247,202,23)" fg:x="77" fg:w="10"/><text x="3.8889%" y="142.50"></text></g><g><title>_get_indexer_strict (pandas/core/indexes/base.py:6196) (3 samples, 0.14%)</title><rect x="4.3006%" y="196" width="0.1418%" height="15" fill="rgb(219,102,11)" fg:x="91" fg:w="3"/><text x="4.5506%" y="206.50"></text></g><g><title>astype (pandas/core/indexes/base.py:1097) (4 samples, 0.19%)</title><rect x="4.6786%" y="244" width="0.1890%" height="15" fill="rgb(243,110,44)" fg:x="99" fg:w="4"/><text x="4.9286%" y="254.50"></text></g><g><title>astype_array (pandas/core/dtypes/astype.py:182) (4 samples, 0.19%)</title><rect x="4.6786%" y="260" width="0.1890%" height="15" fill="rgb(222,74,54)" fg:x="99" fg:w="4"/><text x="4.9286%" y="270.50"></text></g><g><title>astype (pandas/core/indexes/base.py:1100) (5 samples, 0.24%)</title><rect x="4.8677%" y="244" width="0.2363%" height="15" fill="rgb(216,99,12)" fg:x="103" fg:w="5"/><text x="5.1177%" y="254.50"></text></g><g><title>get_indexer_non_unique (pandas/core/indexes/base.py:6143) (10 samples, 0.47%)</title><rect x="4.6786%" y="228" width="0.4726%" height="15" fill="rgb(226,22,26)" fg:x="99" fg:w="10"/><text x="4.9286%" y="238.50"></text></g><g><title>_reindex_non_unique (pandas/core/indexes/base.py:4472) (17 samples, 0.80%)</title><rect x="4.4896%" y="212" width="0.8034%" height="15" fill="rgb(217,163,10)" fg:x="95" fg:w="17"/><text x="4.7396%" y="222.50"></text></g><g><title>get_indexer_non_unique (pandas/core/indexes/base.py:6144) (3 samples, 0.14%)</title><rect x="5.1512%" y="228" width="0.1418%" height="15" fill="rgb(213,25,53)" fg:x="109" fg:w="3"/><text x="5.4012%" y="238.50"></text></g><g><title>_get_indexer_strict (pandas/core/indexes/base.py:6198) (23 samples, 1.09%)</title><rect x="4.4423%" y="196" width="1.0870%" height="15" fill="rgb(252,105,26)" fg:x="94" fg:w="23"/><text x="4.6923%" y="206.50"></text></g><g><title>_reindex_non_unique (pandas/core/indexes/base.py:4513) (5 samples, 0.24%)</title><rect x="5.2930%" y="212" width="0.2363%" height="15" fill="rgb(220,39,43)" fg:x="112" fg:w="5"/><text x="5.5430%" y="222.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:565) (4 samples, 0.19%)</title><rect x="5.3403%" y="228" width="0.1890%" height="15" fill="rgb(229,68,48)" fg:x="113" fg:w="4"/><text x="5.5903%" y="238.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:606) (4 samples, 0.19%)</title><rect x="5.3403%" y="244" width="0.1890%" height="15" fill="rgb(252,8,32)" fg:x="113" fg:w="4"/><text x="5.5903%" y="254.50"></text></g><g><title>maybe_infer_to_datetimelike (pandas/core/dtypes/cast.py:1190) (4 samples, 0.19%)</title><rect x="5.3403%" y="260" width="0.1890%" height="15" fill="rgb(223,20,43)" fg:x="113" fg:w="4"/><text x="5.5903%" y="270.50"></text></g><g><title>_getitem_iterable (pandas/core/indexing.py:1360) (31 samples, 1.47%)</title><rect x="4.2060%" y="164" width="1.4650%" height="15" fill="rgb(229,81,49)" fg:x="89" fg:w="31"/><text x="4.4560%" y="174.50"></text></g><g><title>_get_listlike_indexer (pandas/core/indexing.py:1558) (31 samples, 1.47%)</title><rect x="4.2060%" y="180" width="1.4650%" height="15" fill="rgb(236,28,36)" fg:x="89" fg:w="31"/><text x="4.4560%" y="190.50"></text></g><g><title>_get_indexer_strict (pandas/core/indexes/base.py:6200) (3 samples, 0.14%)</title><rect x="5.5293%" y="196" width="0.1418%" height="15" fill="rgb(249,185,26)" fg:x="117" fg:w="3"/><text x="5.7793%" y="206.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:114) (3 samples, 0.14%)</title><rect x="5.7183%" y="244" width="0.1418%" height="15" fill="rgb(249,174,33)" fg:x="121" fg:w="3"/><text x="5.9683%" y="254.50"></text></g><g><title>take (pandas/core/arrays/_mixins.py:168) (3 samples, 0.14%)</title><rect x="5.7183%" y="260" width="0.1418%" height="15" fill="rgb(233,201,37)" fg:x="121" fg:w="3"/><text x="5.9683%" y="270.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (3 samples, 0.14%)</title><rect x="5.9074%" y="244" width="0.1418%" height="15" fill="rgb(221,78,26)" fg:x="125" fg:w="3"/><text x="6.1574%" y="254.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1307) (8 samples, 0.38%)</title><rect x="5.7183%" y="228" width="0.3781%" height="15" fill="rgb(250,127,30)" fg:x="121" fg:w="8"/><text x="5.9683%" y="238.50"></text></g><g><title>_reindex_with_indexers (pandas/core/generic.py:5686) (10 samples, 0.47%)</title><rect x="5.6711%" y="180" width="0.4726%" height="15" fill="rgb(230,49,44)" fg:x="120" fg:w="10"/><text x="5.9211%" y="190.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:687) (10 samples, 0.47%)</title><rect x="5.6711%" y="196" width="0.4726%" height="15" fill="rgb(229,67,23)" fg:x="120" fg:w="10"/><text x="5.9211%" y="206.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:688) (10 samples, 0.47%)</title><rect x="5.6711%" y="212" width="0.4726%" height="15" fill="rgb(249,83,47)" fg:x="120" fg:w="10"/><text x="5.9211%" y="222.50"></text></g><g><title>get_time_step_solution (evaluation_diff_quantity.py:80) (44 samples, 2.08%)</title><rect x="4.1115%" y="116" width="2.0794%" height="15" fill="rgb(215,43,3)" fg:x="87" fg:w="44"/><text x="4.3615%" y="126.50">g..</text></g><g><title>__getitem__ (pandas/core/indexing.py:1191) (44 samples, 2.08%)</title><rect x="4.1115%" y="132" width="2.0794%" height="15" fill="rgb(238,154,13)" fg:x="87" fg:w="44"/><text x="4.3615%" y="142.50">_..</text></g><g><title>_getitem_axis (pandas/core/indexing.py:1420) (43 samples, 2.03%)</title><rect x="4.1588%" y="148" width="2.0321%" height="15" fill="rgb(219,56,2)" fg:x="88" fg:w="43"/><text x="4.4088%" y="158.50">_..</text></g><g><title>_getitem_iterable (pandas/core/indexing.py:1361) (11 samples, 0.52%)</title><rect x="5.6711%" y="164" width="0.5198%" height="15" fill="rgb(233,0,4)" fg:x="120" fg:w="11"/><text x="5.9211%" y="174.50"></text></g><g><title>_consolidate (pandas/core/internals/managers.py:2265) (3 samples, 0.14%)</title><rect x="6.5690%" y="196" width="0.1418%" height="15" fill="rgb(235,30,7)" fg:x="139" fg:w="3"/><text x="6.8190%" y="206.50"></text></g><g><title>&lt;lambda&gt; (pandas/core/internals/managers.py:2264) (3 samples, 0.14%)</title><rect x="6.5690%" y="212" width="0.1418%" height="15" fill="rgb(250,79,13)" fg:x="139" fg:w="3"/><text x="6.8190%" y="222.50"></text></g><g><title>_consolidate_key (pandas/core/internals/blocks.py:228) (3 samples, 0.14%)</title><rect x="6.5690%" y="228" width="0.1418%" height="15" fill="rgb(211,146,34)" fg:x="139" fg:w="3"/><text x="6.8190%" y="238.50"></text></g><g><title>_name_get (numpy/core/_dtype.py:362) (3 samples, 0.14%)</title><rect x="6.5690%" y="244" width="0.1418%" height="15" fill="rgb(228,22,38)" fg:x="139" fg:w="3"/><text x="6.8190%" y="254.50"></text></g><g><title>_consolidate_inplace (pandas/core/internals/managers.py:1788) (6 samples, 0.28%)</title><rect x="6.5690%" y="180" width="0.2836%" height="15" fill="rgb(235,168,5)" fg:x="139" fg:w="6"/><text x="6.8190%" y="190.50"></text></g><g><title>_consolidate (pandas/core/internals/managers.py:2269) (3 samples, 0.14%)</title><rect x="6.7108%" y="196" width="0.1418%" height="15" fill="rgb(221,155,16)" fg:x="142" fg:w="3"/><text x="6.9608%" y="206.50"></text></g><g><title>set_index (pandas/core/frame.py:6128) (13 samples, 0.61%)</title><rect x="6.3327%" y="132" width="0.6144%" height="15" fill="rgb(215,215,53)" fg:x="134" fg:w="13"/><text x="6.5827%" y="142.50"></text></g><g><title>copy (pandas/core/generic.py:6811) (13 samples, 0.61%)</title><rect x="6.3327%" y="148" width="0.6144%" height="15" fill="rgb(223,4,10)" fg:x="134" fg:w="13"/><text x="6.5827%" y="158.50"></text></g><g><title>copy (pandas/core/internals/managers.py:604) (10 samples, 0.47%)</title><rect x="6.4745%" y="164" width="0.4726%" height="15" fill="rgb(234,103,6)" fg:x="137" fg:w="10"/><text x="6.7245%" y="174.50"></text></g><g><title>_ixs (pandas/core/frame.py:4011) (4 samples, 0.19%)</title><rect x="7.0888%" y="180" width="0.1890%" height="15" fill="rgb(227,97,0)" fg:x="150" fg:w="4"/><text x="7.3388%" y="190.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4616) (4 samples, 0.19%)</title><rect x="7.0888%" y="196" width="0.1890%" height="15" fill="rgb(234,150,53)" fg:x="150" fg:w="4"/><text x="7.3388%" y="206.50"></text></g><g><title>_constructor_sliced_from_mgr (pandas/core/frame.py:680) (4 samples, 0.19%)</title><rect x="7.0888%" y="212" width="0.1890%" height="15" fill="rgb(228,201,54)" fg:x="150" fg:w="4"/><text x="7.3388%" y="222.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (4 samples, 0.19%)</title><rect x="7.0888%" y="228" width="0.1890%" height="15" fill="rgb(222,22,37)" fg:x="150" fg:w="4"/><text x="7.3388%" y="238.50"></text></g><g><title>set_index (pandas/core/frame.py:6165) (8 samples, 0.38%)</title><rect x="6.9471%" y="132" width="0.3781%" height="15" fill="rgb(237,53,32)" fg:x="147" fg:w="8"/><text x="7.1971%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (7 samples, 0.33%)</title><rect x="6.9943%" y="148" width="0.3308%" height="15" fill="rgb(233,25,53)" fg:x="148" fg:w="7"/><text x="7.2443%" y="158.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4639) (7 samples, 0.33%)</title><rect x="6.9943%" y="164" width="0.3308%" height="15" fill="rgb(210,40,34)" fg:x="148" fg:w="7"/><text x="7.2443%" y="174.50"></text></g><g><title>get_time_step_solution (evaluation_diff_quantity.py:81) (30 samples, 1.42%)</title><rect x="6.1909%" y="116" width="1.4178%" height="15" fill="rgb(241,220,44)" fg:x="131" fg:w="30"/><text x="6.4409%" y="126.50"></text></g><g><title>set_index (pandas/core/frame.py:6178) (5 samples, 0.24%)</title><rect x="7.3724%" y="132" width="0.2363%" height="15" fill="rgb(235,28,35)" fg:x="156" fg:w="5"/><text x="7.6224%" y="142.50"></text></g><g><title>ensure_index_from_sequences (pandas/core/indexes/base.py:7588) (4 samples, 0.19%)</title><rect x="7.4197%" y="148" width="0.1890%" height="15" fill="rgb(210,56,17)" fg:x="157" fg:w="4"/><text x="7.6697%" y="158.50"></text></g><g><title>pandas_dtype (pandas/core/dtypes/common.py:1644) (3 samples, 0.14%)</title><rect x="7.7977%" y="148" width="0.1418%" height="15" fill="rgb(224,130,29)" fg:x="165" fg:w="3"/><text x="8.0477%" y="158.50"></text></g><g><title>__init__ (pandas/core/frame.py:768) (6 samples, 0.28%)</title><rect x="7.7977%" y="132" width="0.2836%" height="15" fill="rgb(235,212,8)" fg:x="165" fg:w="6"/><text x="8.0477%" y="142.50"></text></g><g><title>pandas_dtype (pandas/core/dtypes/common.py:1645) (3 samples, 0.14%)</title><rect x="7.9395%" y="148" width="0.1418%" height="15" fill="rgb(223,33,50)" fg:x="168" fg:w="3"/><text x="8.1895%" y="158.50"></text></g><g><title>__init__ (pandas/core/series.py:493) (4 samples, 0.19%)</title><rect x="8.5539%" y="164" width="0.1890%" height="15" fill="rgb(219,149,13)" fg:x="181" fg:w="4"/><text x="8.8039%" y="174.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:516) (4 samples, 0.19%)</title><rect x="8.5539%" y="180" width="0.1890%" height="15" fill="rgb(250,156,29)" fg:x="181" fg:w="4"/><text x="8.8039%" y="190.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (3 samples, 0.14%)</title><rect x="9.0265%" y="196" width="0.1418%" height="15" fill="rgb(216,193,19)" fg:x="191" fg:w="3"/><text x="9.2765%" y="206.50"></text></g><g><title>_init_dict (pandas/core/series.py:651) (16 samples, 0.76%)</title><rect x="8.7902%" y="180" width="0.7561%" height="15" fill="rgb(216,135,14)" fg:x="186" fg:w="16"/><text x="9.0402%" y="190.50"></text></g><g><title>__init__ (pandas/core/series.py:537) (18 samples, 0.85%)</title><rect x="8.7429%" y="164" width="0.8507%" height="15" fill="rgb(241,47,5)" fg:x="185" fg:w="18"/><text x="8.9929%" y="174.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:443) (32 samples, 1.51%)</title><rect x="8.3648%" y="148" width="1.5123%" height="15" fill="rgb(233,42,35)" fg:x="177" fg:w="32"/><text x="8.6148%" y="158.50"></text></g><g><title>__init__ (pandas/core/series.py:594) (4 samples, 0.19%)</title><rect x="9.6881%" y="164" width="0.1890%" height="15" fill="rgb(231,13,6)" fg:x="205" fg:w="4"/><text x="9.9381%" y="174.50"></text></g><g><title>_isna (pandas/core/dtypes/missing.py:216) (11 samples, 0.52%)</title><rect x="10.2552%" y="212" width="0.5198%" height="15" fill="rgb(207,181,40)" fg:x="217" fg:w="11"/><text x="10.5052%" y="222.50"></text></g><g><title>_isna_array (pandas/core/dtypes/missing.py:292) (8 samples, 0.38%)</title><rect x="10.3970%" y="228" width="0.3781%" height="15" fill="rgb(254,173,49)" fg:x="220" fg:w="8"/><text x="10.6470%" y="238.50"></text></g><g><title>_isna_string_dtype (pandas/core/dtypes/missing.py:313) (7 samples, 0.33%)</title><rect x="10.4442%" y="244" width="0.3308%" height="15" fill="rgb(221,1,38)" fg:x="221" fg:w="7"/><text x="10.6942%" y="254.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:551) (3 samples, 0.14%)</title><rect x="11.1059%" y="244" width="0.1418%" height="15" fill="rgb(206,124,46)" fg:x="235" fg:w="3"/><text x="11.3559%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (7 samples, 0.33%)</title><rect x="11.0113%" y="228" width="0.3308%" height="15" fill="rgb(249,21,11)" fg:x="233" fg:w="7"/><text x="11.2613%" y="238.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:444) (34 samples, 1.61%)</title><rect x="9.8771%" y="148" width="1.6068%" height="15" fill="rgb(222,201,40)" fg:x="209" fg:w="34"/><text x="10.1271%" y="158.50"></text></g><g><title>isna (pandas/core/series.py:5775) (33 samples, 1.56%)</title><rect x="9.9244%" y="164" width="1.5595%" height="15" fill="rgb(235,61,29)" fg:x="210" fg:w="33"/><text x="10.1744%" y="174.50"></text></g><g><title>isna (pandas/core/generic.py:8754) (31 samples, 1.47%)</title><rect x="10.0189%" y="180" width="1.4650%" height="15" fill="rgb(219,207,3)" fg:x="212" fg:w="31"/><text x="10.2689%" y="190.50"></text></g><g><title>isna (pandas/core/dtypes/missing.py:178) (27 samples, 1.28%)</title><rect x="10.2079%" y="196" width="1.2760%" height="15" fill="rgb(222,56,46)" fg:x="216" fg:w="27"/><text x="10.4579%" y="206.50"></text></g><g><title>_isna (pandas/core/dtypes/missing.py:218) (15 samples, 0.71%)</title><rect x="10.7750%" y="212" width="0.7089%" height="15" fill="rgb(239,76,54)" fg:x="228" fg:w="15"/><text x="11.0250%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:592) (3 samples, 0.14%)</title><rect x="11.3422%" y="228" width="0.1418%" height="15" fill="rgb(231,124,27)" fg:x="240" fg:w="3"/><text x="11.5922%" y="238.50"></text></g><g><title>any (pandas/core/series.py:6471) (6 samples, 0.28%)</title><rect x="11.5784%" y="164" width="0.2836%" height="15" fill="rgb(249,195,6)" fg:x="245" fg:w="6"/><text x="11.8284%" y="174.50"></text></g><g><title>_reduce (pandas/core/series.py:6457) (3 samples, 0.14%)</title><rect x="11.7202%" y="180" width="0.1418%" height="15" fill="rgb(237,174,47)" fg:x="248" fg:w="3"/><text x="11.9702%" y="190.50"></text></g><g><title>nanany (pandas/core/nanops.py:520) (3 samples, 0.14%)</title><rect x="11.7202%" y="196" width="0.1418%" height="15" fill="rgb(206,201,31)" fg:x="248" fg:w="3"/><text x="11.9702%" y="206.50"></text></g><g><title>_any (numpy/core/_methods.py:58) (3 samples, 0.14%)</title><rect x="11.7202%" y="212" width="0.1418%" height="15" fill="rgb(231,57,52)" fg:x="248" fg:w="3"/><text x="11.9702%" y="222.50"></text></g><g><title>dict_to_mgr (pandas/core/internals/construction.py:453) (10 samples, 0.47%)</title><rect x="11.4839%" y="148" width="0.4726%" height="15" fill="rgb(248,177,22)" fg:x="243" fg:w="10"/><text x="11.7339%" y="158.50"></text></g><g><title>__init__ (pandas/core/frame.py:876) (83 samples, 3.92%)</title><rect x="8.2231%" y="132" width="3.9225%" height="15" fill="rgb(215,211,37)" fg:x="174" fg:w="83"/><text x="8.4731%" y="142.50">__in..</text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:364) (185 samples, 8.74%)</title><rect x="3.4499%" y="100" width="8.7429%" height="15" fill="rgb(241,128,51)" fg:x="73" fg:w="185"/><text x="3.6999%" y="110.50">SA_evaluatio..</text></g><g><title>get_time_step_solution (evaluation_diff_quantity.py:84) (97 samples, 4.58%)</title><rect x="7.6087%" y="116" width="4.5841%" height="15" fill="rgb(227,165,31)" fg:x="161" fg:w="97"/><text x="7.8587%" y="126.50">get_t..</text></g><g><title>_get_axis (pandas/core/generic.py:588) (3 samples, 0.14%)</title><rect x="12.3346%" y="148" width="0.1418%" height="15" fill="rgb(228,167,24)" fg:x="261" fg:w="3"/><text x="12.5846%" y="158.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:366) (8 samples, 0.38%)</title><rect x="12.1928%" y="100" width="0.3781%" height="15" fill="rgb(228,143,12)" fg:x="258" fg:w="8"/><text x="12.4428%" y="110.50"></text></g><g><title>empty (pandas/core/generic.py:2140) (8 samples, 0.38%)</title><rect x="12.1928%" y="116" width="0.3781%" height="15" fill="rgb(249,149,8)" fg:x="258" fg:w="8"/><text x="12.4428%" y="126.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/generic.py:2140) (6 samples, 0.28%)</title><rect x="12.2873%" y="132" width="0.2836%" height="15" fill="rgb(243,35,44)" fg:x="260" fg:w="6"/><text x="12.5373%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (3 samples, 0.14%)</title><rect x="12.6181%" y="132" width="0.1418%" height="15" fill="rgb(246,89,9)" fg:x="267" fg:w="3"/><text x="12.8681%" y="142.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4639) (3 samples, 0.14%)</title><rect x="12.6181%" y="148" width="0.1418%" height="15" fill="rgb(233,213,13)" fg:x="267" fg:w="3"/><text x="12.8681%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4092) (5 samples, 0.24%)</title><rect x="12.7599%" y="132" width="0.2363%" height="15" fill="rgb(233,141,41)" fg:x="270" fg:w="5"/><text x="13.0099%" y="142.50"></text></g><g><title>is_bool_indexer (pandas/core/common.py:139) (3 samples, 0.14%)</title><rect x="12.8544%" y="148" width="0.1418%" height="15" fill="rgb(239,167,4)" fg:x="272" fg:w="3"/><text x="13.1044%" y="158.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4149) (6 samples, 0.28%)</title><rect x="12.9962%" y="148" width="0.2836%" height="15" fill="rgb(209,217,16)" fg:x="275" fg:w="6"/><text x="13.2462%" y="158.50"></text></g><g><title>check_bool_indexer (pandas/core/indexing.py:2681) (6 samples, 0.28%)</title><rect x="12.9962%" y="164" width="0.2836%" height="15" fill="rgb(219,88,35)" fg:x="275" fg:w="6"/><text x="13.2462%" y="174.50"></text></g><g><title>check_array_indexer (pandas/core/indexers/utils.py:535) (5 samples, 0.24%)</title><rect x="13.0435%" y="180" width="0.2363%" height="15" fill="rgb(220,193,23)" fg:x="276" fg:w="5"/><text x="13.2935%" y="190.50"></text></g><g><title>__getattr__ (pandas/core/generic.py:6296) (3 samples, 0.14%)</title><rect x="13.1380%" y="196" width="0.1418%" height="15" fill="rgb(230,90,52)" fg:x="278" fg:w="3"/><text x="13.3880%" y="206.50"></text></g><g><title>_can_hold_identifiers_and_holds_name (pandas/core/indexes/base.py:5452) (3 samples, 0.14%)</title><rect x="13.1380%" y="212" width="0.1418%" height="15" fill="rgb(252,106,19)" fg:x="278" fg:w="3"/><text x="13.3880%" y="222.50"></text></g><g><title>copy (pandas/core/generic.py:6811) (5 samples, 0.24%)</title><rect x="13.3270%" y="164" width="0.2363%" height="15" fill="rgb(206,74,20)" fg:x="282" fg:w="5"/><text x="13.5770%" y="174.50"></text></g><g><title>copy (pandas/core/internals/managers.py:604) (3 samples, 0.14%)</title><rect x="13.4216%" y="180" width="0.1418%" height="15" fill="rgb(230,138,44)" fg:x="284" fg:w="3"/><text x="13.6716%" y="190.50"></text></g><g><title>_consolidate_inplace (pandas/core/internals/managers.py:1787) (3 samples, 0.14%)</title><rect x="13.4216%" y="196" width="0.1418%" height="15" fill="rgb(235,182,43)" fg:x="284" fg:w="3"/><text x="13.6716%" y="206.50"></text></g><g><title>is_consolidated (pandas/core/internals/managers.py:1769) (3 samples, 0.14%)</title><rect x="13.4216%" y="212" width="0.1418%" height="15" fill="rgb(242,16,51)" fg:x="284" fg:w="3"/><text x="13.6716%" y="222.50"></text></g><g><title>_consolidate_check (pandas/core/internals/managers.py:1778) (3 samples, 0.14%)</title><rect x="13.4216%" y="228" width="0.1418%" height="15" fill="rgb(248,9,4)" fg:x="284" fg:w="3"/><text x="13.6716%" y="238.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:1778) (3 samples, 0.14%)</title><rect x="13.4216%" y="244" width="0.1418%" height="15" fill="rgb(210,31,22)" fg:x="284" fg:w="3"/><text x="13.6716%" y="254.50"></text></g><g><title>_can_consolidate (pandas/core/internals/blocks.py:223) (3 samples, 0.14%)</title><rect x="13.4216%" y="260" width="0.1418%" height="15" fill="rgb(239,54,39)" fg:x="284" fg:w="3"/><text x="13.6716%" y="270.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4093) (13 samples, 0.61%)</title><rect x="12.9962%" y="132" width="0.6144%" height="15" fill="rgb(230,99,41)" fg:x="275" fg:w="13"/><text x="13.2462%" y="142.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4152) (6 samples, 0.28%)</title><rect x="13.3270%" y="148" width="0.2836%" height="15" fill="rgb(253,106,12)" fg:x="282" fg:w="6"/><text x="13.5770%" y="158.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (5 samples, 0.24%)</title><rect x="13.7051%" y="180" width="0.2363%" height="15" fill="rgb(213,46,41)" fg:x="290" fg:w="5"/><text x="13.9551%" y="190.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:257) (29 samples, 1.37%)</title><rect x="12.6181%" y="116" width="1.3705%" height="15" fill="rgb(215,133,35)" fg:x="267" fg:w="29"/><text x="12.8681%" y="126.50"></text></g><g><title>new_method (pandas/core/ops/common.py:76) (8 samples, 0.38%)</title><rect x="13.6106%" y="132" width="0.3781%" height="15" fill="rgb(213,28,5)" fg:x="288" fg:w="8"/><text x="13.8606%" y="142.50"></text></g><g><title>__eq__ (pandas/core/arraylike.py:40) (7 samples, 0.33%)</title><rect x="13.6578%" y="148" width="0.3308%" height="15" fill="rgb(215,77,49)" fg:x="289" fg:w="7"/><text x="13.9078%" y="158.50"></text></g><g><title>_cmp_method (pandas/core/series.py:6121) (6 samples, 0.28%)</title><rect x="13.7051%" y="164" width="0.2836%" height="15" fill="rgb(248,100,22)" fg:x="290" fg:w="6"/><text x="13.9551%" y="174.50"></text></g><g><title>_interleave (pandas/core/internals/managers.py:1720) (6 samples, 0.28%)</title><rect x="14.0832%" y="180" width="0.2836%" height="15" fill="rgb(208,67,9)" fg:x="298" fg:w="6"/><text x="14.3332%" y="190.50"></text></g><g><title>interleaved_dtype (pandas/core/internals/base.py:394) (6 samples, 0.28%)</title><rect x="14.0832%" y="196" width="0.2836%" height="15" fill="rgb(219,133,21)" fg:x="298" fg:w="6"/><text x="14.3332%" y="206.50"></text></g><g><title>find_common_type (pandas/core/dtypes/cast.py:1466) (3 samples, 0.14%)</title><rect x="14.2250%" y="212" width="0.1418%" height="15" fill="rgb(246,46,29)" fg:x="301" fg:w="3"/><text x="14.4750%" y="222.50"></text></g><g><title>_interleave (pandas/core/internals/managers.py:1735) (4 samples, 0.19%)</title><rect x="14.4612%" y="180" width="0.1890%" height="15" fill="rgb(246,185,52)" fg:x="306" fg:w="4"/><text x="14.7112%" y="190.50"></text></g><g><title>iterrows (pandas/core/frame.py:1553) (15 samples, 0.71%)</title><rect x="14.0359%" y="132" width="0.7089%" height="15" fill="rgb(252,136,11)" fg:x="297" fg:w="15"/><text x="14.2859%" y="142.50"></text></g><g><title>values (pandas/core/frame.py:12664) (15 samples, 0.71%)</title><rect x="14.0359%" y="148" width="0.7089%" height="15" fill="rgb(219,138,53)" fg:x="297" fg:w="15"/><text x="14.2859%" y="158.50"></text></g><g><title>as_array (pandas/core/internals/managers.py:1694) (14 samples, 0.66%)</title><rect x="14.0832%" y="164" width="0.6616%" height="15" fill="rgb(211,51,23)" fg:x="298" fg:w="14"/><text x="14.3332%" y="174.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:264) (22 samples, 1.04%)</title><rect x="14.0359%" y="116" width="1.0397%" height="15" fill="rgb(247,221,28)" fg:x="297" fg:w="22"/><text x="14.2859%" y="126.50"></text></g><g><title>iterrows (pandas/core/frame.py:1554) (7 samples, 0.33%)</title><rect x="14.7448%" y="132" width="0.3308%" height="15" fill="rgb(251,222,45)" fg:x="312" fg:w="7"/><text x="14.9948%" y="142.50"></text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:166) (3 samples, 0.14%)</title><rect x="15.7845%" y="244" width="0.1418%" height="15" fill="rgb(217,162,53)" fg:x="334" fg:w="3"/><text x="16.0345%" y="254.50"></text></g><g><title>_is_uniform_join_units (pandas/core/internals/concat.py:587) (3 samples, 0.14%)</title><rect x="15.7845%" y="260" width="0.1418%" height="15" fill="rgb(229,93,14)" fg:x="334" fg:w="3"/><text x="16.0345%" y="270.50"></text></g><g><title>add_server (evaluation_diff_quantity.py:31) (14 samples, 0.66%)</title><rect x="15.3592%" y="132" width="0.6616%" height="15" fill="rgb(209,67,49)" fg:x="325" fg:w="14"/><text x="15.6092%" y="142.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:911) (14 samples, 0.66%)</title><rect x="15.3592%" y="148" width="0.6616%" height="15" fill="rgb(213,87,29)" fg:x="325" fg:w="14"/><text x="15.6092%" y="158.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:1932) (14 samples, 0.66%)</title><rect x="15.3592%" y="164" width="0.6616%" height="15" fill="rgb(205,151,52)" fg:x="325" fg:w="14"/><text x="15.6092%" y="174.50"></text></g><g><title>_setitem_with_indexer_missing (pandas/core/indexing.py:2328) (13 samples, 0.61%)</title><rect x="15.4064%" y="180" width="0.6144%" height="15" fill="rgb(253,215,39)" fg:x="326" fg:w="13"/><text x="15.6564%" y="190.50"></text></g><g><title>_append (pandas/core/frame.py:10572) (10 samples, 0.47%)</title><rect x="15.5482%" y="196" width="0.4726%" height="15" fill="rgb(221,220,41)" fg:x="329" fg:w="10"/><text x="15.7982%" y="206.50"></text></g><g><title>concat (pandas/core/reshape/concat.py:395) (9 samples, 0.43%)</title><rect x="15.5955%" y="212" width="0.4253%" height="15" fill="rgb(218,133,21)" fg:x="330" fg:w="9"/><text x="15.8455%" y="222.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:684) (8 samples, 0.38%)</title><rect x="15.6427%" y="228" width="0.3781%" height="15" fill="rgb(221,193,43)" fg:x="331" fg:w="8"/><text x="15.8927%" y="238.50"></text></g><g><title>_setitem_single_column (pandas/core/indexing.py:2164) (12 samples, 0.57%)</title><rect x="16.3043%" y="196" width="0.5671%" height="15" fill="rgb(240,128,52)" fg:x="345" fg:w="12"/><text x="16.5543%" y="206.50"></text></g><g><title>dtypes (pandas/core/generic.py:6461) (9 samples, 0.43%)</title><rect x="16.4461%" y="212" width="0.4253%" height="15" fill="rgb(253,114,12)" fg:x="348" fg:w="9"/><text x="16.6961%" y="222.50"></text></g><g><title>column_setitem (pandas/core/internals/managers.py:1337) (3 samples, 0.14%)</title><rect x="16.8715%" y="212" width="0.1418%" height="15" fill="rgb(215,223,47)" fg:x="357" fg:w="3"/><text x="17.1215%" y="222.50"></text></g><g><title>setitem (pandas/core/internals/managers.py:415) (3 samples, 0.14%)</title><rect x="16.8715%" y="228" width="0.1418%" height="15" fill="rgb(248,225,23)" fg:x="357" fg:w="3"/><text x="17.1215%" y="238.50"></text></g><g><title>_setitem_single_column (pandas/core/indexing.py:2175) (5 samples, 0.24%)</title><rect x="16.8715%" y="196" width="0.2363%" height="15" fill="rgb(250,108,0)" fg:x="357" fg:w="5"/><text x="17.1215%" y="206.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:269) (43 samples, 2.03%)</title><rect x="15.1229%" y="116" width="2.0321%" height="15" fill="rgb(228,208,7)" fg:x="320" fg:w="43"/><text x="15.3729%" y="126.50">u..</text></g><g><title>add_server (evaluation_diff_quantity.py:34) (24 samples, 1.13%)</title><rect x="16.0208%" y="132" width="1.1342%" height="15" fill="rgb(244,45,10)" fg:x="339" fg:w="24"/><text x="16.2708%" y="142.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:911) (19 samples, 0.90%)</title><rect x="16.2571%" y="148" width="0.8979%" height="15" fill="rgb(207,125,25)" fg:x="344" fg:w="19"/><text x="16.5071%" y="158.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:1942) (18 samples, 0.85%)</title><rect x="16.3043%" y="164" width="0.8507%" height="15" fill="rgb(210,195,18)" fg:x="345" fg:w="18"/><text x="16.5543%" y="174.50"></text></g><g><title>_setitem_with_indexer_split_path (pandas/core/indexing.py:2035) (18 samples, 0.85%)</title><rect x="16.3043%" y="180" width="0.8507%" height="15" fill="rgb(249,80,12)" fg:x="345" fg:w="18"/><text x="16.5543%" y="190.50"></text></g><g><title>concat (pandas/core/reshape/concat.py:382) (5 samples, 0.24%)</title><rect x="17.1550%" y="132" width="0.2363%" height="15" fill="rgb(221,65,9)" fg:x="363" fg:w="5"/><text x="17.4050%" y="142.50"></text></g><g><title>_get_combined_index (pandas/core/indexes/api.py:156) (5 samples, 0.24%)</title><rect x="17.4386%" y="228" width="0.2363%" height="15" fill="rgb(235,49,36)" fg:x="369" fg:w="5"/><text x="17.6886%" y="238.50"></text></g><g><title>_get_comb_axis (pandas/core/reshape/concat.py:709) (6 samples, 0.28%)</title><rect x="17.4386%" y="196" width="0.2836%" height="15" fill="rgb(225,32,20)" fg:x="369" fg:w="6"/><text x="17.6886%" y="206.50"></text></g><g><title>get_objs_combined_axis (pandas/core/indexes/api.py:103) (6 samples, 0.28%)</title><rect x="17.4386%" y="212" width="0.2836%" height="15" fill="rgb(215,141,46)" fg:x="369" fg:w="6"/><text x="17.6886%" y="222.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:671) (8 samples, 0.38%)</title><rect x="17.4386%" y="148" width="0.3781%" height="15" fill="rgb(250,160,47)" fg:x="369" fg:w="8"/><text x="17.6886%" y="158.50"></text></g><g><title>new_axes (pandas/core/reshape/concat.py:702) (8 samples, 0.38%)</title><rect x="17.4386%" y="164" width="0.3781%" height="15" fill="rgb(216,222,40)" fg:x="369" fg:w="8"/><text x="17.6886%" y="174.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/reshape/concat.py:703) (8 samples, 0.38%)</title><rect x="17.4386%" y="180" width="0.3781%" height="15" fill="rgb(234,217,39)" fg:x="369" fg:w="8"/><text x="17.6886%" y="190.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:679) (3 samples, 0.14%)</title><rect x="17.8166%" y="148" width="0.1418%" height="15" fill="rgb(207,178,40)" fg:x="377" fg:w="3"/><text x="18.0666%" y="158.50"></text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:157) (9 samples, 0.43%)</title><rect x="18.0057%" y="164" width="0.4253%" height="15" fill="rgb(221,136,13)" fg:x="381" fg:w="9"/><text x="18.2557%" y="174.50"></text></g><g><title>_get_combined_plan (pandas/core/internals/concat.py:313) (8 samples, 0.38%)</title><rect x="18.0529%" y="180" width="0.3781%" height="15" fill="rgb(249,199,10)" fg:x="382" fg:w="8"/><text x="18.3029%" y="190.50"></text></g><g><title>_get_block_for_concat_plan (pandas/core/internals/concat.py:342) (4 samples, 0.19%)</title><rect x="18.2420%" y="196" width="0.1890%" height="15" fill="rgb(249,222,13)" fg:x="386" fg:w="4"/><text x="18.4920%" y="206.50"></text></g><g><title>_is_uniform_join_units (pandas/core/internals/concat.py:584) (4 samples, 0.19%)</title><rect x="18.4783%" y="180" width="0.1890%" height="15" fill="rgb(244,185,38)" fg:x="391" fg:w="4"/><text x="18.7283%" y="190.50"></text></g><g><title>_is_uniform_join_units (pandas/core/internals/concat.py:587) (5 samples, 0.24%)</title><rect x="18.6673%" y="180" width="0.2363%" height="15" fill="rgb(236,202,9)" fg:x="395" fg:w="5"/><text x="18.9173%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/internals/concat.py:588) (5 samples, 0.24%)</title><rect x="18.6673%" y="196" width="0.2363%" height="15" fill="rgb(250,229,37)" fg:x="395" fg:w="5"/><text x="18.9173%" y="206.50"></text></g><g><title>is_na (pandas/core/internals/concat.py:408) (4 samples, 0.19%)</title><rect x="19.0926%" y="212" width="0.1890%" height="15" fill="rgb(206,174,23)" fg:x="404" fg:w="4"/><text x="19.3426%" y="222.50"></text></g><g><title>__getitem__ (pandas/core/arrays/_mixins.py:286) (4 samples, 0.19%)</title><rect x="19.0926%" y="228" width="0.1890%" height="15" fill="rgb(211,33,43)" fg:x="404" fg:w="4"/><text x="19.3426%" y="238.50"></text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:166) (19 samples, 0.90%)</title><rect x="18.4310%" y="164" width="0.8979%" height="15" fill="rgb(245,58,50)" fg:x="390" fg:w="19"/><text x="18.6810%" y="174.50"></text></g><g><title>_is_uniform_join_units (pandas/core/internals/concat.py:597) (9 samples, 0.43%)</title><rect x="18.9036%" y="180" width="0.4253%" height="15" fill="rgb(244,68,36)" fg:x="400" fg:w="9"/><text x="19.1536%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/internals/concat.py:597) (8 samples, 0.38%)</title><rect x="18.9509%" y="196" width="0.3781%" height="15" fill="rgb(232,229,15)" fg:x="401" fg:w="8"/><text x="19.2009%" y="206.50"></text></g><g><title>_hash_ndarray (pandas/core/util/hashing.py:326) (3 samples, 0.14%)</title><rect x="19.8960%" y="308" width="0.1418%" height="15" fill="rgb(254,30,23)" fg:x="421" fg:w="3"/><text x="20.1460%" y="318.50"></text></g><g><title>_hash_categories (pandas/core/dtypes/dtypes.py:508) (8 samples, 0.38%)</title><rect x="19.8488%" y="276" width="0.3781%" height="15" fill="rgb(235,160,14)" fg:x="420" fg:w="8"/><text x="20.0988%" y="286.50"></text></g><g><title>hash_array (pandas/core/util/hashing.py:279) (8 samples, 0.38%)</title><rect x="19.8488%" y="292" width="0.3781%" height="15" fill="rgb(212,155,44)" fg:x="420" fg:w="8"/><text x="20.0988%" y="302.50"></text></g><g><title>union_categoricals (pandas/core/dtypes/concat.py:308) (12 samples, 0.57%)</title><rect x="19.8015%" y="212" width="0.5671%" height="15" fill="rgb(226,2,50)" fg:x="419" fg:w="12"/><text x="20.0515%" y="222.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/dtypes/concat.py:308) (12 samples, 0.57%)</title><rect x="19.8015%" y="228" width="0.5671%" height="15" fill="rgb(234,177,6)" fg:x="419" fg:w="12"/><text x="20.0515%" y="238.50"></text></g><g><title>_categories_match_up_to_permutation (pandas/core/arrays/categorical.py:2562) (12 samples, 0.57%)</title><rect x="19.8015%" y="244" width="0.5671%" height="15" fill="rgb(217,24,9)" fg:x="419" fg:w="12"/><text x="20.0515%" y="254.50"></text></g><g><title>__hash__ (pandas/core/dtypes/dtypes.py:399) (12 samples, 0.57%)</title><rect x="19.8015%" y="260" width="0.5671%" height="15" fill="rgb(220,13,46)" fg:x="419" fg:w="12"/><text x="20.0515%" y="270.50"></text></g><g><title>union_categoricals (pandas/core/dtypes/concat.py:313) (4 samples, 0.19%)</title><rect x="20.3686%" y="212" width="0.1890%" height="15" fill="rgb(239,221,27)" fg:x="431" fg:w="4"/><text x="20.6186%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/dtypes/concat.py:313) (4 samples, 0.19%)</title><rect x="20.3686%" y="228" width="0.1890%" height="15" fill="rgb(222,198,25)" fg:x="431" fg:w="4"/><text x="20.6186%" y="238.50"></text></g><g><title>union_categoricals (pandas/core/dtypes/concat.py:347) (3 samples, 0.14%)</title><rect x="20.5577%" y="212" width="0.1418%" height="15" fill="rgb(211,99,13)" fg:x="435" fg:w="3"/><text x="20.8077%" y="222.50"></text></g><g><title>__init__ (pandas/core/dtypes/dtypes.py:221) (3 samples, 0.14%)</title><rect x="20.5577%" y="228" width="0.1418%" height="15" fill="rgb(232,111,31)" fg:x="435" fg:w="3"/><text x="20.8077%" y="238.50"></text></g><g><title>_finalize (pandas/core/dtypes/dtypes.py:378) (3 samples, 0.14%)</title><rect x="20.5577%" y="244" width="0.1418%" height="15" fill="rgb(245,82,37)" fg:x="435" fg:w="3"/><text x="20.8077%" y="254.50"></text></g><g><title>concatenate_managers (pandas/core/internals/concat.py:180) (29 samples, 1.37%)</title><rect x="19.5180%" y="164" width="1.3705%" height="15" fill="rgb(227,149,46)" fg:x="413" fg:w="29"/><text x="19.7680%" y="174.50"></text></g><g><title>concat_compat (pandas/core/dtypes/concat.py:83) (28 samples, 1.32%)</title><rect x="19.5652%" y="180" width="1.3233%" height="15" fill="rgb(218,36,50)" fg:x="414" fg:w="28"/><text x="19.8152%" y="190.50"></text></g><g><title>_concat_same_type (pandas/core/arrays/categorical.py:2527) (26 samples, 1.23%)</title><rect x="19.6597%" y="196" width="1.2287%" height="15" fill="rgb(226,80,48)" fg:x="416" fg:w="26"/><text x="19.9097%" y="206.50"></text></g><g><title>union_categoricals (pandas/core/dtypes/concat.py:348) (4 samples, 0.19%)</title><rect x="20.6994%" y="212" width="0.1890%" height="15" fill="rgb(238,224,15)" fg:x="438" fg:w="4"/><text x="20.9494%" y="222.50"></text></g><g><title>_simple_new (pandas/core/arrays/categorical.py:368) (4 samples, 0.19%)</title><rect x="20.6994%" y="228" width="0.1890%" height="15" fill="rgb(241,136,10)" fg:x="438" fg:w="4"/><text x="20.9494%" y="238.50"></text></g><g><title>get_result (pandas/core/reshape/concat.py:684) (68 samples, 3.21%)</title><rect x="17.9584%" y="148" width="3.2136%" height="15" fill="rgb(208,32,45)" fg:x="380" fg:w="68"/><text x="18.2084%" y="158.50">get..</text></g><g><title>update_fleet (evaluation_diff_quantity.py:271) (87 samples, 4.11%)</title><rect x="17.1550%" y="116" width="4.1115%" height="15" fill="rgb(207,135,9)" fg:x="363" fg:w="87"/><text x="17.4050%" y="126.50">upda..</text></g><g><title>concat (pandas/core/reshape/concat.py:395) (82 samples, 3.88%)</title><rect x="17.3913%" y="132" width="3.8752%" height="15" fill="rgb(206,86,44)" fg:x="368" fg:w="82"/><text x="17.6413%" y="142.50">conc..</text></g><g><title>_ixs (pandas/core/frame.py:4010) (3 samples, 0.14%)</title><rect x="21.3138%" y="164" width="0.1418%" height="15" fill="rgb(245,177,15)" fg:x="451" fg:w="3"/><text x="21.5638%" y="174.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4617) (3 samples, 0.14%)</title><rect x="21.5501%" y="180" width="0.1418%" height="15" fill="rgb(206,64,50)" fg:x="456" fg:w="3"/><text x="21.8001%" y="190.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (3 samples, 0.14%)</title><rect x="21.5501%" y="196" width="0.1418%" height="15" fill="rgb(234,36,40)" fg:x="456" fg:w="3"/><text x="21.8001%" y="206.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (9 samples, 0.43%)</title><rect x="21.3138%" y="132" width="0.4253%" height="15" fill="rgb(213,64,8)" fg:x="451" fg:w="9"/><text x="21.5638%" y="142.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4639) (9 samples, 0.43%)</title><rect x="21.3138%" y="148" width="0.4253%" height="15" fill="rgb(210,75,36)" fg:x="451" fg:w="9"/><text x="21.5638%" y="158.50"></text></g><g><title>_ixs (pandas/core/frame.py:4011) (6 samples, 0.28%)</title><rect x="21.4556%" y="164" width="0.2836%" height="15" fill="rgb(229,88,21)" fg:x="454" fg:w="6"/><text x="21.7056%" y="174.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (3 samples, 0.14%)</title><rect x="21.7864%" y="180" width="0.1418%" height="15" fill="rgb(252,204,47)" fg:x="461" fg:w="3"/><text x="22.0364%" y="190.50"></text></g><g><title>arithmetic_op (pandas/core/ops/array_ops.py:283) (3 samples, 0.14%)</title><rect x="21.7864%" y="196" width="0.1418%" height="15" fill="rgb(208,77,27)" fg:x="461" fg:w="3"/><text x="22.0364%" y="206.50"></text></g><g><title>_na_arithmetic_op (pandas/core/ops/array_ops.py:218) (3 samples, 0.14%)</title><rect x="21.7864%" y="212" width="0.1418%" height="15" fill="rgb(221,76,26)" fg:x="461" fg:w="3"/><text x="22.0364%" y="222.50"></text></g><g><title>evaluate (pandas/core/computation/expressions.py:242) (3 samples, 0.14%)</title><rect x="21.7864%" y="228" width="0.1418%" height="15" fill="rgb(225,139,18)" fg:x="461" fg:w="3"/><text x="22.0364%" y="238.50"></text></g><g><title>_evaluate_standard (pandas/core/computation/expressions.py:73) (3 samples, 0.14%)</title><rect x="21.7864%" y="244" width="0.1418%" height="15" fill="rgb(230,137,11)" fg:x="461" fg:w="3"/><text x="22.0364%" y="254.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:277) (17 samples, 0.80%)</title><rect x="21.2665%" y="116" width="0.8034%" height="15" fill="rgb(212,28,1)" fg:x="450" fg:w="17"/><text x="21.5165%" y="126.50"></text></g><g><title>new_method (pandas/core/ops/common.py:76) (7 samples, 0.33%)</title><rect x="21.7391%" y="132" width="0.3308%" height="15" fill="rgb(248,164,17)" fg:x="460" fg:w="7"/><text x="21.9891%" y="142.50"></text></g><g><title>__add__ (pandas/core/arraylike.py:186) (7 samples, 0.33%)</title><rect x="21.7391%" y="148" width="0.3308%" height="15" fill="rgb(222,171,42)" fg:x="460" fg:w="7"/><text x="21.9891%" y="158.50"></text></g><g><title>_arith_method (pandas/core/series.py:6135) (7 samples, 0.33%)</title><rect x="21.7391%" y="164" width="0.3308%" height="15" fill="rgb(243,84,45)" fg:x="460" fg:w="7"/><text x="21.9891%" y="174.50"></text></g><g><title>_arith_method (pandas/core/base.py:1384) (3 samples, 0.14%)</title><rect x="21.9282%" y="180" width="0.1418%" height="15" fill="rgb(252,49,23)" fg:x="464" fg:w="3"/><text x="22.1782%" y="190.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (3 samples, 0.14%)</title><rect x="21.9282%" y="196" width="0.1418%" height="15" fill="rgb(215,19,7)" fg:x="464" fg:w="3"/><text x="22.1782%" y="206.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:278) (3 samples, 0.14%)</title><rect x="22.0699%" y="116" width="0.1418%" height="15" fill="rgb(238,81,41)" fg:x="467" fg:w="3"/><text x="22.3199%" y="126.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4067) (3 samples, 0.14%)</title><rect x="22.2590%" y="132" width="0.1418%" height="15" fill="rgb(210,199,37)" fg:x="471" fg:w="3"/><text x="22.5090%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (3 samples, 0.14%)</title><rect x="22.5898%" y="132" width="0.1418%" height="15" fill="rgb(244,192,49)" fg:x="478" fg:w="3"/><text x="22.8398%" y="142.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:436) (3 samples, 0.14%)</title><rect x="23.2042%" y="228" width="0.1418%" height="15" fill="rgb(226,211,11)" fg:x="491" fg:w="3"/><text x="23.4542%" y="238.50"></text></g><g><title>arithmetic_op (pandas/core/ops/array_ops.py:283) (4 samples, 0.19%)</title><rect x="23.4405%" y="228" width="0.1890%" height="15" fill="rgb(236,162,54)" fg:x="496" fg:w="4"/><text x="23.6905%" y="238.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (11 samples, 0.52%)</title><rect x="23.1569%" y="212" width="0.5198%" height="15" fill="rgb(220,229,9)" fg:x="490" fg:w="11"/><text x="23.4069%" y="222.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:625) (9 samples, 0.43%)</title><rect x="23.8185%" y="260" width="0.4253%" height="15" fill="rgb(250,87,22)" fg:x="504" fg:w="9"/><text x="24.0685%" y="270.50"></text></g><g><title>_try_cast (pandas/core/construction.py:818) (9 samples, 0.43%)</title><rect x="23.8185%" y="276" width="0.4253%" height="15" fill="rgb(239,43,17)" fg:x="504" fg:w="9"/><text x="24.0685%" y="286.50"></text></g><g><title>maybe_cast_to_integer_array (pandas/core/dtypes/cast.py:1660) (7 samples, 0.33%)</title><rect x="23.9130%" y="292" width="0.3308%" height="15" fill="rgb(231,177,25)" fg:x="506" fg:w="7"/><text x="24.1630%" y="302.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (14 samples, 0.66%)</title><rect x="23.7240%" y="244" width="0.6616%" height="15" fill="rgb(219,179,1)" fg:x="502" fg:w="14"/><text x="23.9740%" y="254.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:659) (3 samples, 0.14%)</title><rect x="24.2439%" y="260" width="0.1418%" height="15" fill="rgb(238,219,53)" fg:x="513" fg:w="3"/><text x="24.4939%" y="270.50"></text></g><g><title>_sanitize_ndim (pandas/core/construction.py:712) (3 samples, 0.14%)</title><rect x="24.2439%" y="276" width="0.1418%" height="15" fill="rgb(232,167,36)" fg:x="513" fg:w="3"/><text x="24.4939%" y="286.50"></text></g><g><title>_maybe_repeat (pandas/core/construction.py:764) (3 samples, 0.14%)</title><rect x="24.2439%" y="292" width="0.1418%" height="15" fill="rgb(244,19,51)" fg:x="513" fg:w="3"/><text x="24.4939%" y="302.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (3 samples, 0.14%)</title><rect x="24.4329%" y="244" width="0.1418%" height="15" fill="rgb(224,6,22)" fg:x="517" fg:w="3"/><text x="24.6829%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:592) (3 samples, 0.14%)</title><rect x="24.5747%" y="244" width="0.1418%" height="15" fill="rgb(224,145,5)" fg:x="520" fg:w="3"/><text x="24.8247%" y="254.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (24 samples, 1.13%)</title><rect x="23.6767%" y="228" width="1.1342%" height="15" fill="rgb(234,130,49)" fg:x="501" fg:w="24"/><text x="23.9267%" y="238.50"></text></g><g><title>_inplace_method (pandas/core/generic.py:12689) (46 samples, 2.17%)</title><rect x="22.8261%" y="148" width="2.1739%" height="15" fill="rgb(254,6,2)" fg:x="483" fg:w="46"/><text x="23.0761%" y="158.50">_..</text></g><g><title>new_method (pandas/core/ops/common.py:76) (46 samples, 2.17%)</title><rect x="22.8261%" y="164" width="2.1739%" height="15" fill="rgb(208,96,46)" fg:x="483" fg:w="46"/><text x="23.0761%" y="174.50">n..</text></g><g><title>__add__ (pandas/core/arraylike.py:186) (46 samples, 2.17%)</title><rect x="22.8261%" y="180" width="2.1739%" height="15" fill="rgb(239,3,39)" fg:x="483" fg:w="46"/><text x="23.0761%" y="190.50">_..</text></g><g><title>_arith_method (pandas/core/series.py:6135) (46 samples, 2.17%)</title><rect x="22.8261%" y="196" width="2.1739%" height="15" fill="rgb(233,210,1)" fg:x="483" fg:w="46"/><text x="23.0761%" y="206.50">_..</text></g><g><title>_arith_method (pandas/core/base.py:1384) (28 samples, 1.32%)</title><rect x="23.6767%" y="212" width="1.3233%" height="15" fill="rgb(244,137,37)" fg:x="501" fg:w="28"/><text x="23.9267%" y="222.50"></text></g><g><title>_get_axis (pandas/core/generic.py:588) (3 samples, 0.14%)</title><rect x="25.0473%" y="196" width="0.1418%" height="15" fill="rgb(240,136,2)" fg:x="530" fg:w="3"/><text x="25.2973%" y="206.50"></text></g><g><title>_inplace_method (pandas/core/generic.py:12693) (5 samples, 0.24%)</title><rect x="25.0000%" y="148" width="0.2363%" height="15" fill="rgb(239,18,37)" fg:x="529" fg:w="5"/><text x="25.2500%" y="158.50"></text></g><g><title>_indexed_same (pandas/core/generic.py:1441) (5 samples, 0.24%)</title><rect x="25.0000%" y="164" width="0.2363%" height="15" fill="rgb(218,185,22)" fg:x="529" fg:w="5"/><text x="25.2500%" y="174.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/generic.py:1442) (5 samples, 0.24%)</title><rect x="25.0000%" y="180" width="0.2363%" height="15" fill="rgb(225,218,4)" fg:x="529" fg:w="5"/><text x="25.2500%" y="190.50"></text></g><g><title>_inplace_method (pandas/core/generic.py:12701) (6 samples, 0.28%)</title><rect x="25.2836%" y="148" width="0.2836%" height="15" fill="rgb(230,182,32)" fg:x="535" fg:w="6"/><text x="25.5336%" y="158.50"></text></g><g><title>setitem_inplace (pandas/core/internals/managers.py:2044) (5 samples, 0.24%)</title><rect x="25.3308%" y="164" width="0.2363%" height="15" fill="rgb(242,56,43)" fg:x="536" fg:w="5"/><text x="25.5808%" y="174.50"></text></g><g><title>__iadd__ (pandas/core/generic.py:12719) (61 samples, 2.88%)</title><rect x="22.7316%" y="132" width="2.8828%" height="15" fill="rgb(233,99,24)" fg:x="481" fg:w="61"/><text x="22.9816%" y="142.50">__..</text></g><g><title>__setitem__ (pandas/core/frame.py:4298) (3 samples, 0.14%)</title><rect x="25.7089%" y="132" width="0.1418%" height="15" fill="rgb(234,209,42)" fg:x="544" fg:w="3"/><text x="25.9589%" y="142.50"></text></g><g><title>_set_item (pandas/core/frame.py:4524) (4 samples, 0.19%)</title><rect x="25.9452%" y="148" width="0.1890%" height="15" fill="rgb(227,7,12)" fg:x="549" fg:w="4"/><text x="26.1952%" y="158.50"></text></g><g><title>_set_item (pandas/core/frame.py:4527) (3 samples, 0.14%)</title><rect x="26.1342%" y="148" width="0.1418%" height="15" fill="rgb(245,203,43)" fg:x="553" fg:w="3"/><text x="26.3842%" y="158.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:295) (92 samples, 4.35%)</title><rect x="22.2117%" y="116" width="4.3478%" height="15" fill="rgb(238,205,33)" fg:x="470" fg:w="92"/><text x="22.4617%" y="126.50">updat..</text></g><g><title>__setitem__ (pandas/core/frame.py:4311) (13 samples, 0.61%)</title><rect x="25.9452%" y="132" width="0.6144%" height="15" fill="rgb(231,56,7)" fg:x="549" fg:w="13"/><text x="26.1952%" y="142.50"></text></g><g><title>_set_item (pandas/core/frame.py:4538) (6 samples, 0.28%)</title><rect x="26.2760%" y="148" width="0.2836%" height="15" fill="rgb(244,186,29)" fg:x="556" fg:w="6"/><text x="26.5260%" y="158.50"></text></g><g><title>_set_item_mgr (pandas/core/frame.py:4490) (4 samples, 0.19%)</title><rect x="26.3705%" y="164" width="0.1890%" height="15" fill="rgb(234,111,31)" fg:x="558" fg:w="4"/><text x="26.6205%" y="174.50"></text></g><g><title>_iset_item_mgr (pandas/core/frame.py:4478) (4 samples, 0.19%)</title><rect x="26.3705%" y="180" width="0.1890%" height="15" fill="rgb(241,149,10)" fg:x="558" fg:w="4"/><text x="26.6205%" y="190.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:114) (3 samples, 0.14%)</title><rect x="26.9849%" y="260" width="0.1418%" height="15" fill="rgb(249,206,44)" fg:x="571" fg:w="3"/><text x="27.2349%" y="270.50"></text></g><g><title>take (pandas/core/arrays/_mixins.py:168) (3 samples, 0.14%)</title><rect x="26.9849%" y="276" width="0.1418%" height="15" fill="rgb(251,153,30)" fg:x="571" fg:w="3"/><text x="27.2349%" y="286.50"></text></g><g><title>_take_nd_ndarray (pandas/core/array_algos/take.py:133) (5 samples, 0.24%)</title><rect x="27.1267%" y="276" width="0.2363%" height="15" fill="rgb(239,152,38)" fg:x="574" fg:w="5"/><text x="27.3767%" y="286.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1307) (12 samples, 0.57%)</title><rect x="26.9849%" y="244" width="0.5671%" height="15" fill="rgb(249,139,47)" fg:x="571" fg:w="12"/><text x="27.2349%" y="254.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (9 samples, 0.43%)</title><rect x="27.1267%" y="260" width="0.4253%" height="15" fill="rgb(244,64,35)" fg:x="574" fg:w="9"/><text x="27.3767%" y="270.50"></text></g><g><title>take (pandas/core/generic.py:4133) (15 samples, 0.71%)</title><rect x="26.9376%" y="180" width="0.7089%" height="15" fill="rgb(216,46,15)" fg:x="570" fg:w="15"/><text x="27.1876%" y="190.50"></text></g><g><title>take (pandas/core/internals/managers.py:894) (15 samples, 0.71%)</title><rect x="26.9376%" y="196" width="0.7089%" height="15" fill="rgb(250,74,19)" fg:x="570" fg:w="15"/><text x="27.1876%" y="206.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:687) (15 samples, 0.71%)</title><rect x="26.9376%" y="212" width="0.7089%" height="15" fill="rgb(249,42,33)" fg:x="570" fg:w="15"/><text x="27.1876%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:688) (15 samples, 0.71%)</title><rect x="26.9376%" y="228" width="0.7089%" height="15" fill="rgb(242,149,17)" fg:x="570" fg:w="15"/><text x="27.1876%" y="238.50"></text></g><g><title>take (pandas/core/generic.py:4135) (3 samples, 0.14%)</title><rect x="27.6465%" y="180" width="0.1418%" height="15" fill="rgb(244,29,21)" fg:x="585" fg:w="3"/><text x="27.8965%" y="190.50"></text></g><g><title>_get_block_manager_axis (pandas/core/generic.py:596) (3 samples, 0.14%)</title><rect x="27.6465%" y="196" width="0.1418%" height="15" fill="rgb(220,130,37)" fg:x="585" fg:w="3"/><text x="27.8965%" y="206.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:301) (25 samples, 1.18%)</title><rect x="26.6541%" y="116" width="1.1815%" height="15" fill="rgb(211,67,2)" fg:x="564" fg:w="25"/><text x="26.9041%" y="126.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4093) (24 samples, 1.13%)</title><rect x="26.7013%" y="132" width="1.1342%" height="15" fill="rgb(235,68,52)" fg:x="565" fg:w="24"/><text x="26.9513%" y="142.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4155) (20 samples, 0.95%)</title><rect x="26.8904%" y="148" width="0.9452%" height="15" fill="rgb(246,142,3)" fg:x="569" fg:w="20"/><text x="27.1404%" y="158.50"></text></g><g><title>_take_with_is_copy (pandas/core/generic.py:4153) (20 samples, 0.95%)</title><rect x="26.8904%" y="164" width="0.9452%" height="15" fill="rgb(241,25,7)" fg:x="569" fg:w="20"/><text x="27.1404%" y="174.50"></text></g><g><title>_hash_categories (pandas/core/dtypes/dtypes.py:508) (4 samples, 0.19%)</title><rect x="27.8828%" y="244" width="0.1890%" height="15" fill="rgb(242,119,39)" fg:x="590" fg:w="4"/><text x="28.1328%" y="254.50"></text></g><g><title>hash_array (pandas/core/util/hashing.py:279) (4 samples, 0.19%)</title><rect x="27.8828%" y="260" width="0.1890%" height="15" fill="rgb(241,98,45)" fg:x="590" fg:w="4"/><text x="28.1328%" y="270.50"></text></g><g><title>_interleave (pandas/core/internals/managers.py:1720) (5 samples, 0.24%)</title><rect x="27.8828%" y="180" width="0.2363%" height="15" fill="rgb(254,28,30)" fg:x="590" fg:w="5"/><text x="28.1328%" y="190.50"></text></g><g><title>interleaved_dtype (pandas/core/internals/base.py:394) (5 samples, 0.24%)</title><rect x="27.8828%" y="196" width="0.2363%" height="15" fill="rgb(241,142,54)" fg:x="590" fg:w="5"/><text x="28.1328%" y="206.50"></text></g><g><title>find_common_type (pandas/core/dtypes/cast.py:1461) (5 samples, 0.24%)</title><rect x="27.8828%" y="212" width="0.2363%" height="15" fill="rgb(222,85,15)" fg:x="590" fg:w="5"/><text x="28.1328%" y="222.50"></text></g><g><title>__hash__ (pandas/core/dtypes/dtypes.py:399) (5 samples, 0.24%)</title><rect x="27.8828%" y="228" width="0.2363%" height="15" fill="rgb(210,85,47)" fg:x="590" fg:w="5"/><text x="28.1328%" y="238.50"></text></g><g><title>_interleave (pandas/core/internals/managers.py:1735) (3 samples, 0.14%)</title><rect x="28.2136%" y="180" width="0.1418%" height="15" fill="rgb(224,206,25)" fg:x="597" fg:w="3"/><text x="28.4636%" y="190.50"></text></g><g><title>iterrows (pandas/core/frame.py:1553) (12 samples, 0.57%)</title><rect x="27.8828%" y="132" width="0.5671%" height="15" fill="rgb(243,201,19)" fg:x="590" fg:w="12"/><text x="28.1328%" y="142.50"></text></g><g><title>values (pandas/core/frame.py:12664) (12 samples, 0.57%)</title><rect x="27.8828%" y="148" width="0.5671%" height="15" fill="rgb(236,59,4)" fg:x="590" fg:w="12"/><text x="28.1328%" y="158.50"></text></g><g><title>as_array (pandas/core/internals/managers.py:1694) (12 samples, 0.57%)</title><rect x="27.8828%" y="164" width="0.5671%" height="15" fill="rgb(254,179,45)" fg:x="590" fg:w="12"/><text x="28.1328%" y="174.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:302) (15 samples, 0.71%)</title><rect x="27.8355%" y="116" width="0.7089%" height="15" fill="rgb(226,14,10)" fg:x="589" fg:w="15"/><text x="28.0855%" y="126.50"></text></g><g><title>remove_server (evaluation_diff_quantity.py:42) (9 samples, 0.43%)</title><rect x="28.6389%" y="132" width="0.4253%" height="15" fill="rgb(244,27,41)" fg:x="606" fg:w="9"/><text x="28.8889%" y="142.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:911) (7 samples, 0.33%)</title><rect x="28.7335%" y="148" width="0.3308%" height="15" fill="rgb(235,35,32)" fg:x="608" fg:w="7"/><text x="28.9835%" y="158.50"></text></g><g><title>_setitem_with_indexer (pandas/core/indexing.py:1942) (7 samples, 0.33%)</title><rect x="28.7335%" y="164" width="0.3308%" height="15" fill="rgb(218,68,31)" fg:x="608" fg:w="7"/><text x="28.9835%" y="174.50"></text></g><g><title>_setitem_with_indexer_split_path (pandas/core/indexing.py:2035) (5 samples, 0.24%)</title><rect x="28.8280%" y="180" width="0.2363%" height="15" fill="rgb(207,120,37)" fg:x="610" fg:w="5"/><text x="29.0780%" y="190.50"></text></g><g><title>_setitem_single_column (pandas/core/indexing.py:2175) (4 samples, 0.19%)</title><rect x="28.8752%" y="196" width="0.1890%" height="15" fill="rgb(227,98,0)" fg:x="611" fg:w="4"/><text x="29.1252%" y="206.50"></text></g><g><title>column_setitem (pandas/core/internals/managers.py:1337) (3 samples, 0.14%)</title><rect x="28.9225%" y="212" width="0.1418%" height="15" fill="rgb(207,7,3)" fg:x="612" fg:w="3"/><text x="29.1725%" y="222.50"></text></g><g><title>setitem (pandas/core/internals/managers.py:415) (3 samples, 0.14%)</title><rect x="28.9225%" y="228" width="0.1418%" height="15" fill="rgb(206,98,19)" fg:x="612" fg:w="3"/><text x="29.1725%" y="238.50"></text></g><g><title>apply (pandas/core/internals/managers.py:366) (3 samples, 0.14%)</title><rect x="28.9225%" y="244" width="0.1418%" height="15" fill="rgb(217,5,26)" fg:x="612" fg:w="3"/><text x="29.1725%" y="254.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:308) (12 samples, 0.57%)</title><rect x="28.6389%" y="116" width="0.5671%" height="15" fill="rgb(235,190,38)" fg:x="606" fg:w="12"/><text x="28.8889%" y="126.50"></text></g><g><title>take (pandas/core/internals/managers.py:891) (3 samples, 0.14%)</title><rect x="29.3006%" y="196" width="0.1418%" height="15" fill="rgb(247,86,24)" fg:x="620" fg:w="3"/><text x="29.5506%" y="206.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:687) (3 samples, 0.14%)</title><rect x="29.4423%" y="212" width="0.1418%" height="15" fill="rgb(205,101,16)" fg:x="623" fg:w="3"/><text x="29.6923%" y="222.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:688) (3 samples, 0.14%)</title><rect x="29.4423%" y="228" width="0.1418%" height="15" fill="rgb(246,168,33)" fg:x="623" fg:w="3"/><text x="29.6923%" y="238.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1307) (3 samples, 0.14%)</title><rect x="29.4423%" y="244" width="0.1418%" height="15" fill="rgb(231,114,1)" fg:x="623" fg:w="3"/><text x="29.6923%" y="254.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:114) (3 samples, 0.14%)</title><rect x="29.4423%" y="260" width="0.1418%" height="15" fill="rgb(207,184,53)" fg:x="623" fg:w="3"/><text x="29.6923%" y="270.50"></text></g><g><title>take (pandas/core/arrays/_mixins.py:168) (3 samples, 0.14%)</title><rect x="29.4423%" y="276" width="0.1418%" height="15" fill="rgb(224,95,51)" fg:x="623" fg:w="3"/><text x="29.6923%" y="286.50"></text></g><g><title>take (pandas/core/algorithms.py:1234) (3 samples, 0.14%)</title><rect x="29.4423%" y="292" width="0.1418%" height="15" fill="rgb(212,188,45)" fg:x="623" fg:w="3"/><text x="29.6923%" y="302.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (3 samples, 0.14%)</title><rect x="29.4423%" y="308" width="0.1418%" height="15" fill="rgb(223,154,38)" fg:x="623" fg:w="3"/><text x="29.6923%" y="318.50"></text></g><g><title>update_fleet (evaluation_diff_quantity.py:309) (9 samples, 0.43%)</title><rect x="29.2060%" y="116" width="0.4253%" height="15" fill="rgb(251,22,52)" fg:x="618" fg:w="9"/><text x="29.4560%" y="126.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4093) (9 samples, 0.43%)</title><rect x="29.2060%" y="132" width="0.4253%" height="15" fill="rgb(229,209,22)" fg:x="618" fg:w="9"/><text x="29.4560%" y="142.50"></text></g><g><title>_getitem_bool_array (pandas/core/frame.py:4155) (7 samples, 0.33%)</title><rect x="29.3006%" y="148" width="0.3308%" height="15" fill="rgb(234,138,34)" fg:x="620" fg:w="7"/><text x="29.5506%" y="158.50"></text></g><g><title>_take_with_is_copy (pandas/core/generic.py:4153) (7 samples, 0.33%)</title><rect x="29.3006%" y="164" width="0.3308%" height="15" fill="rgb(212,95,11)" fg:x="620" fg:w="7"/><text x="29.5506%" y="174.50"></text></g><g><title>take (pandas/core/generic.py:4133) (7 samples, 0.33%)</title><rect x="29.3006%" y="180" width="0.3308%" height="15" fill="rgb(240,179,47)" fg:x="620" fg:w="7"/><text x="29.5506%" y="190.50"></text></g><g><title>take (pandas/core/internals/managers.py:894) (4 samples, 0.19%)</title><rect x="29.4423%" y="196" width="0.1890%" height="15" fill="rgb(240,163,11)" fg:x="623" fg:w="4"/><text x="29.6923%" y="206.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:369) (364 samples, 17.20%)</title><rect x="12.5709%" y="100" width="17.2023%" height="15" fill="rgb(236,37,12)" fg:x="266" fg:w="364"/><text x="12.8209%" y="110.50">SA_evaluation_function (eva..</text></g><g><title>update_fleet (evaluation_diff_quantity.py:311) (3 samples, 0.14%)</title><rect x="29.6314%" y="116" width="0.1418%" height="15" fill="rgb(232,164,16)" fg:x="627" fg:w="3"/><text x="29.8814%" y="126.50"></text></g><g><title>copy (pandas/core/internals/managers.py:586) (4 samples, 0.19%)</title><rect x="29.8677%" y="148" width="0.1890%" height="15" fill="rgb(244,205,15)" fg:x="632" fg:w="4"/><text x="30.1177%" y="158.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:586) (4 samples, 0.19%)</title><rect x="29.8677%" y="164" width="0.1890%" height="15" fill="rgb(223,117,47)" fg:x="632" fg:w="4"/><text x="30.1177%" y="174.50"></text></g><g><title>copy_func (pandas/core/internals/managers.py:584) (3 samples, 0.14%)</title><rect x="29.9149%" y="180" width="0.1418%" height="15" fill="rgb(244,107,35)" fg:x="633" fg:w="3"/><text x="30.1649%" y="190.50"></text></g><g><title>view (pandas/core/indexes/base.py:1040) (3 samples, 0.14%)</title><rect x="29.9149%" y="196" width="0.1418%" height="15" fill="rgb(205,140,8)" fg:x="633" fg:w="3"/><text x="30.1649%" y="206.50"></text></g><g><title>_view (pandas/core/indexes/base.py:777) (3 samples, 0.14%)</title><rect x="29.9149%" y="212" width="0.1418%" height="15" fill="rgb(228,84,46)" fg:x="633" fg:w="3"/><text x="30.1649%" y="222.50"></text></g><g><title>copy (pandas/core/internals/managers.py:593) (7 samples, 0.33%)</title><rect x="30.0567%" y="148" width="0.3308%" height="15" fill="rgb(254,188,9)" fg:x="636" fg:w="7"/><text x="30.3067%" y="158.50"></text></g><g><title>_consolidate_check (pandas/core/internals/managers.py:1778) (3 samples, 0.14%)</title><rect x="30.4820%" y="196" width="0.1418%" height="15" fill="rgb(206,112,54)" fg:x="645" fg:w="3"/><text x="30.7320%" y="206.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:1778) (3 samples, 0.14%)</title><rect x="30.4820%" y="212" width="0.1418%" height="15" fill="rgb(216,84,49)" fg:x="645" fg:w="3"/><text x="30.7320%" y="222.50"></text></g><g><title>is_consolidated (pandas/core/internals/managers.py:1769) (6 samples, 0.28%)</title><rect x="30.4348%" y="180" width="0.2836%" height="15" fill="rgb(214,194,35)" fg:x="644" fg:w="6"/><text x="30.6848%" y="190.50"></text></g><g><title>_consolidate_inplace (pandas/core/internals/managers.py:1787) (7 samples, 0.33%)</title><rect x="30.4348%" y="164" width="0.3308%" height="15" fill="rgb(249,28,3)" fg:x="644" fg:w="7"/><text x="30.6848%" y="174.50"></text></g><g><title>_consolidate (pandas/core/internals/managers.py:2265) (16 samples, 0.76%)</title><rect x="30.9074%" y="180" width="0.7561%" height="15" fill="rgb(222,56,52)" fg:x="654" fg:w="16"/><text x="31.1574%" y="190.50"></text></g><g><title>&lt;lambda&gt; (pandas/core/internals/managers.py:2264) (15 samples, 0.71%)</title><rect x="30.9546%" y="196" width="0.7089%" height="15" fill="rgb(245,217,50)" fg:x="655" fg:w="15"/><text x="31.2046%" y="206.50"></text></g><g><title>_consolidate_key (pandas/core/internals/blocks.py:228) (12 samples, 0.57%)</title><rect x="31.0964%" y="212" width="0.5671%" height="15" fill="rgb(213,201,24)" fg:x="658" fg:w="12"/><text x="31.3464%" y="222.50"></text></g><g><title>_merge_blocks (pandas/core/internals/managers.py:2285) (8 samples, 0.38%)</title><rect x="31.7580%" y="196" width="0.3781%" height="15" fill="rgb(248,116,28)" fg:x="672" fg:w="8"/><text x="32.0080%" y="206.50"></text></g><g><title>_merge_blocks (pandas/core/internals/managers.py:2294) (9 samples, 0.43%)</title><rect x="32.1361%" y="196" width="0.4253%" height="15" fill="rgb(219,72,43)" fg:x="680" fg:w="9"/><text x="32.3861%" y="206.50"></text></g><g><title>vstack (numpy/core/shape_base.py:289) (6 samples, 0.28%)</title><rect x="32.2779%" y="212" width="0.2836%" height="15" fill="rgb(209,138,14)" fg:x="683" fg:w="6"/><text x="32.5279%" y="222.50"></text></g><g><title>_merge_blocks (pandas/core/internals/managers.py:2300) (3 samples, 0.14%)</title><rect x="32.5614%" y="196" width="0.1418%" height="15" fill="rgb(222,18,33)" fg:x="689" fg:w="3"/><text x="32.8114%" y="206.50"></text></g><g><title>_consolidate (pandas/core/internals/managers.py:2269) (25 samples, 1.18%)</title><rect x="31.7580%" y="180" width="1.1815%" height="15" fill="rgb(213,199,7)" fg:x="672" fg:w="25"/><text x="32.0080%" y="190.50"></text></g><g><title>_consolidate_inplace (pandas/core/internals/managers.py:1788) (47 samples, 2.22%)</title><rect x="30.7656%" y="164" width="2.2212%" height="15" fill="rgb(250,110,10)" fg:x="651" fg:w="47"/><text x="31.0156%" y="174.50">_..</text></g><g><title>copy (pandas/core/generic.py:6811) (69 samples, 3.26%)</title><rect x="29.8677%" y="132" width="3.2609%" height="15" fill="rgb(248,123,6)" fg:x="632" fg:w="69"/><text x="30.1177%" y="142.50">cop..</text></g><g><title>copy (pandas/core/internals/managers.py:604) (57 samples, 2.69%)</title><rect x="30.4348%" y="148" width="2.6938%" height="15" fill="rgb(206,91,31)" fg:x="644" fg:w="57"/><text x="30.6848%" y="158.50">co..</text></g><g><title>_consolidate_inplace (pandas/core/internals/managers.py:1791) (3 samples, 0.14%)</title><rect x="32.9868%" y="164" width="0.1418%" height="15" fill="rgb(211,154,13)" fg:x="698" fg:w="3"/><text x="33.2368%" y="174.50"></text></g><g><title>get_capacity_by_server_generation_latency_sensitivity_optimized (evaluation_diff_quantity.py:137) (76 samples, 3.59%)</title><rect x="29.8677%" y="116" width="3.5917%" height="15" fill="rgb(225,148,7)" fg:x="632" fg:w="76"/><text x="30.1177%" y="126.50">get_..</text></g><g><title>copy (pandas/core/generic.py:6813) (7 samples, 0.33%)</title><rect x="33.1285%" y="132" width="0.3308%" height="15" fill="rgb(220,160,43)" fg:x="701" fg:w="7"/><text x="33.3785%" y="142.50"></text></g><g><title>_constructor_from_mgr (pandas/core/frame.py:660) (3 samples, 0.14%)</title><rect x="33.3176%" y="148" width="0.1418%" height="15" fill="rgb(213,52,39)" fg:x="705" fg:w="3"/><text x="33.5676%" y="158.50"></text></g><g><title>_from_mgr (pandas/core/generic.py:357) (3 samples, 0.14%)</title><rect x="33.3176%" y="164" width="0.1418%" height="15" fill="rgb(243,137,7)" fg:x="705" fg:w="3"/><text x="33.5676%" y="174.50"></text></g><g><title>broadcast_arrays (numpy/lib/stride_tricks.py:538) (3 samples, 0.14%)</title><rect x="33.7902%" y="196" width="0.1418%" height="15" fill="rgb(230,79,13)" fg:x="715" fg:w="3"/><text x="34.0402%" y="206.50"></text></g><g><title>&lt;listcomp&gt; (numpy/lib/stride_tricks.py:538) (3 samples, 0.14%)</title><rect x="33.7902%" y="212" width="0.1418%" height="15" fill="rgb(247,105,23)" fg:x="715" fg:w="3"/><text x="34.0402%" y="222.50"></text></g><g><title>_argcheck_rvs (scipy/stats/_distn_infrastructure.py:881) (7 samples, 0.33%)</title><rect x="33.7902%" y="180" width="0.3308%" height="15" fill="rgb(223,179,41)" fg:x="715" fg:w="7"/><text x="34.0402%" y="190.50"></text></g><g><title>_argcheck_rvs (scipy/stats/_distn_infrastructure.py:906) (4 samples, 0.19%)</title><rect x="34.1210%" y="180" width="0.1890%" height="15" fill="rgb(218,9,34)" fg:x="722" fg:w="4"/><text x="34.3710%" y="190.50"></text></g><g><title>rvs (scipy/stats/_distn_infrastructure.py:1049) (15 samples, 0.71%)</title><rect x="33.6957%" y="148" width="0.7089%" height="15" fill="rgb(222,106,8)" fg:x="713" fg:w="15"/><text x="33.9457%" y="158.50"></text></g><g><title>_parse_args_rvs (&lt;string&gt;:6) (14 samples, 0.66%)</title><rect x="33.7429%" y="164" width="0.6616%" height="15" fill="rgb(211,220,0)" fg:x="714" fg:w="14"/><text x="33.9929%" y="174.50"></text></g><g><title>rvs (scipy/stats/_distn_infrastructure.py:1050) (5 samples, 0.24%)</title><rect x="34.4045%" y="148" width="0.2363%" height="15" fill="rgb(229,52,16)" fg:x="728" fg:w="5"/><text x="34.6545%" y="158.50"></text></g><g><title>rvs (scipy/stats/_distn_infrastructure.py:1051) (4 samples, 0.19%)</title><rect x="34.6408%" y="148" width="0.1890%" height="15" fill="rgb(212,155,18)" fg:x="733" fg:w="4"/><text x="34.8908%" y="158.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2504) (4 samples, 0.19%)</title><rect x="34.6408%" y="164" width="0.1890%" height="15" fill="rgb(242,21,14)" fg:x="733" fg:w="4"/><text x="34.8908%" y="174.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:86) (4 samples, 0.19%)</title><rect x="34.6408%" y="180" width="0.1890%" height="15" fill="rgb(222,19,48)" fg:x="733" fg:w="4"/><text x="34.8908%" y="190.50"></text></g><g><title>_all (numpy/core/_methods.py:64) (3 samples, 0.14%)</title><rect x="34.6881%" y="196" width="0.1418%" height="15" fill="rgb(232,45,27)" fg:x="734" fg:w="3"/><text x="34.9381%" y="206.50"></text></g><g><title>rvs (scipy/stats/_distn_infrastructure.py:1059) (6 samples, 0.28%)</title><rect x="34.8299%" y="148" width="0.2836%" height="15" fill="rgb(249,103,42)" fg:x="737" fg:w="6"/><text x="35.0799%" y="158.50"></text></g><g><title>all (numpy/core/fromnumeric.py:2504) (5 samples, 0.24%)</title><rect x="34.8771%" y="164" width="0.2363%" height="15" fill="rgb(246,81,33)" fg:x="738" fg:w="5"/><text x="35.1271%" y="174.50"></text></g><g><title>_wrapreduction (numpy/core/fromnumeric.py:86) (3 samples, 0.14%)</title><rect x="34.9716%" y="180" width="0.1418%" height="15" fill="rgb(252,33,42)" fg:x="740" fg:w="3"/><text x="35.2216%" y="190.50"></text></g><g><title>_all (numpy/core/_methods.py:64) (3 samples, 0.14%)</title><rect x="34.9716%" y="196" width="0.1418%" height="15" fill="rgb(209,212,41)" fg:x="740" fg:w="3"/><text x="35.2216%" y="206.50"></text></g><g><title>_rvs (scipy/stats/_distn_infrastructure.py:994) (6 samples, 0.28%)</title><rect x="35.1607%" y="164" width="0.2836%" height="15" fill="rgb(207,154,6)" fg:x="744" fg:w="6"/><text x="35.4107%" y="174.50"></text></g><g><title>rvs (scipy/stats/_distn_infrastructure.py:1069) (22 samples, 1.04%)</title><rect x="35.1134%" y="148" width="1.0397%" height="15" fill="rgb(223,64,47)" fg:x="743" fg:w="22"/><text x="35.3634%" y="158.50"></text></g><g><title>_rvs (scipy/stats/_distn_infrastructure.py:995) (15 samples, 0.71%)</title><rect x="35.4442%" y="164" width="0.7089%" height="15" fill="rgb(211,161,38)" fg:x="750" fg:w="15"/><text x="35.6942%" y="174.50"></text></g><g><title>_ppf (scipy/stats/_continuous_distns.py:2719) (14 samples, 0.66%)</title><rect x="35.4915%" y="180" width="0.6616%" height="15" fill="rgb(219,138,40)" fg:x="751" fg:w="14"/><text x="35.7415%" y="190.50"></text></g><g><title>adjust_capacity_by_failure_rate_numpy (evaluation_diff_quantity.py:133) (56 samples, 2.65%)</title><rect x="33.6484%" y="132" width="2.6465%" height="15" fill="rgb(241,228,46)" fg:x="712" fg:w="56"/><text x="33.8984%" y="142.50">ad..</text></g><g><title>rvs (scipy/stats/_distn_infrastructure.py:1071) (3 samples, 0.14%)</title><rect x="36.1531%" y="148" width="0.1418%" height="15" fill="rgb(223,209,38)" fg:x="765" fg:w="3"/><text x="36.4031%" y="158.50"></text></g><g><title>adjust_capacity_by_failure_rate_numpy (evaluation_diff_quantity.py:134) (4 samples, 0.19%)</title><rect x="36.2949%" y="132" width="0.1890%" height="15" fill="rgb(236,164,45)" fg:x="768" fg:w="4"/><text x="36.5449%" y="142.50"></text></g><g><title>get_capacity_by_server_generation_latency_sensitivity_optimized (evaluation_diff_quantity.py:140) (65 samples, 3.07%)</title><rect x="33.4594%" y="116" width="3.0718%" height="15" fill="rgb(231,15,5)" fg:x="708" fg:w="65"/><text x="33.7094%" y="126.50">get..</text></g><g><title>_get_option (pandas/_config/config.py:146) (4 samples, 0.19%)</title><rect x="36.7202%" y="148" width="0.1890%" height="15" fill="rgb(252,35,15)" fg:x="777" fg:w="4"/><text x="36.9702%" y="158.50"></text></g><g><title>_get_option (pandas/_config/config.py:149) (3 samples, 0.14%)</title><rect x="36.9093%" y="148" width="0.1418%" height="15" fill="rgb(248,181,18)" fg:x="781" fg:w="3"/><text x="37.1593%" y="158.50"></text></g><g><title>__init__ (pandas/core/frame.py:734) (8 samples, 0.38%)</title><rect x="36.7202%" y="132" width="0.3781%" height="15" fill="rgb(233,39,42)" fg:x="777" fg:w="8"/><text x="36.9702%" y="142.50"></text></g><g><title>ndarray_to_mgr (pandas/core/internals/construction.py:393) (3 samples, 0.14%)</title><rect x="37.3346%" y="148" width="0.1418%" height="15" fill="rgb(238,110,33)" fg:x="790" fg:w="3"/><text x="37.5846%" y="158.50"></text></g><g><title>__init__ (pandas/core/frame.py:827) (6 samples, 0.28%)</title><rect x="37.2401%" y="132" width="0.2836%" height="15" fill="rgb(233,195,10)" fg:x="788" fg:w="6"/><text x="37.4901%" y="142.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:373) (169 samples, 7.99%)</title><rect x="29.7732%" y="100" width="7.9868%" height="15" fill="rgb(254,105,3)" fg:x="630" fg:w="169"/><text x="30.0232%" y="110.50">SA_evaluati..</text></g><g><title>get_capacity_by_server_generation_latency_sensitivity_optimized (evaluation_diff_quantity.py:141) (26 samples, 1.23%)</title><rect x="36.5312%" y="116" width="1.2287%" height="15" fill="rgb(221,225,9)" fg:x="773" fg:w="26"/><text x="36.7812%" y="126.50"></text></g><g><title>__init__ (pandas/core/frame.py:924) (4 samples, 0.19%)</title><rect x="37.5709%" y="132" width="0.1890%" height="15" fill="rgb(224,227,45)" fg:x="795" fg:w="4"/><text x="37.8209%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4063) (4 samples, 0.19%)</title><rect x="37.9017%" y="132" width="0.1890%" height="15" fill="rgb(229,198,43)" fg:x="802" fg:w="4"/><text x="38.1517%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4075) (6 samples, 0.28%)</title><rect x="38.3270%" y="132" width="0.2836%" height="15" fill="rgb(206,209,35)" fg:x="811" fg:w="6"/><text x="38.5770%" y="142.50"></text></g><g><title>__contains__ (pandas/core/indexes/base.py:5360) (6 samples, 0.28%)</title><rect x="38.3270%" y="148" width="0.2836%" height="15" fill="rgb(245,195,53)" fg:x="811" fg:w="6"/><text x="38.5770%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (4 samples, 0.19%)</title><rect x="38.6106%" y="132" width="0.1890%" height="15" fill="rgb(240,92,26)" fg:x="817" fg:w="4"/><text x="38.8606%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1096) (3 samples, 0.14%)</title><rect x="38.8469%" y="148" width="0.1418%" height="15" fill="rgb(207,40,23)" fg:x="822" fg:w="3"/><text x="39.0969%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1105) (3 samples, 0.14%)</title><rect x="39.0832%" y="148" width="0.1418%" height="15" fill="rgb(223,111,35)" fg:x="827" fg:w="3"/><text x="39.3332%" y="158.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3805) (3 samples, 0.14%)</title><rect x="39.4140%" y="180" width="0.1418%" height="15" fill="rgb(229,147,28)" fg:x="834" fg:w="3"/><text x="39.6640%" y="190.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (10 samples, 0.47%)</title><rect x="39.2250%" y="164" width="0.4726%" height="15" fill="rgb(211,29,28)" fg:x="830" fg:w="10"/><text x="39.4750%" y="174.50"></text></g><g><title>get_utilization (evaluation_diff_quantity.py:100) (48 samples, 2.27%)</title><rect x="37.7599%" y="116" width="2.2684%" height="15" fill="rgb(228,72,33)" fg:x="799" fg:w="48"/><text x="38.0099%" y="126.50">g..</text></g><g><title>get (pandas/core/generic.py:4581) (26 samples, 1.23%)</title><rect x="38.7996%" y="132" width="1.2287%" height="15" fill="rgb(205,214,31)" fg:x="821" fg:w="26"/><text x="39.0496%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (17 samples, 0.80%)</title><rect x="39.2250%" y="148" width="0.8034%" height="15" fill="rgb(224,111,15)" fg:x="830" fg:w="17"/><text x="39.4750%" y="158.50"></text></g><g><title>_get_value (pandas/core/series.py:1240) (6 samples, 0.28%)</title><rect x="39.7448%" y="164" width="0.2836%" height="15" fill="rgb(253,21,26)" fg:x="841" fg:w="6"/><text x="39.9948%" y="174.50"></text></g><g><title>_values (pandas/core/series.py:863) (3 samples, 0.14%)</title><rect x="39.8866%" y="180" width="0.1418%" height="15" fill="rgb(245,139,43)" fg:x="844" fg:w="3"/><text x="40.1366%" y="190.50"></text></g><g><title>get_utilization (evaluation_diff_quantity.py:102) (3 samples, 0.14%)</title><rect x="40.1229%" y="116" width="0.1418%" height="15" fill="rgb(252,170,7)" fg:x="849" fg:w="3"/><text x="40.3729%" y="126.50"></text></g><g><title>get_utilization (evaluation_diff_quantity.py:97) (5 samples, 0.24%)</title><rect x="40.3119%" y="116" width="0.2363%" height="15" fill="rgb(231,118,14)" fg:x="853" fg:w="5"/><text x="40.5619%" y="126.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4074) (5 samples, 0.24%)</title><rect x="40.7845%" y="132" width="0.2363%" height="15" fill="rgb(238,83,0)" fg:x="863" fg:w="5"/><text x="41.0345%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4075) (6 samples, 0.28%)</title><rect x="41.0208%" y="132" width="0.2836%" height="15" fill="rgb(221,39,39)" fg:x="868" fg:w="6"/><text x="41.2708%" y="142.50"></text></g><g><title>__contains__ (pandas/core/indexes/base.py:5360) (4 samples, 0.19%)</title><rect x="41.1153%" y="148" width="0.1890%" height="15" fill="rgb(222,119,46)" fg:x="870" fg:w="4"/><text x="41.3653%" y="158.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4638) (3 samples, 0.14%)</title><rect x="41.3989%" y="148" width="0.1418%" height="15" fill="rgb(222,165,49)" fg:x="876" fg:w="3"/><text x="41.6489%" y="158.50"></text></g><g><title>_ixs (pandas/core/frame.py:4008) (4 samples, 0.19%)</title><rect x="41.7297%" y="164" width="0.1890%" height="15" fill="rgb(219,113,52)" fg:x="883" fg:w="4"/><text x="41.9797%" y="174.50"></text></g><g><title>blknos (pandas/core/internals/managers.py:192) (4 samples, 0.19%)</title><rect x="41.9187%" y="196" width="0.1890%" height="15" fill="rgb(214,7,15)" fg:x="887" fg:w="4"/><text x="42.1687%" y="206.50"></text></g><g><title>iget (pandas/core/internals/managers.py:1016) (5 samples, 0.24%)</title><rect x="41.9187%" y="180" width="0.2363%" height="15" fill="rgb(235,32,4)" fg:x="887" fg:w="5"/><text x="42.1687%" y="190.50"></text></g><g><title>iget (pandas/core/internals/managers.py:1017) (4 samples, 0.19%)</title><rect x="42.1550%" y="180" width="0.1890%" height="15" fill="rgb(238,90,54)" fg:x="892" fg:w="4"/><text x="42.4050%" y="190.50"></text></g><g><title>iget (pandas/core/internals/managers.py:1021) (4 samples, 0.19%)</title><rect x="42.3913%" y="180" width="0.1890%" height="15" fill="rgb(213,208,19)" fg:x="897" fg:w="4"/><text x="42.6413%" y="190.50"></text></g><g><title>_ixs (pandas/core/frame.py:4010) (15 samples, 0.71%)</title><rect x="41.9187%" y="164" width="0.7089%" height="15" fill="rgb(233,156,4)" fg:x="887" fg:w="15"/><text x="42.1687%" y="174.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4616) (4 samples, 0.19%)</title><rect x="42.7221%" y="180" width="0.1890%" height="15" fill="rgb(207,194,5)" fg:x="904" fg:w="4"/><text x="42.9721%" y="190.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4617) (3 samples, 0.14%)</title><rect x="42.9112%" y="180" width="0.1418%" height="15" fill="rgb(206,111,30)" fg:x="908" fg:w="3"/><text x="43.1612%" y="190.50"></text></g><g><title>__finalize__ (pandas/core/generic.py:6262) (3 samples, 0.14%)</title><rect x="43.1002%" y="196" width="0.1418%" height="15" fill="rgb(243,70,54)" fg:x="912" fg:w="3"/><text x="43.3502%" y="206.50"></text></g><g><title>_ixs (pandas/core/frame.py:4011) (16 samples, 0.76%)</title><rect x="42.6276%" y="164" width="0.7561%" height="15" fill="rgb(242,28,8)" fg:x="902" fg:w="16"/><text x="42.8776%" y="174.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4618) (7 samples, 0.33%)</title><rect x="43.0529%" y="180" width="0.3308%" height="15" fill="rgb(219,106,18)" fg:x="911" fg:w="7"/><text x="43.3029%" y="190.50"></text></g><g><title>__finalize__ (pandas/core/generic.py:6264) (3 samples, 0.14%)</title><rect x="43.2420%" y="196" width="0.1418%" height="15" fill="rgb(244,222,10)" fg:x="915" fg:w="3"/><text x="43.4920%" y="206.50"></text></g><g><title>_ixs (pandas/core/frame.py:4014) (3 samples, 0.14%)</title><rect x="43.3837%" y="164" width="0.1418%" height="15" fill="rgb(236,179,52)" fg:x="918" fg:w="3"/><text x="43.6337%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (48 samples, 2.27%)</title><rect x="41.3043%" y="132" width="2.2684%" height="15" fill="rgb(213,23,39)" fg:x="874" fg:w="48"/><text x="41.5543%" y="142.50">_..</text></g><g><title>_get_item_cache (pandas/core/frame.py:4639) (43 samples, 2.03%)</title><rect x="41.5406%" y="148" width="2.0321%" height="15" fill="rgb(238,48,10)" fg:x="879" fg:w="43"/><text x="41.7906%" y="158.50">_..</text></g><g><title>get_loc (pandas/core/indexes/base.py:3803) (3 samples, 0.14%)</title><rect x="43.9036%" y="180" width="0.1418%" height="15" fill="rgb(251,196,23)" fg:x="929" fg:w="3"/><text x="44.1536%" y="190.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (9 samples, 0.43%)</title><rect x="43.7618%" y="164" width="0.4253%" height="15" fill="rgb(250,152,24)" fg:x="926" fg:w="9"/><text x="44.0118%" y="174.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3805) (3 samples, 0.14%)</title><rect x="44.0454%" y="180" width="0.1418%" height="15" fill="rgb(209,150,17)" fg:x="932" fg:w="3"/><text x="44.2954%" y="190.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:379) (139 samples, 6.57%)</title><rect x="37.7599%" y="100" width="6.5690%" height="15" fill="rgb(234,202,34)" fg:x="799" fg:w="139"/><text x="38.0099%" y="110.50">SA_evalua..</text></g><g><title>get_utilization (evaluation_diff_quantity.py:99) (78 samples, 3.69%)</title><rect x="40.6427%" y="116" width="3.6862%" height="15" fill="rgb(253,148,53)" fg:x="860" fg:w="78"/><text x="40.8927%" y="126.50">get_..</text></g><g><title>get (pandas/core/generic.py:4581) (16 samples, 0.76%)</title><rect x="43.5728%" y="132" width="0.7561%" height="15" fill="rgb(218,129,16)" fg:x="922" fg:w="16"/><text x="43.8228%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (12 samples, 0.57%)</title><rect x="43.7618%" y="148" width="0.5671%" height="15" fill="rgb(216,85,19)" fg:x="926" fg:w="12"/><text x="44.0118%" y="158.50"></text></g><g><title>_get_value (pandas/core/series.py:1240) (3 samples, 0.14%)</title><rect x="44.1871%" y="164" width="0.1418%" height="15" fill="rgb(235,228,7)" fg:x="935" fg:w="3"/><text x="44.4371%" y="174.50"></text></g><g><title>_values (pandas/core/series.py:863) (3 samples, 0.14%)</title><rect x="44.1871%" y="180" width="0.1418%" height="15" fill="rgb(245,175,0)" fg:x="935" fg:w="3"/><text x="44.4371%" y="190.50"></text></g><g><title>internal_values (pandas/core/internals/managers.py:2006) (3 samples, 0.14%)</title><rect x="44.1871%" y="196" width="0.1418%" height="15" fill="rgb(208,168,36)" fg:x="935" fg:w="3"/><text x="44.4371%" y="206.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4075) (4 samples, 0.19%)</title><rect x="44.8488%" y="132" width="0.1890%" height="15" fill="rgb(246,171,24)" fg:x="949" fg:w="4"/><text x="45.0988%" y="142.50"></text></g><g><title>__contains__ (pandas/core/indexes/base.py:5360) (4 samples, 0.19%)</title><rect x="44.8488%" y="148" width="0.1890%" height="15" fill="rgb(215,142,24)" fg:x="949" fg:w="4"/><text x="45.0988%" y="158.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4638) (4 samples, 0.19%)</title><rect x="45.0378%" y="148" width="0.1890%" height="15" fill="rgb(250,187,7)" fg:x="953" fg:w="4"/><text x="45.2878%" y="158.50"></text></g><g><title>iget (pandas/core/internals/managers.py:1017) (3 samples, 0.14%)</title><rect x="45.4159%" y="180" width="0.1418%" height="15" fill="rgb(228,66,33)" fg:x="961" fg:w="3"/><text x="45.6659%" y="190.50"></text></g><g><title>_ixs (pandas/core/frame.py:4010) (11 samples, 0.52%)</title><rect x="45.2741%" y="164" width="0.5198%" height="15" fill="rgb(234,215,21)" fg:x="958" fg:w="11"/><text x="45.5241%" y="174.50"></text></g><g><title>_from_mgr (pandas/core/generic.py:356) (3 samples, 0.14%)</title><rect x="46.0302%" y="212" width="0.1418%" height="15" fill="rgb(222,191,20)" fg:x="974" fg:w="3"/><text x="46.2802%" y="222.50"></text></g><g><title>_constructor_sliced_from_mgr (pandas/core/frame.py:679) (7 samples, 0.33%)</title><rect x="45.9357%" y="196" width="0.3308%" height="15" fill="rgb(245,79,54)" fg:x="972" fg:w="7"/><text x="46.1857%" y="206.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (3 samples, 0.14%)</title><rect x="46.3138%" y="212" width="0.1418%" height="15" fill="rgb(240,10,37)" fg:x="980" fg:w="3"/><text x="46.5638%" y="222.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4616) (13 samples, 0.61%)</title><rect x="45.8885%" y="180" width="0.6144%" height="15" fill="rgb(214,192,32)" fg:x="971" fg:w="13"/><text x="46.1385%" y="190.50"></text></g><g><title>_constructor_sliced_from_mgr (pandas/core/frame.py:680) (5 samples, 0.24%)</title><rect x="46.2665%" y="196" width="0.2363%" height="15" fill="rgb(209,36,54)" fg:x="979" fg:w="5"/><text x="46.5165%" y="206.50"></text></g><g><title>_ixs (pandas/core/frame.py:4011) (19 samples, 0.90%)</title><rect x="45.7940%" y="164" width="0.8979%" height="15" fill="rgb(220,10,11)" fg:x="969" fg:w="19"/><text x="46.0440%" y="174.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4618) (3 samples, 0.14%)</title><rect x="46.5501%" y="180" width="0.1418%" height="15" fill="rgb(221,106,17)" fg:x="985" fg:w="3"/><text x="46.8001%" y="190.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4639) (33 samples, 1.56%)</title><rect x="45.2268%" y="148" width="1.5595%" height="15" fill="rgb(251,142,44)" fg:x="957" fg:w="33"/><text x="45.4768%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (39 samples, 1.84%)</title><rect x="45.0378%" y="132" width="1.8431%" height="15" fill="rgb(238,13,15)" fg:x="953" fg:w="39"/><text x="45.2878%" y="142.50">_..</text></g><g><title>_arith_method (pandas/core/base.py:1372) (5 samples, 0.24%)</title><rect x="46.9282%" y="180" width="0.2363%" height="15" fill="rgb(208,107,27)" fg:x="993" fg:w="5"/><text x="47.1782%" y="190.50"></text></g><g><title>get_op_result_name (pandas/core/ops/common.py:97) (3 samples, 0.14%)</title><rect x="47.0227%" y="196" width="0.1418%" height="15" fill="rgb(205,136,37)" fg:x="995" fg:w="3"/><text x="47.2727%" y="206.50"></text></g><g><title>_arith_method (pandas/core/base.py:1381) (3 samples, 0.14%)</title><rect x="47.2117%" y="180" width="0.1418%" height="15" fill="rgb(250,205,27)" fg:x="999" fg:w="3"/><text x="47.4617%" y="190.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:431) (3 samples, 0.14%)</title><rect x="47.2117%" y="196" width="0.1418%" height="15" fill="rgb(210,80,43)" fg:x="999" fg:w="3"/><text x="47.4617%" y="206.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (7 samples, 0.33%)</title><rect x="47.3535%" y="180" width="0.3308%" height="15" fill="rgb(247,160,36)" fg:x="1002" fg:w="7"/><text x="47.6035%" y="190.50"></text></g><g><title>arithmetic_op (pandas/core/ops/array_ops.py:283) (6 samples, 0.28%)</title><rect x="47.4008%" y="196" width="0.2836%" height="15" fill="rgb(234,13,49)" fg:x="1003" fg:w="6"/><text x="47.6508%" y="206.50"></text></g><g><title>_na_arithmetic_op (pandas/core/ops/array_ops.py:218) (5 samples, 0.24%)</title><rect x="47.4480%" y="212" width="0.2363%" height="15" fill="rgb(234,122,0)" fg:x="1004" fg:w="5"/><text x="47.6980%" y="222.50"></text></g><g><title>evaluate (pandas/core/computation/expressions.py:242) (5 samples, 0.24%)</title><rect x="47.4480%" y="228" width="0.2363%" height="15" fill="rgb(207,146,38)" fg:x="1004" fg:w="5"/><text x="47.6980%" y="238.50"></text></g><g><title>_evaluate_standard (pandas/core/computation/expressions.py:73) (4 samples, 0.19%)</title><rect x="47.4953%" y="244" width="0.1890%" height="15" fill="rgb(207,177,25)" fg:x="1005" fg:w="4"/><text x="47.7453%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (5 samples, 0.24%)</title><rect x="47.7316%" y="212" width="0.2363%" height="15" fill="rgb(211,178,42)" fg:x="1010" fg:w="5"/><text x="47.9816%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (3 samples, 0.14%)</title><rect x="48.0151%" y="212" width="0.1418%" height="15" fill="rgb(230,69,54)" fg:x="1016" fg:w="3"/><text x="48.2651%" y="222.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (3 samples, 0.14%)</title><rect x="48.2514%" y="228" width="0.1418%" height="15" fill="rgb(214,135,41)" fg:x="1021" fg:w="3"/><text x="48.5014%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (5 samples, 0.24%)</title><rect x="48.2514%" y="212" width="0.2363%" height="15" fill="rgb(237,67,25)" fg:x="1021" fg:w="5"/><text x="48.5014%" y="222.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (20 samples, 0.95%)</title><rect x="47.6843%" y="196" width="0.9452%" height="15" fill="rgb(222,189,50)" fg:x="1009" fg:w="20"/><text x="47.9343%" y="206.50"></text></g><g><title>__init__ (pandas/core/series.py:594) (3 samples, 0.14%)</title><rect x="48.4877%" y="212" width="0.1418%" height="15" fill="rgb(245,148,34)" fg:x="1026" fg:w="3"/><text x="48.7377%" y="222.50"></text></g><g><title>_set_axis (pandas/core/generic.py:814) (3 samples, 0.14%)</title><rect x="48.4877%" y="228" width="0.1418%" height="15" fill="rgb(222,29,6)" fg:x="1026" fg:w="3"/><text x="48.7377%" y="238.50"></text></g><g><title>__mul__ (pandas/core/arraylike.py:202) (40 samples, 1.89%)</title><rect x="46.8809%" y="148" width="1.8904%" height="15" fill="rgb(221,189,43)" fg:x="992" fg:w="40"/><text x="47.1309%" y="158.50">_..</text></g><g><title>_arith_method (pandas/core/series.py:6135) (40 samples, 1.89%)</title><rect x="46.8809%" y="164" width="1.8904%" height="15" fill="rgb(207,36,27)" fg:x="992" fg:w="40"/><text x="47.1309%" y="174.50">_..</text></g><g><title>_arith_method (pandas/core/base.py:1384) (23 samples, 1.09%)</title><rect x="47.6843%" y="180" width="1.0870%" height="15" fill="rgb(217,90,24)" fg:x="1009" fg:w="23"/><text x="47.9343%" y="190.50"></text></g><g><title>_arith_method (pandas/core/base.py:1376) (3 samples, 0.14%)</title><rect x="49.1021%" y="180" width="0.1418%" height="15" fill="rgb(224,66,35)" fg:x="1039" fg:w="3"/><text x="49.3521%" y="190.50"></text></g><g><title>_arith_method (pandas/core/base.py:1381) (6 samples, 0.28%)</title><rect x="49.3384%" y="180" width="0.2836%" height="15" fill="rgb(221,13,50)" fg:x="1044" fg:w="6"/><text x="49.5884%" y="190.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:431) (5 samples, 0.24%)</title><rect x="49.3856%" y="196" width="0.2363%" height="15" fill="rgb(236,68,49)" fg:x="1045" fg:w="5"/><text x="49.6356%" y="206.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:436) (5 samples, 0.24%)</title><rect x="49.6219%" y="196" width="0.2363%" height="15" fill="rgb(229,146,28)" fg:x="1050" fg:w="5"/><text x="49.8719%" y="206.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (9 samples, 0.43%)</title><rect x="49.6219%" y="180" width="0.4253%" height="15" fill="rgb(225,31,38)" fg:x="1050" fg:w="9"/><text x="49.8719%" y="190.50"></text></g><g><title>arithmetic_op (pandas/core/ops/array_ops.py:283) (4 samples, 0.19%)</title><rect x="49.8582%" y="196" width="0.1890%" height="15" fill="rgb(250,208,3)" fg:x="1055" fg:w="4"/><text x="50.1082%" y="206.50"></text></g><g><title>_na_arithmetic_op (pandas/core/ops/array_ops.py:218) (4 samples, 0.19%)</title><rect x="49.8582%" y="212" width="0.1890%" height="15" fill="rgb(246,54,23)" fg:x="1055" fg:w="4"/><text x="50.1082%" y="222.50"></text></g><g><title>evaluate (pandas/core/computation/expressions.py:242) (4 samples, 0.19%)</title><rect x="49.8582%" y="228" width="0.1890%" height="15" fill="rgb(243,76,11)" fg:x="1055" fg:w="4"/><text x="50.1082%" y="238.50"></text></g><g><title>_evaluate_standard (pandas/core/computation/expressions.py:73) (4 samples, 0.19%)</title><rect x="49.8582%" y="244" width="0.1890%" height="15" fill="rgb(245,21,50)" fg:x="1055" fg:w="4"/><text x="50.1082%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (3 samples, 0.14%)</title><rect x="50.3781%" y="212" width="0.1418%" height="15" fill="rgb(228,9,43)" fg:x="1066" fg:w="3"/><text x="50.6281%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:586) (3 samples, 0.14%)</title><rect x="50.5198%" y="212" width="0.1418%" height="15" fill="rgb(208,100,47)" fg:x="1069" fg:w="3"/><text x="50.7698%" y="222.50"></text></g><g><title>_get_option (pandas/_config/config.py:146) (3 samples, 0.14%)</title><rect x="50.5198%" y="228" width="0.1418%" height="15" fill="rgb(232,26,8)" fg:x="1069" fg:w="3"/><text x="50.7698%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (4 samples, 0.19%)</title><rect x="50.7561%" y="212" width="0.1890%" height="15" fill="rgb(216,166,38)" fg:x="1074" fg:w="4"/><text x="51.0061%" y="222.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (20 samples, 0.95%)</title><rect x="50.0473%" y="196" width="0.9452%" height="15" fill="rgb(251,202,51)" fg:x="1059" fg:w="20"/><text x="50.2973%" y="206.50"></text></g><g><title>new_method (pandas/core/ops/common.py:76) (90 samples, 4.25%)</title><rect x="46.8809%" y="132" width="4.2533%" height="15" fill="rgb(254,216,34)" fg:x="992" fg:w="90"/><text x="47.1309%" y="142.50">new_m..</text></g><g><title>__truediv__ (pandas/core/arraylike.py:210) (50 samples, 2.36%)</title><rect x="48.7713%" y="148" width="2.3629%" height="15" fill="rgb(251,32,27)" fg:x="1032" fg:w="50"/><text x="49.0213%" y="158.50">__..</text></g><g><title>_arith_method (pandas/core/series.py:6135) (47 samples, 2.22%)</title><rect x="48.9130%" y="164" width="2.2212%" height="15" fill="rgb(208,127,28)" fg:x="1035" fg:w="47"/><text x="49.1630%" y="174.50">_..</text></g><g><title>_arith_method (pandas/core/base.py:1384) (23 samples, 1.09%)</title><rect x="50.0473%" y="180" width="1.0870%" height="15" fill="rgb(224,137,22)" fg:x="1059" fg:w="23"/><text x="50.2973%" y="190.50"></text></g><g><title>_min_count_stat_function (pandas/core/generic.py:12471) (4 samples, 0.19%)</title><rect x="51.2287%" y="164" width="0.1890%" height="15" fill="rgb(254,70,32)" fg:x="1084" fg:w="4"/><text x="51.4787%" y="174.50"></text></g><g><title>validate_func (pandas/compat/numpy/function.py:414) (3 samples, 0.14%)</title><rect x="51.2760%" y="180" width="0.1418%" height="15" fill="rgb(229,75,37)" fg:x="1085" fg:w="3"/><text x="51.5260%" y="190.50"></text></g><g><title>_f (pandas/core/nanops.py:79) (5 samples, 0.24%)</title><rect x="51.6068%" y="196" width="0.2363%" height="15" fill="rgb(252,64,23)" fg:x="1092" fg:w="5"/><text x="51.8568%" y="206.50"></text></g><g><title>_get_values (pandas/core/nanops.py:294) (11 samples, 0.52%)</title><rect x="51.9376%" y="260" width="0.5198%" height="15" fill="rgb(232,162,48)" fg:x="1099" fg:w="11"/><text x="52.1876%" y="270.50"></text></g><g><title>_maybe_get_mask (pandas/core/nanops.py:248) (11 samples, 0.52%)</title><rect x="51.9376%" y="276" width="0.5198%" height="15" fill="rgb(246,160,12)" fg:x="1099" fg:w="11"/><text x="52.1876%" y="286.50"></text></g><g><title>isna (pandas/core/dtypes/missing.py:178) (11 samples, 0.52%)</title><rect x="51.9376%" y="292" width="0.5198%" height="15" fill="rgb(247,166,0)" fg:x="1099" fg:w="11"/><text x="52.1876%" y="302.50"></text></g><g><title>_isna (pandas/core/dtypes/missing.py:207) (9 samples, 0.43%)</title><rect x="52.0321%" y="308" width="0.4253%" height="15" fill="rgb(249,219,21)" fg:x="1101" fg:w="9"/><text x="52.2821%" y="318.50"></text></g><g><title>_isna_array (pandas/core/dtypes/missing.py:292) (9 samples, 0.43%)</title><rect x="52.0321%" y="324" width="0.4253%" height="15" fill="rgb(205,209,3)" fg:x="1101" fg:w="9"/><text x="52.2821%" y="334.50"></text></g><g><title>_isna_string_dtype (pandas/core/dtypes/missing.py:313) (9 samples, 0.43%)</title><rect x="52.0321%" y="340" width="0.4253%" height="15" fill="rgb(243,44,1)" fg:x="1101" fg:w="9"/><text x="52.2821%" y="350.50"></text></g><g><title>nansum (pandas/core/nanops.py:639) (16 samples, 0.76%)</title><rect x="51.9376%" y="244" width="0.7561%" height="15" fill="rgb(206,159,16)" fg:x="1099" fg:w="16"/><text x="52.1876%" y="254.50"></text></g><g><title>_get_values (pandas/core/nanops.py:313) (5 samples, 0.24%)</title><rect x="52.4575%" y="260" width="0.2363%" height="15" fill="rgb(244,77,30)" fg:x="1110" fg:w="5"/><text x="52.7075%" y="270.50"></text></g><g><title>_any (numpy/core/_methods.py:58) (3 samples, 0.14%)</title><rect x="52.5520%" y="276" width="0.1418%" height="15" fill="rgb(218,69,12)" fg:x="1112" fg:w="3"/><text x="52.8020%" y="286.50"></text></g><g><title>nansum (pandas/core/nanops.py:646) (8 samples, 0.38%)</title><rect x="52.6938%" y="244" width="0.3781%" height="15" fill="rgb(212,87,7)" fg:x="1115" fg:w="8"/><text x="52.9438%" y="254.50"></text></g><g><title>_sum (numpy/core/_methods.py:49) (6 samples, 0.28%)</title><rect x="52.7883%" y="260" width="0.2836%" height="15" fill="rgb(245,114,25)" fg:x="1117" fg:w="6"/><text x="53.0383%" y="270.50"></text></g><g><title>sum (pandas/core/generic.py:12506) (41 samples, 1.94%)</title><rect x="51.1815%" y="148" width="1.9376%" height="15" fill="rgb(210,61,42)" fg:x="1083" fg:w="41"/><text x="51.4315%" y="158.50">s..</text></g><g><title>_min_count_stat_function (pandas/core/generic.py:12489) (36 samples, 1.70%)</title><rect x="51.4178%" y="164" width="1.7013%" height="15" fill="rgb(211,52,33)" fg:x="1088" fg:w="36"/><text x="51.6678%" y="174.50"></text></g><g><title>_reduce (pandas/core/series.py:6457) (34 samples, 1.61%)</title><rect x="51.5123%" y="180" width="1.6068%" height="15" fill="rgb(234,58,33)" fg:x="1090" fg:w="34"/><text x="51.7623%" y="190.50"></text></g><g><title>_f (pandas/core/nanops.py:85) (27 samples, 1.28%)</title><rect x="51.8431%" y="196" width="1.2760%" height="15" fill="rgb(220,115,36)" fg:x="1097" fg:w="27"/><text x="52.0931%" y="206.50"></text></g><g><title>new_func (pandas/core/nanops.py:404) (27 samples, 1.28%)</title><rect x="51.8431%" y="212" width="1.2760%" height="15" fill="rgb(243,153,54)" fg:x="1097" fg:w="27"/><text x="52.0931%" y="222.50"></text></g><g><title>newfunc (pandas/core/nanops.py:477) (26 samples, 1.23%)</title><rect x="51.8904%" y="228" width="1.2287%" height="15" fill="rgb(251,47,18)" fg:x="1098" fg:w="26"/><text x="52.1404%" y="238.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:384) (187 samples, 8.84%)</title><rect x="44.3289%" y="100" width="8.8374%" height="15" fill="rgb(242,102,42)" fg:x="938" fg:w="187"/><text x="44.5789%" y="110.50">SA_evaluatio..</text></g><g><title>get_normalized_lifespan (evaluation_diff_quantity.py:124) (187 samples, 8.84%)</title><rect x="44.3289%" y="116" width="8.8374%" height="15" fill="rgb(234,31,38)" fg:x="938" fg:w="187"/><text x="44.5789%" y="126.50">get_normaliz..</text></g><g><title>sum (pandas/core/series.py:6528) (43 samples, 2.03%)</title><rect x="51.1342%" y="132" width="2.0321%" height="15" fill="rgb(221,117,51)" fg:x="1082" fg:w="43"/><text x="51.3842%" y="142.50">s..</text></g><g><title>get_revenue (evaluation_diff_quantity.py:148) (5 samples, 0.24%)</title><rect x="53.2609%" y="132" width="0.2363%" height="15" fill="rgb(212,20,18)" fg:x="1127" fg:w="5"/><text x="53.5109%" y="142.50"></text></g><g><title>__iter__ (pandas/core/base.py:862) (3 samples, 0.14%)</title><rect x="53.3554%" y="148" width="0.1418%" height="15" fill="rgb(245,133,36)" fg:x="1129" fg:w="3"/><text x="53.6054%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4065) (3 samples, 0.14%)</title><rect x="53.6389%" y="148" width="0.1418%" height="15" fill="rgb(212,6,19)" fg:x="1135" fg:w="3"/><text x="53.8889%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4075) (5 samples, 0.24%)</title><rect x="53.9225%" y="148" width="0.2363%" height="15" fill="rgb(218,1,36)" fg:x="1141" fg:w="5"/><text x="54.1725%" y="158.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4628) (6 samples, 0.28%)</title><rect x="54.3951%" y="164" width="0.2836%" height="15" fill="rgb(246,84,54)" fg:x="1151" fg:w="6"/><text x="54.6451%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (12 samples, 0.57%)</title><rect x="54.1588%" y="148" width="0.5671%" height="15" fill="rgb(242,110,6)" fg:x="1146" fg:w="12"/><text x="54.4088%" y="158.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3803) (4 samples, 0.19%)</title><rect x="55.2457%" y="196" width="0.1890%" height="15" fill="rgb(214,47,5)" fg:x="1169" fg:w="4"/><text x="55.4957%" y="206.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (13 samples, 0.61%)</title><rect x="55.0567%" y="180" width="0.6144%" height="15" fill="rgb(218,159,25)" fg:x="1165" fg:w="13"/><text x="55.3067%" y="190.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3805) (5 samples, 0.24%)</title><rect x="55.4348%" y="196" width="0.2363%" height="15" fill="rgb(215,211,28)" fg:x="1173" fg:w="5"/><text x="55.6848%" y="206.50"></text></g><g><title>get_revenue (evaluation_diff_quantity.py:150) (49 samples, 2.32%)</title><rect x="53.5444%" y="132" width="2.3157%" height="15" fill="rgb(238,59,32)" fg:x="1133" fg:w="49"/><text x="53.7944%" y="142.50">g..</text></g><g><title>get (pandas/core/generic.py:4581) (24 samples, 1.13%)</title><rect x="54.7259%" y="148" width="1.1342%" height="15" fill="rgb(226,82,3)" fg:x="1158" fg:w="24"/><text x="54.9759%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (18 samples, 0.85%)</title><rect x="55.0095%" y="164" width="0.8507%" height="15" fill="rgb(240,164,32)" fg:x="1164" fg:w="18"/><text x="55.2595%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4063) (5 samples, 0.24%)</title><rect x="55.8601%" y="148" width="0.2363%" height="15" fill="rgb(232,46,7)" fg:x="1182" fg:w="5"/><text x="56.1101%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4075) (4 samples, 0.19%)</title><rect x="56.3800%" y="148" width="0.1890%" height="15" fill="rgb(229,129,53)" fg:x="1193" fg:w="4"/><text x="56.6300%" y="158.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3805) (7 samples, 0.33%)</title><rect x="56.9943%" y="196" width="0.3308%" height="15" fill="rgb(234,188,29)" fg:x="1206" fg:w="7"/><text x="57.2443%" y="206.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (11 samples, 0.52%)</title><rect x="56.8998%" y="180" width="0.5198%" height="15" fill="rgb(246,141,4)" fg:x="1204" fg:w="11"/><text x="57.1498%" y="190.50"></text></g><g><title>get_revenue (evaluation_diff_quantity.py:151) (37 samples, 1.75%)</title><rect x="55.8601%" y="132" width="1.7486%" height="15" fill="rgb(229,23,39)" fg:x="1182" fg:w="37"/><text x="56.1101%" y="142.50"></text></g><g><title>get (pandas/core/generic.py:4581) (20 samples, 0.95%)</title><rect x="56.6635%" y="148" width="0.9452%" height="15" fill="rgb(206,12,3)" fg:x="1199" fg:w="20"/><text x="56.9135%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (16 samples, 0.76%)</title><rect x="56.8526%" y="164" width="0.7561%" height="15" fill="rgb(252,226,20)" fg:x="1203" fg:w="16"/><text x="57.1026%" y="174.50"></text></g><g><title>_get_value (pandas/core/series.py:1240) (4 samples, 0.19%)</title><rect x="57.4197%" y="180" width="0.1890%" height="15" fill="rgb(216,123,35)" fg:x="1215" fg:w="4"/><text x="57.6697%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4063) (4 samples, 0.19%)</title><rect x="57.6560%" y="148" width="0.1890%" height="15" fill="rgb(212,68,40)" fg:x="1220" fg:w="4"/><text x="57.9060%" y="158.50"></text></g><g><title>check_dict_or_set_indexers (pandas/core/indexing.py:2770) (3 samples, 0.14%)</title><rect x="57.7032%" y="164" width="0.1418%" height="15" fill="rgb(254,125,32)" fg:x="1221" fg:w="3"/><text x="57.9532%" y="174.50"></text></g><g><title>fget (pandas/core/indexes/extension.py:68) (10 samples, 0.47%)</title><rect x="58.4594%" y="180" width="0.4726%" height="15" fill="rgb(253,97,22)" fg:x="1237" fg:w="10"/><text x="58.7094%" y="190.50"></text></g><g><title>categories (pandas/core/arrays/categorical.py:820) (8 samples, 0.38%)</title><rect x="58.5539%" y="196" width="0.3781%" height="15" fill="rgb(241,101,14)" fg:x="1239" fg:w="8"/><text x="58.8039%" y="206.50"></text></g><g><title>is_valid_na_for_dtype (pandas/core/dtypes/missing.py:741) (12 samples, 0.57%)</title><rect x="58.9319%" y="180" width="0.5671%" height="15" fill="rgb(238,103,29)" fg:x="1247" fg:w="12"/><text x="59.1819%" y="190.50"></text></g><g><title>isna (pandas/core/dtypes/missing.py:178) (5 samples, 0.24%)</title><rect x="59.2628%" y="196" width="0.2363%" height="15" fill="rgb(233,195,47)" fg:x="1254" fg:w="5"/><text x="59.5128%" y="206.50"></text></g><g><title>__contains__ (pandas/core/indexes/category.py:365) (26 samples, 1.23%)</title><rect x="58.3176%" y="164" width="1.2287%" height="15" fill="rgb(246,218,30)" fg:x="1234" fg:w="26"/><text x="58.5676%" y="174.50"></text></g><g><title>fget (pandas/core/indexes/extension.py:68) (4 samples, 0.19%)</title><rect x="59.7826%" y="196" width="0.1890%" height="15" fill="rgb(219,145,47)" fg:x="1265" fg:w="4"/><text x="60.0326%" y="206.50"></text></g><g><title>categories (pandas/core/arrays/categorical.py:820) (4 samples, 0.19%)</title><rect x="59.7826%" y="212" width="0.1890%" height="15" fill="rgb(243,12,26)" fg:x="1265" fg:w="4"/><text x="60.0326%" y="222.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3803) (4 samples, 0.19%)</title><rect x="59.9716%" y="196" width="0.1890%" height="15" fill="rgb(214,87,16)" fg:x="1269" fg:w="4"/><text x="60.2216%" y="206.50"></text></g><g><title>contains (pandas/core/arrays/categorical.py:230) (11 samples, 0.52%)</title><rect x="59.7353%" y="180" width="0.5198%" height="15" fill="rgb(208,99,42)" fg:x="1264" fg:w="11"/><text x="59.9853%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4075) (48 samples, 2.27%)</title><rect x="58.1758%" y="148" width="2.2684%" height="15" fill="rgb(253,99,2)" fg:x="1231" fg:w="48"/><text x="58.4258%" y="158.50">_..</text></g><g><title>__contains__ (pandas/core/indexes/category.py:368) (19 samples, 0.90%)</title><rect x="59.5463%" y="164" width="0.8979%" height="15" fill="rgb(220,168,23)" fg:x="1260" fg:w="19"/><text x="59.7963%" y="174.50"></text></g><g><title>contains (pandas/core/arrays/categorical.py:240) (4 samples, 0.19%)</title><rect x="60.2552%" y="180" width="0.1890%" height="15" fill="rgb(242,38,24)" fg:x="1275" fg:w="4"/><text x="60.5052%" y="190.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (4 samples, 0.19%)</title><rect x="60.4442%" y="148" width="0.1890%" height="15" fill="rgb(225,182,9)" fg:x="1279" fg:w="4"/><text x="60.6942%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1096) (3 samples, 0.14%)</title><rect x="60.6805%" y="164" width="0.1418%" height="15" fill="rgb(243,178,37)" fg:x="1284" fg:w="3"/><text x="60.9305%" y="174.50"></text></g><g><title>_unbox_scalar (pandas/core/arrays/categorical.py:2151) (4 samples, 0.19%)</title><rect x="61.2949%" y="228" width="0.1890%" height="15" fill="rgb(232,139,19)" fg:x="1297" fg:w="4"/><text x="61.5449%" y="238.50"></text></g><g><title>_unbox_scalar (pandas/core/arrays/categorical.py:2152) (7 samples, 0.33%)</title><rect x="61.4839%" y="228" width="0.3308%" height="15" fill="rgb(225,201,24)" fg:x="1301" fg:w="7"/><text x="61.7339%" y="238.50"></text></g><g><title>_get_value (pandas/core/series.py:1237) (22 samples, 1.04%)</title><rect x="60.8696%" y="180" width="1.0397%" height="15" fill="rgb(221,47,46)" fg:x="1288" fg:w="22"/><text x="61.1196%" y="190.50"></text></g><g><title>get_loc (pandas/core/indexes/base.py:3803) (19 samples, 0.90%)</title><rect x="61.0113%" y="196" width="0.8979%" height="15" fill="rgb(249,23,13)" fg:x="1291" fg:w="19"/><text x="61.2613%" y="206.50"></text></g><g><title>_maybe_cast_indexer (pandas/core/indexes/category.py:405) (17 samples, 0.80%)</title><rect x="61.1059%" y="212" width="0.8034%" height="15" fill="rgb(219,9,5)" fg:x="1293" fg:w="17"/><text x="61.3559%" y="222.50"></text></g><g><title>get_revenue (evaluation_diff_quantity.py:152) (100 samples, 4.73%)</title><rect x="57.6087%" y="132" width="4.7259%" height="15" fill="rgb(254,171,16)" fg:x="1219" fg:w="100"/><text x="57.8587%" y="142.50">get_re..</text></g><g><title>get (pandas/core/generic.py:4581) (36 samples, 1.70%)</title><rect x="60.6333%" y="148" width="1.7013%" height="15" fill="rgb(230,171,20)" fg:x="1283" fg:w="36"/><text x="60.8833%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/series.py:1121) (32 samples, 1.51%)</title><rect x="60.8223%" y="164" width="1.5123%" height="15" fill="rgb(210,71,41)" fg:x="1287" fg:w="32"/><text x="61.0723%" y="174.50"></text></g><g><title>_get_value (pandas/core/series.py:1240) (9 samples, 0.43%)</title><rect x="61.9093%" y="180" width="0.4253%" height="15" fill="rgb(206,173,20)" fg:x="1310" fg:w="9"/><text x="62.1593%" y="190.50"></text></g><g><title>_values (pandas/core/series.py:863) (4 samples, 0.19%)</title><rect x="62.1456%" y="196" width="0.1890%" height="15" fill="rgb(233,88,34)" fg:x="1315" fg:w="4"/><text x="62.3956%" y="206.50"></text></g><g><title>get_profit (evaluation_diff_quantity.py:182) (197 samples, 9.31%)</title><rect x="53.2609%" y="116" width="9.3100%" height="15" fill="rgb(223,209,46)" fg:x="1127" fg:w="197"/><text x="53.5109%" y="126.50">get_profit (e..</text></g><g><title>get_revenue (evaluation_diff_quantity.py:153) (5 samples, 0.24%)</title><rect x="62.3346%" y="132" width="0.2363%" height="15" fill="rgb(250,43,18)" fg:x="1319" fg:w="5"/><text x="62.5846%" y="142.50"></text></g><g><title>iget (pandas/core/internals/managers.py:1017) (3 samples, 0.14%)</title><rect x="63.0907%" y="196" width="0.1418%" height="15" fill="rgb(208,13,10)" fg:x="1335" fg:w="3"/><text x="63.3407%" y="206.50"></text></g><g><title>iget (pandas/core/internals/managers.py:1021) (3 samples, 0.14%)</title><rect x="63.2325%" y="196" width="0.1418%" height="15" fill="rgb(212,200,36)" fg:x="1338" fg:w="3"/><text x="63.4825%" y="206.50"></text></g><g><title>_ixs (pandas/core/frame.py:4010) (8 samples, 0.38%)</title><rect x="63.0907%" y="180" width="0.3781%" height="15" fill="rgb(225,90,30)" fg:x="1335" fg:w="8"/><text x="63.3407%" y="190.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4614) (3 samples, 0.14%)</title><rect x="63.4688%" y="196" width="0.1418%" height="15" fill="rgb(236,182,39)" fg:x="1343" fg:w="3"/><text x="63.7188%" y="206.50"></text></g><g><title>_constructor_sliced_from_mgr (pandas/core/frame.py:679) (4 samples, 0.19%)</title><rect x="63.6578%" y="212" width="0.1890%" height="15" fill="rgb(212,144,35)" fg:x="1347" fg:w="4"/><text x="63.9078%" y="222.50"></text></g><g><title>_from_mgr (pandas/core/generic.py:357) (4 samples, 0.19%)</title><rect x="63.6578%" y="228" width="0.1890%" height="15" fill="rgb(228,63,44)" fg:x="1347" fg:w="4"/><text x="63.9078%" y="238.50"></text></g><g><title>__init__ (pandas/core/generic.py:283) (4 samples, 0.19%)</title><rect x="63.6578%" y="244" width="0.1890%" height="15" fill="rgb(228,109,6)" fg:x="1347" fg:w="4"/><text x="63.9078%" y="254.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (3 samples, 0.14%)</title><rect x="63.8469%" y="228" width="0.1418%" height="15" fill="rgb(238,117,24)" fg:x="1351" fg:w="3"/><text x="64.0969%" y="238.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4616) (9 samples, 0.43%)</title><rect x="63.6106%" y="196" width="0.4253%" height="15" fill="rgb(242,26,26)" fg:x="1346" fg:w="9"/><text x="63.8606%" y="206.50"></text></g><g><title>_constructor_sliced_from_mgr (pandas/core/frame.py:680) (4 samples, 0.19%)</title><rect x="63.8469%" y="212" width="0.1890%" height="15" fill="rgb(221,92,48)" fg:x="1351" fg:w="4"/><text x="64.0969%" y="222.50"></text></g><g><title>_ixs (pandas/core/frame.py:4011) (15 samples, 0.71%)</title><rect x="63.4688%" y="180" width="0.7089%" height="15" fill="rgb(209,209,32)" fg:x="1343" fg:w="15"/><text x="63.7188%" y="190.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4618) (3 samples, 0.14%)</title><rect x="64.0359%" y="196" width="0.1418%" height="15" fill="rgb(221,70,22)" fg:x="1355" fg:w="3"/><text x="64.2859%" y="206.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4639) (26 samples, 1.23%)</title><rect x="63.0435%" y="164" width="1.2287%" height="15" fill="rgb(248,145,5)" fg:x="1334" fg:w="26"/><text x="63.2935%" y="174.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (30 samples, 1.42%)</title><rect x="62.9490%" y="148" width="1.4178%" height="15" fill="rgb(226,116,26)" fg:x="1332" fg:w="30"/><text x="63.1990%" y="158.50"></text></g><g><title>_arith_method (pandas/core/series.py:6134) (5 samples, 0.24%)</title><rect x="64.3667%" y="180" width="0.2363%" height="15" fill="rgb(244,5,17)" fg:x="1362" fg:w="5"/><text x="64.6167%" y="190.50"></text></g><g><title>_arith_method (pandas/core/base.py:1372) (3 samples, 0.14%)</title><rect x="64.6503%" y="196" width="0.1418%" height="15" fill="rgb(252,159,33)" fg:x="1368" fg:w="3"/><text x="64.9003%" y="206.50"></text></g><g><title>_arith_method (pandas/core/base.py:1376) (3 samples, 0.14%)</title><rect x="64.8866%" y="196" width="0.1418%" height="15" fill="rgb(206,71,0)" fg:x="1373" fg:w="3"/><text x="65.1366%" y="206.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:431) (4 samples, 0.19%)</title><rect x="65.0284%" y="212" width="0.1890%" height="15" fill="rgb(233,118,54)" fg:x="1376" fg:w="4"/><text x="65.2784%" y="222.50"></text></g><g><title>_arith_method (pandas/core/base.py:1381) (5 samples, 0.24%)</title><rect x="65.0284%" y="196" width="0.2363%" height="15" fill="rgb(234,83,48)" fg:x="1376" fg:w="5"/><text x="65.2784%" y="206.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:436) (6 samples, 0.28%)</title><rect x="65.3119%" y="212" width="0.2836%" height="15" fill="rgb(228,3,54)" fg:x="1382" fg:w="6"/><text x="65.5619%" y="222.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (14 samples, 0.66%)</title><rect x="65.2647%" y="196" width="0.6616%" height="15" fill="rgb(226,155,13)" fg:x="1381" fg:w="14"/><text x="65.5147%" y="206.50"></text></g><g><title>arithmetic_op (pandas/core/ops/array_ops.py:283) (7 samples, 0.33%)</title><rect x="65.5955%" y="212" width="0.3308%" height="15" fill="rgb(241,28,37)" fg:x="1388" fg:w="7"/><text x="65.8455%" y="222.50"></text></g><g><title>_na_arithmetic_op (pandas/core/ops/array_ops.py:218) (6 samples, 0.28%)</title><rect x="65.6427%" y="228" width="0.2836%" height="15" fill="rgb(233,93,10)" fg:x="1389" fg:w="6"/><text x="65.8927%" y="238.50"></text></g><g><title>evaluate (pandas/core/computation/expressions.py:242) (4 samples, 0.19%)</title><rect x="65.7372%" y="244" width="0.1890%" height="15" fill="rgb(225,113,19)" fg:x="1391" fg:w="4"/><text x="65.9872%" y="254.50"></text></g><g><title>_evaluate_standard (pandas/core/computation/expressions.py:73) (4 samples, 0.19%)</title><rect x="65.7372%" y="260" width="0.1890%" height="15" fill="rgb(241,2,18)" fg:x="1391" fg:w="4"/><text x="65.9872%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:493) (3 samples, 0.14%)</title><rect x="66.2571%" y="228" width="0.1418%" height="15" fill="rgb(228,207,21)" fg:x="1402" fg:w="3"/><text x="66.5071%" y="238.50"></text></g><g><title>_validate_dtype (pandas/core/generic.py:516) (3 samples, 0.14%)</title><rect x="66.2571%" y="244" width="0.1418%" height="15" fill="rgb(213,211,35)" fg:x="1402" fg:w="3"/><text x="66.5071%" y="254.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:625) (3 samples, 0.14%)</title><rect x="66.7769%" y="244" width="0.1418%" height="15" fill="rgb(209,83,10)" fg:x="1413" fg:w="3"/><text x="67.0269%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (11 samples, 0.52%)</title><rect x="66.5406%" y="228" width="0.5198%" height="15" fill="rgb(209,164,1)" fg:x="1408" fg:w="11"/><text x="66.7906%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:586) (3 samples, 0.14%)</title><rect x="67.0605%" y="228" width="0.1418%" height="15" fill="rgb(213,184,43)" fg:x="1419" fg:w="3"/><text x="67.3105%" y="238.50"></text></g><g><title>_get_option (pandas/_config/config.py:146) (3 samples, 0.14%)</title><rect x="67.0605%" y="244" width="0.1418%" height="15" fill="rgb(231,61,34)" fg:x="1419" fg:w="3"/><text x="67.3105%" y="254.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1870) (5 samples, 0.24%)</title><rect x="67.2968%" y="244" width="0.2363%" height="15" fill="rgb(235,75,3)" fg:x="1424" fg:w="5"/><text x="67.5468%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (8 samples, 0.38%)</title><rect x="67.2495%" y="228" width="0.3781%" height="15" fill="rgb(220,106,47)" fg:x="1423" fg:w="8"/><text x="67.4995%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:592) (6 samples, 0.28%)</title><rect x="67.6276%" y="228" width="0.2836%" height="15" fill="rgb(210,196,33)" fg:x="1431" fg:w="6"/><text x="67.8776%" y="238.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (3 samples, 0.14%)</title><rect x="67.9112%" y="244" width="0.1418%" height="15" fill="rgb(229,154,42)" fg:x="1437" fg:w="3"/><text x="68.1612%" y="254.50"></text></g><g><title>name (pandas/core/series.py:782) (3 samples, 0.14%)</title><rect x="67.9112%" y="260" width="0.1418%" height="15" fill="rgb(228,114,26)" fg:x="1437" fg:w="3"/><text x="68.1612%" y="270.50"></text></g><g><title>name (pandas/core/series.py:786) (4 samples, 0.19%)</title><rect x="68.1002%" y="260" width="0.1890%" height="15" fill="rgb(208,144,1)" fg:x="1441" fg:w="4"/><text x="68.3502%" y="270.50"></text></g><g><title>validate_all_hashable (pandas/core/dtypes/common.py:1590) (3 samples, 0.14%)</title><rect x="68.1474%" y="276" width="0.1418%" height="15" fill="rgb(239,112,37)" fg:x="1442" fg:w="3"/><text x="68.3974%" y="286.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/dtypes/common.py:1590) (3 samples, 0.14%)</title><rect x="68.1474%" y="292" width="0.1418%" height="15" fill="rgb(210,96,50)" fg:x="1442" fg:w="3"/><text x="68.3974%" y="302.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (9 samples, 0.43%)</title><rect x="67.9112%" y="228" width="0.4253%" height="15" fill="rgb(222,178,2)" fg:x="1437" fg:w="9"/><text x="68.1612%" y="238.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6320) (5 samples, 0.24%)</title><rect x="68.1002%" y="244" width="0.2363%" height="15" fill="rgb(226,74,18)" fg:x="1441" fg:w="5"/><text x="68.3502%" y="254.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (50 samples, 2.36%)</title><rect x="66.0208%" y="212" width="2.3629%" height="15" fill="rgb(225,67,54)" fg:x="1397" fg:w="50"/><text x="66.2708%" y="222.50">_c..</text></g><g><title>get_cost (evaluation_diff_quantity.py:160) (123 samples, 5.81%)</title><rect x="62.7127%" y="132" width="5.8129%" height="15" fill="rgb(251,92,32)" fg:x="1327" fg:w="123"/><text x="62.9627%" y="142.50">get_cos..</text></g><g><title>new_method (pandas/core/ops/common.py:76) (88 samples, 4.16%)</title><rect x="64.3667%" y="148" width="4.1588%" height="15" fill="rgb(228,149,22)" fg:x="1362" fg:w="88"/><text x="64.6167%" y="158.50">new_m..</text></g><g><title>__mul__ (pandas/core/arraylike.py:202) (88 samples, 4.16%)</title><rect x="64.3667%" y="164" width="4.1588%" height="15" fill="rgb(243,54,13)" fg:x="1362" fg:w="88"/><text x="64.6167%" y="174.50">__mul..</text></g><g><title>_arith_method (pandas/core/series.py:6135) (83 samples, 3.92%)</title><rect x="64.6030%" y="180" width="3.9225%" height="15" fill="rgb(243,180,28)" fg:x="1367" fg:w="83"/><text x="64.8530%" y="190.50">_ari..</text></g><g><title>_arith_method (pandas/core/base.py:1384) (55 samples, 2.60%)</title><rect x="65.9263%" y="196" width="2.5992%" height="15" fill="rgb(208,167,24)" fg:x="1395" fg:w="55"/><text x="66.1763%" y="206.50">_a..</text></g><g><title>_box_col_values (pandas/core/frame.py:4614) (3 samples, 0.14%)</title><rect x="68.9981%" y="196" width="0.1418%" height="15" fill="rgb(245,73,45)" fg:x="1460" fg:w="3"/><text x="69.2481%" y="206.50"></text></g><g><title>get_cost (evaluation_diff_quantity.py:165) (14 samples, 0.66%)</title><rect x="68.7146%" y="132" width="0.6616%" height="15" fill="rgb(237,203,48)" fg:x="1454" fg:w="14"/><text x="68.9646%" y="142.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (11 samples, 0.52%)</title><rect x="68.8563%" y="148" width="0.5198%" height="15" fill="rgb(211,197,16)" fg:x="1457" fg:w="11"/><text x="69.1063%" y="158.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4639) (10 samples, 0.47%)</title><rect x="68.9036%" y="164" width="0.4726%" height="15" fill="rgb(243,99,51)" fg:x="1458" fg:w="10"/><text x="69.1536%" y="174.50"></text></g><g><title>_ixs (pandas/core/frame.py:4011) (8 samples, 0.38%)</title><rect x="68.9981%" y="180" width="0.3781%" height="15" fill="rgb(215,123,29)" fg:x="1460" fg:w="8"/><text x="69.2481%" y="190.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4618) (3 samples, 0.14%)</title><rect x="69.2344%" y="196" width="0.1418%" height="15" fill="rgb(239,186,37)" fg:x="1465" fg:w="3"/><text x="69.4844%" y="206.50"></text></g><g><title>__finalize__ (pandas/core/generic.py:6262) (3 samples, 0.14%)</title><rect x="69.2344%" y="212" width="0.1418%" height="15" fill="rgb(252,136,39)" fg:x="1465" fg:w="3"/><text x="69.4844%" y="222.50"></text></g><g><title>_arith_method (pandas/core/base.py:1381) (3 samples, 0.14%)</title><rect x="69.6597%" y="196" width="0.1418%" height="15" fill="rgb(223,213,32)" fg:x="1474" fg:w="3"/><text x="69.9097%" y="206.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:431) (3 samples, 0.14%)</title><rect x="69.6597%" y="212" width="0.1418%" height="15" fill="rgb(233,115,5)" fg:x="1474" fg:w="3"/><text x="69.9097%" y="222.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (5 samples, 0.24%)</title><rect x="69.8015%" y="196" width="0.2363%" height="15" fill="rgb(207,226,44)" fg:x="1477" fg:w="5"/><text x="70.0515%" y="206.50"></text></g><g><title>maybe_extract_name (pandas/core/indexes/base.py:7692) (3 samples, 0.14%)</title><rect x="70.1796%" y="244" width="0.1418%" height="15" fill="rgb(208,126,0)" fg:x="1485" fg:w="3"/><text x="70.4296%" y="254.50"></text></g><g><title>_instancecheck (pandas/core/dtypes/generic.py:44) (3 samples, 0.14%)</title><rect x="70.1796%" y="260" width="0.1418%" height="15" fill="rgb(244,66,21)" fg:x="1485" fg:w="3"/><text x="70.4296%" y="270.50"></text></g><g><title>_check (pandas/core/dtypes/generic.py:37) (3 samples, 0.14%)</title><rect x="70.1796%" y="276" width="0.1418%" height="15" fill="rgb(222,97,12)" fg:x="1485" fg:w="3"/><text x="70.4296%" y="286.50"></text></g><g><title>__init__ (pandas/core/series.py:487) (4 samples, 0.19%)</title><rect x="70.1796%" y="228" width="0.1890%" height="15" fill="rgb(219,213,19)" fg:x="1485" fg:w="4"/><text x="70.4296%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (5 samples, 0.24%)</title><rect x="70.4159%" y="228" width="0.2363%" height="15" fill="rgb(252,169,30)" fg:x="1490" fg:w="5"/><text x="70.6659%" y="238.50"></text></g><g><title>_get_root (pandas/_config/config.py:636) (3 samples, 0.14%)</title><rect x="70.6522%" y="260" width="0.1418%" height="15" fill="rgb(206,32,51)" fg:x="1495" fg:w="3"/><text x="70.9022%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:586) (4 samples, 0.19%)</title><rect x="70.6522%" y="228" width="0.1890%" height="15" fill="rgb(250,172,42)" fg:x="1495" fg:w="4"/><text x="70.9022%" y="238.50"></text></g><g><title>_get_option (pandas/_config/config.py:149) (4 samples, 0.19%)</title><rect x="70.6522%" y="244" width="0.1890%" height="15" fill="rgb(209,34,43)" fg:x="1495" fg:w="4"/><text x="70.9022%" y="254.50"></text></g><g><title>__init__ (pandas/core/series.py:592) (3 samples, 0.14%)</title><rect x="70.9357%" y="228" width="0.1418%" height="15" fill="rgb(223,11,35)" fg:x="1501" fg:w="3"/><text x="71.1857%" y="238.50"></text></g><g><title>__init__ (pandas/core/generic.py:282) (3 samples, 0.14%)</title><rect x="70.9357%" y="244" width="0.1418%" height="15" fill="rgb(251,219,26)" fg:x="1501" fg:w="3"/><text x="71.1857%" y="254.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (4 samples, 0.19%)</title><rect x="71.1248%" y="244" width="0.1890%" height="15" fill="rgb(231,119,3)" fg:x="1505" fg:w="4"/><text x="71.3748%" y="254.50"></text></g><g><title>name (pandas/core/series.py:782) (3 samples, 0.14%)</title><rect x="71.1720%" y="260" width="0.1418%" height="15" fill="rgb(216,97,11)" fg:x="1506" fg:w="3"/><text x="71.4220%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (10 samples, 0.47%)</title><rect x="71.0775%" y="228" width="0.4726%" height="15" fill="rgb(223,59,9)" fg:x="1504" fg:w="10"/><text x="71.3275%" y="238.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6320) (4 samples, 0.19%)</title><rect x="71.3611%" y="244" width="0.1890%" height="15" fill="rgb(233,93,31)" fg:x="1510" fg:w="4"/><text x="71.6111%" y="254.50"></text></g><g><title>name (pandas/core/series.py:786) (4 samples, 0.19%)</title><rect x="71.3611%" y="260" width="0.1890%" height="15" fill="rgb(239,81,33)" fg:x="1510" fg:w="4"/><text x="71.6111%" y="270.50"></text></g><g><title>validate_all_hashable (pandas/core/dtypes/common.py:1590) (4 samples, 0.19%)</title><rect x="71.3611%" y="276" width="0.1890%" height="15" fill="rgb(213,120,34)" fg:x="1510" fg:w="4"/><text x="71.6111%" y="286.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (32 samples, 1.51%)</title><rect x="70.0851%" y="212" width="1.5123%" height="15" fill="rgb(243,49,53)" fg:x="1483" fg:w="32"/><text x="70.3351%" y="222.50"></text></g><g><title>__rmul__ (pandas/core/arraylike.py:206) (47 samples, 2.22%)</title><rect x="69.4707%" y="164" width="2.2212%" height="15" fill="rgb(247,216,33)" fg:x="1470" fg:w="47"/><text x="69.7207%" y="174.50">_..</text></g><g><title>_arith_method (pandas/core/series.py:6135) (44 samples, 2.08%)</title><rect x="69.6125%" y="180" width="2.0794%" height="15" fill="rgb(226,26,14)" fg:x="1473" fg:w="44"/><text x="69.8625%" y="190.50">_..</text></g><g><title>_arith_method (pandas/core/base.py:1384) (35 samples, 1.65%)</title><rect x="70.0378%" y="196" width="1.6541%" height="15" fill="rgb(215,49,53)" fg:x="1482" fg:w="35"/><text x="70.2878%" y="206.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (9 samples, 0.43%)</title><rect x="71.8809%" y="196" width="0.4253%" height="15" fill="rgb(245,162,40)" fg:x="1521" fg:w="9"/><text x="72.1309%" y="206.50"></text></g><g><title>arithmetic_op (pandas/core/ops/array_ops.py:283) (3 samples, 0.14%)</title><rect x="72.1645%" y="212" width="0.1418%" height="15" fill="rgb(229,68,17)" fg:x="1527" fg:w="3"/><text x="72.4145%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (3 samples, 0.14%)</title><rect x="72.4953%" y="228" width="0.1418%" height="15" fill="rgb(213,182,10)" fg:x="1534" fg:w="3"/><text x="72.7453%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (4 samples, 0.19%)</title><rect x="72.7316%" y="228" width="0.1890%" height="15" fill="rgb(245,125,30)" fg:x="1539" fg:w="4"/><text x="72.9816%" y="238.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (16 samples, 0.76%)</title><rect x="72.3062%" y="212" width="0.7561%" height="15" fill="rgb(232,202,2)" fg:x="1530" fg:w="16"/><text x="72.5562%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (3 samples, 0.14%)</title><rect x="72.9206%" y="228" width="0.1418%" height="15" fill="rgb(237,140,51)" fg:x="1543" fg:w="3"/><text x="73.1706%" y="238.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (3 samples, 0.14%)</title><rect x="72.9206%" y="244" width="0.1418%" height="15" fill="rgb(236,157,25)" fg:x="1543" fg:w="3"/><text x="73.1706%" y="254.50"></text></g><g><title>name (pandas/core/series.py:782) (3 samples, 0.14%)</title><rect x="72.9206%" y="260" width="0.1418%" height="15" fill="rgb(219,209,0)" fg:x="1543" fg:w="3"/><text x="73.1706%" y="270.50"></text></g><g><title>get_cost (evaluation_diff_quantity.py:166) (81 samples, 3.83%)</title><rect x="69.3762%" y="132" width="3.8280%" height="15" fill="rgb(240,116,54)" fg:x="1468" fg:w="81"/><text x="69.6262%" y="142.50">get_..</text></g><g><title>new_method (pandas/core/ops/common.py:76) (80 samples, 3.78%)</title><rect x="69.4234%" y="148" width="3.7807%" height="15" fill="rgb(216,10,36)" fg:x="1469" fg:w="80"/><text x="69.6734%" y="158.50">new_..</text></g><g><title>__truediv__ (pandas/core/arraylike.py:210) (32 samples, 1.51%)</title><rect x="71.6919%" y="164" width="1.5123%" height="15" fill="rgb(222,72,44)" fg:x="1517" fg:w="32"/><text x="71.9419%" y="174.50"></text></g><g><title>_arith_method (pandas/core/series.py:6135) (30 samples, 1.42%)</title><rect x="71.7864%" y="180" width="1.4178%" height="15" fill="rgb(232,159,9)" fg:x="1519" fg:w="30"/><text x="72.0364%" y="190.50"></text></g><g><title>_arith_method (pandas/core/base.py:1384) (19 samples, 0.90%)</title><rect x="72.3062%" y="196" width="0.8979%" height="15" fill="rgb(210,39,32)" fg:x="1530" fg:w="19"/><text x="72.5562%" y="206.50"></text></g><g><title>array_ufunc (pandas/core/arraylike.py:265) (3 samples, 0.14%)</title><rect x="73.4405%" y="164" width="0.1418%" height="15" fill="rgb(216,194,45)" fg:x="1554" fg:w="3"/><text x="73.6905%" y="174.50"></text></g><g><title>array_ufunc (pandas/core/arraylike.py:303) (3 samples, 0.14%)</title><rect x="73.8658%" y="164" width="0.1418%" height="15" fill="rgb(218,18,35)" fg:x="1563" fg:w="3"/><text x="74.1158%" y="174.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:605) (3 samples, 0.14%)</title><rect x="74.6219%" y="228" width="0.1418%" height="15" fill="rgb(207,83,51)" fg:x="1579" fg:w="3"/><text x="74.8719%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (6 samples, 0.28%)</title><rect x="74.5274%" y="212" width="0.2836%" height="15" fill="rgb(225,63,43)" fg:x="1577" fg:w="6"/><text x="74.7774%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (3 samples, 0.14%)</title><rect x="74.8582%" y="212" width="0.1418%" height="15" fill="rgb(207,57,36)" fg:x="1584" fg:w="3"/><text x="75.1082%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (3 samples, 0.14%)</title><rect x="75.0000%" y="212" width="0.1418%" height="15" fill="rgb(216,99,33)" fg:x="1587" fg:w="3"/><text x="75.2500%" y="222.50"></text></g><g><title>_reconstruct (pandas/core/arraylike.py:358) (21 samples, 0.99%)</title><rect x="74.2439%" y="196" width="0.9924%" height="15" fill="rgb(225,42,16)" fg:x="1571" fg:w="21"/><text x="74.4939%" y="206.50"></text></g><g><title>__array_ufunc__ (pandas/core/generic.py:2171) (41 samples, 1.94%)</title><rect x="73.3459%" y="148" width="1.9376%" height="15" fill="rgb(220,201,45)" fg:x="1552" fg:w="41"/><text x="73.5959%" y="158.50">_..</text></g><g><title>array_ufunc (pandas/core/arraylike.py:414) (23 samples, 1.09%)</title><rect x="74.1966%" y="164" width="1.0870%" height="15" fill="rgb(225,33,4)" fg:x="1570" fg:w="23"/><text x="74.4466%" y="174.50"></text></g><g><title>reconstruct (pandas/core/arraylike.py:343) (23 samples, 1.09%)</title><rect x="74.1966%" y="180" width="1.0870%" height="15" fill="rgb(224,33,50)" fg:x="1570" fg:w="23"/><text x="74.4466%" y="190.50"></text></g><g><title>_arith_method (pandas/core/base.py:1374) (3 samples, 0.14%)</title><rect x="75.8034%" y="196" width="0.1418%" height="15" fill="rgb(246,198,51)" fg:x="1604" fg:w="3"/><text x="76.0534%" y="206.50"></text></g><g><title>_values (pandas/core/series.py:863) (3 samples, 0.14%)</title><rect x="75.8034%" y="212" width="0.1418%" height="15" fill="rgb(205,22,4)" fg:x="1604" fg:w="3"/><text x="76.0534%" y="222.50"></text></g><g><title>_arith_method (pandas/core/base.py:1375) (3 samples, 0.14%)</title><rect x="75.9452%" y="196" width="0.1418%" height="15" fill="rgb(206,3,8)" fg:x="1607" fg:w="3"/><text x="76.1952%" y="206.50"></text></g><g><title>extract_array (pandas/core/construction.py:471) (3 samples, 0.14%)</title><rect x="75.9452%" y="212" width="0.1418%" height="15" fill="rgb(251,23,15)" fg:x="1607" fg:w="3"/><text x="76.1952%" y="222.50"></text></g><g><title>geterr (numpy/core/_ufunc_config.py:168) (3 samples, 0.14%)</title><rect x="76.2287%" y="244" width="0.1418%" height="15" fill="rgb(252,88,28)" fg:x="1613" fg:w="3"/><text x="76.4787%" y="254.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:111) (6 samples, 0.28%)</title><rect x="76.2287%" y="228" width="0.2836%" height="15" fill="rgb(212,127,14)" fg:x="1613" fg:w="6"/><text x="76.4787%" y="238.50"></text></g><g><title>_arith_method (pandas/core/base.py:1381) (11 samples, 0.52%)</title><rect x="76.1815%" y="196" width="0.5198%" height="15" fill="rgb(247,145,37)" fg:x="1612" fg:w="11"/><text x="76.4315%" y="206.50"></text></g><g><title>__enter__ (numpy/core/_ufunc_config.py:431) (10 samples, 0.47%)</title><rect x="76.2287%" y="212" width="0.4726%" height="15" fill="rgb(209,117,53)" fg:x="1613" fg:w="10"/><text x="76.4787%" y="222.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:111) (3 samples, 0.14%)</title><rect x="76.7486%" y="228" width="0.1418%" height="15" fill="rgb(212,90,42)" fg:x="1624" fg:w="3"/><text x="76.9986%" y="238.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:436) (6 samples, 0.28%)</title><rect x="76.7013%" y="212" width="0.2836%" height="15" fill="rgb(218,164,37)" fg:x="1623" fg:w="6"/><text x="76.9513%" y="222.50"></text></g><g><title>_na_arithmetic_op (pandas/core/ops/array_ops.py:218) (9 samples, 0.43%)</title><rect x="77.1739%" y="228" width="0.4253%" height="15" fill="rgb(246,65,34)" fg:x="1633" fg:w="9"/><text x="77.4239%" y="238.50"></text></g><g><title>evaluate (pandas/core/computation/expressions.py:242) (9 samples, 0.43%)</title><rect x="77.1739%" y="244" width="0.4253%" height="15" fill="rgb(231,100,33)" fg:x="1633" fg:w="9"/><text x="77.4239%" y="254.50"></text></g><g><title>_evaluate_standard (pandas/core/computation/expressions.py:73) (9 samples, 0.43%)</title><rect x="77.1739%" y="260" width="0.4253%" height="15" fill="rgb(228,126,14)" fg:x="1633" fg:w="9"/><text x="77.4239%" y="270.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (21 samples, 0.99%)</title><rect x="76.7013%" y="196" width="0.9924%" height="15" fill="rgb(215,173,21)" fg:x="1623" fg:w="21"/><text x="76.9513%" y="206.50"></text></g><g><title>arithmetic_op (pandas/core/ops/array_ops.py:283) (13 samples, 0.61%)</title><rect x="77.0794%" y="212" width="0.6144%" height="15" fill="rgb(210,6,40)" fg:x="1631" fg:w="13"/><text x="77.3294%" y="222.50"></text></g><g><title>sanitize_array (pandas/core/construction.py:551) (4 samples, 0.19%)</title><rect x="78.3081%" y="244" width="0.1890%" height="15" fill="rgb(212,48,18)" fg:x="1657" fg:w="4"/><text x="78.5581%" y="254.50"></text></g><g><title>_instancecheck (pandas/core/dtypes/generic.py:44) (4 samples, 0.19%)</title><rect x="78.3081%" y="260" width="0.1890%" height="15" fill="rgb(230,214,11)" fg:x="1657" fg:w="4"/><text x="78.5581%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (13 samples, 0.61%)</title><rect x="78.1664%" y="228" width="0.6144%" height="15" fill="rgb(254,105,39)" fg:x="1654" fg:w="13"/><text x="78.4164%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:586) (4 samples, 0.19%)</title><rect x="78.7807%" y="228" width="0.1890%" height="15" fill="rgb(245,158,5)" fg:x="1667" fg:w="4"/><text x="79.0307%" y="238.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1870) (5 samples, 0.24%)</title><rect x="79.0170%" y="244" width="0.2363%" height="15" fill="rgb(249,208,11)" fg:x="1672" fg:w="5"/><text x="79.2670%" y="254.50"></text></g><g><title>from_array (pandas/core/internals/managers.py:1872) (4 samples, 0.19%)</title><rect x="79.2533%" y="244" width="0.1890%" height="15" fill="rgb(210,39,28)" fg:x="1677" fg:w="4"/><text x="79.5033%" y="254.50"></text></g><g><title>new_block (pandas/core/internals/blocks.py:2728) (3 samples, 0.14%)</title><rect x="79.3006%" y="260" width="0.1418%" height="15" fill="rgb(211,56,53)" fg:x="1678" fg:w="3"/><text x="79.5506%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:588) (10 samples, 0.47%)</title><rect x="79.0170%" y="228" width="0.4726%" height="15" fill="rgb(226,201,30)" fg:x="1672" fg:w="10"/><text x="79.2670%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:592) (7 samples, 0.33%)</title><rect x="79.4896%" y="228" width="0.3308%" height="15" fill="rgb(239,101,34)" fg:x="1682" fg:w="7"/><text x="79.7396%" y="238.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (5 samples, 0.24%)</title><rect x="79.8204%" y="244" width="0.2363%" height="15" fill="rgb(226,209,5)" fg:x="1689" fg:w="5"/><text x="80.0704%" y="254.50"></text></g><g><title>name (pandas/core/series.py:782) (3 samples, 0.14%)</title><rect x="79.9149%" y="260" width="0.1418%" height="15" fill="rgb(250,105,47)" fg:x="1691" fg:w="3"/><text x="80.1649%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (6 samples, 0.28%)</title><rect x="79.8204%" y="228" width="0.2836%" height="15" fill="rgb(230,72,3)" fg:x="1689" fg:w="6"/><text x="80.0704%" y="238.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (51 samples, 2.41%)</title><rect x="77.7410%" y="212" width="2.4102%" height="15" fill="rgb(232,218,39)" fg:x="1645" fg:w="51"/><text x="77.9910%" y="222.50">_c..</text></g><g><title>_construct_result (pandas/core/series.py:6232) (6 samples, 0.28%)</title><rect x="80.1512%" y="212" width="0.2836%" height="15" fill="rgb(248,166,6)" fg:x="1696" fg:w="6"/><text x="80.4012%" y="222.50"></text></g><g><title>__mul__ (pandas/core/arraylike.py:202) (108 samples, 5.10%)</title><rect x="75.5198%" y="164" width="5.1040%" height="15" fill="rgb(247,89,20)" fg:x="1598" fg:w="108"/><text x="75.7698%" y="174.50">__mul_..</text></g><g><title>_arith_method (pandas/core/series.py:6135) (105 samples, 4.96%)</title><rect x="75.6616%" y="180" width="4.9622%" height="15" fill="rgb(248,130,54)" fg:x="1601" fg:w="105"/><text x="75.9116%" y="190.50">_arith..</text></g><g><title>_arith_method (pandas/core/base.py:1384) (62 samples, 2.93%)</title><rect x="77.6938%" y="196" width="2.9301%" height="15" fill="rgb(234,196,4)" fg:x="1644" fg:w="62"/><text x="77.9438%" y="206.50">_a..</text></g><g><title>_construct_result (pandas/core/series.py:6236) (4 samples, 0.19%)</title><rect x="80.4348%" y="212" width="0.1890%" height="15" fill="rgb(250,143,31)" fg:x="1702" fg:w="4"/><text x="80.6848%" y="222.50"></text></g><g><title>_arith_method (pandas/core/base.py:1381) (5 samples, 0.24%)</title><rect x="80.7183%" y="196" width="0.2363%" height="15" fill="rgb(211,110,34)" fg:x="1708" fg:w="5"/><text x="80.9683%" y="206.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (6 samples, 0.28%)</title><rect x="80.9546%" y="196" width="0.2836%" height="15" fill="rgb(215,124,48)" fg:x="1713" fg:w="6"/><text x="81.2046%" y="206.50"></text></g><g><title>arithmetic_op (pandas/core/ops/array_ops.py:283) (3 samples, 0.14%)</title><rect x="81.0964%" y="212" width="0.1418%" height="15" fill="rgb(216,46,13)" fg:x="1716" fg:w="3"/><text x="81.3464%" y="222.50"></text></g><g><title>__init__ (pandas/core/series.py:592) (3 samples, 0.14%)</title><rect x="81.5690%" y="228" width="0.1418%" height="15" fill="rgb(205,184,25)" fg:x="1726" fg:w="3"/><text x="81.8190%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (4 samples, 0.19%)</title><rect x="81.7108%" y="228" width="0.1890%" height="15" fill="rgb(228,1,10)" fg:x="1729" fg:w="4"/><text x="81.9608%" y="238.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (16 samples, 0.76%)</title><rect x="81.2382%" y="212" width="0.7561%" height="15" fill="rgb(213,116,27)" fg:x="1719" fg:w="16"/><text x="81.4882%" y="222.50"></text></g><g><title>get_cost (evaluation_diff_quantity.py:167) (188 samples, 8.88%)</title><rect x="73.2042%" y="132" width="8.8847%" height="15" fill="rgb(241,95,50)" fg:x="1549" fg:w="188"/><text x="73.4542%" y="142.50">get_cost (eva..</text></g><g><title>new_method (pandas/core/ops/common.py:76) (142 samples, 6.71%)</title><rect x="75.3781%" y="148" width="6.7108%" height="15" fill="rgb(238,48,32)" fg:x="1595" fg:w="142"/><text x="75.6281%" y="158.50">new_metho..</text></g><g><title>__radd__ (pandas/core/arraylike.py:190) (30 samples, 1.42%)</title><rect x="80.6711%" y="164" width="1.4178%" height="15" fill="rgb(235,113,49)" fg:x="1707" fg:w="30"/><text x="80.9211%" y="174.50"></text></g><g><title>_arith_method (pandas/core/series.py:6135) (30 samples, 1.42%)</title><rect x="80.6711%" y="180" width="1.4178%" height="15" fill="rgb(205,127,43)" fg:x="1707" fg:w="30"/><text x="80.9211%" y="190.50"></text></g><g><title>_arith_method (pandas/core/base.py:1384) (18 samples, 0.85%)</title><rect x="81.2382%" y="196" width="0.8507%" height="15" fill="rgb(250,162,2)" fg:x="1719" fg:w="18"/><text x="81.4882%" y="206.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (3 samples, 0.14%)</title><rect x="82.2779%" y="196" width="0.1418%" height="15" fill="rgb(220,13,41)" fg:x="1741" fg:w="3"/><text x="82.5279%" y="206.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (4 samples, 0.19%)</title><rect x="82.6560%" y="228" width="0.1890%" height="15" fill="rgb(249,221,25)" fg:x="1749" fg:w="4"/><text x="82.9060%" y="238.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6312) (3 samples, 0.14%)</title><rect x="83.0813%" y="244" width="0.1418%" height="15" fill="rgb(215,208,19)" fg:x="1758" fg:w="3"/><text x="83.3313%" y="254.50"></text></g><g><title>name (pandas/core/series.py:782) (3 samples, 0.14%)</title><rect x="83.0813%" y="260" width="0.1418%" height="15" fill="rgb(236,175,2)" fg:x="1758" fg:w="3"/><text x="83.3313%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (5 samples, 0.24%)</title><rect x="83.0340%" y="228" width="0.2363%" height="15" fill="rgb(241,52,2)" fg:x="1757" fg:w="5"/><text x="83.2840%" y="238.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (19 samples, 0.90%)</title><rect x="82.4197%" y="212" width="0.8979%" height="15" fill="rgb(248,140,14)" fg:x="1744" fg:w="19"/><text x="82.6697%" y="222.50"></text></g><g><title>get_cost (evaluation_diff_quantity.py:170) (30 samples, 1.42%)</title><rect x="82.0888%" y="132" width="1.4178%" height="15" fill="rgb(253,22,42)" fg:x="1737" fg:w="30"/><text x="82.3388%" y="142.50"></text></g><g><title>new_method (pandas/core/ops/common.py:76) (29 samples, 1.37%)</title><rect x="82.1361%" y="148" width="1.3705%" height="15" fill="rgb(234,61,47)" fg:x="1738" fg:w="29"/><text x="82.3861%" y="158.50"></text></g><g><title>__add__ (pandas/core/arraylike.py:186) (29 samples, 1.37%)</title><rect x="82.1361%" y="164" width="1.3705%" height="15" fill="rgb(208,226,15)" fg:x="1738" fg:w="29"/><text x="82.3861%" y="174.50"></text></g><g><title>_arith_method (pandas/core/series.py:6135) (29 samples, 1.37%)</title><rect x="82.1361%" y="180" width="1.3705%" height="15" fill="rgb(217,221,4)" fg:x="1738" fg:w="29"/><text x="82.3861%" y="190.50"></text></g><g><title>_arith_method (pandas/core/base.py:1384) (23 samples, 1.09%)</title><rect x="82.4197%" y="196" width="1.0870%" height="15" fill="rgb(212,174,34)" fg:x="1744" fg:w="23"/><text x="82.6697%" y="206.50"></text></g><g><title>_can_hold_identifiers_and_holds_name (pandas/core/indexes/base.py:5448) (6 samples, 0.28%)</title><rect x="83.9792%" y="164" width="0.2836%" height="15" fill="rgb(253,83,4)" fg:x="1777" fg:w="6"/><text x="84.2292%" y="174.50"></text></g><g><title>is_object_dtype (pandas/core/dtypes/common.py:165) (5 samples, 0.24%)</title><rect x="84.0265%" y="180" width="0.2363%" height="15" fill="rgb(250,195,49)" fg:x="1778" fg:w="5"/><text x="84.2765%" y="190.50"></text></g><g><title>_can_hold_identifiers_and_holds_name (pandas/core/indexes/base.py:5452) (5 samples, 0.24%)</title><rect x="84.2628%" y="164" width="0.2363%" height="15" fill="rgb(241,192,25)" fg:x="1783" fg:w="5"/><text x="84.5128%" y="174.50"></text></g><g><title>__contains__ (pandas/core/indexes/base.py:5360) (5 samples, 0.24%)</title><rect x="84.2628%" y="180" width="0.2363%" height="15" fill="rgb(208,124,10)" fg:x="1783" fg:w="5"/><text x="84.5128%" y="190.50"></text></g><g><title>__getattr__ (pandas/core/generic.py:6296) (12 samples, 0.57%)</title><rect x="83.9792%" y="148" width="0.5671%" height="15" fill="rgb(222,33,0)" fg:x="1777" fg:w="12"/><text x="84.2292%" y="158.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4075) (3 samples, 0.14%)</title><rect x="84.7353%" y="148" width="0.1418%" height="15" fill="rgb(234,209,28)" fg:x="1793" fg:w="3"/><text x="84.9853%" y="158.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4616) (3 samples, 0.14%)</title><rect x="85.1134%" y="196" width="0.1418%" height="15" fill="rgb(224,11,23)" fg:x="1801" fg:w="3"/><text x="85.3634%" y="206.50"></text></g><g><title>__getitem__ (pandas/core/frame.py:4078) (13 samples, 0.61%)</title><rect x="84.8771%" y="148" width="0.6144%" height="15" fill="rgb(232,99,1)" fg:x="1796" fg:w="13"/><text x="85.1271%" y="158.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4639) (11 samples, 0.52%)</title><rect x="84.9716%" y="164" width="0.5198%" height="15" fill="rgb(237,95,45)" fg:x="1798" fg:w="11"/><text x="85.2216%" y="174.50"></text></g><g><title>_ixs (pandas/core/frame.py:4011) (9 samples, 0.43%)</title><rect x="85.0662%" y="180" width="0.4253%" height="15" fill="rgb(208,109,11)" fg:x="1800" fg:w="9"/><text x="85.3162%" y="190.50"></text></g><g><title>_box_col_values (pandas/core/frame.py:4618) (5 samples, 0.24%)</title><rect x="85.2552%" y="196" width="0.2363%" height="15" fill="rgb(216,190,48)" fg:x="1804" fg:w="5"/><text x="85.5052%" y="206.50"></text></g><g><title>__finalize__ (pandas/core/generic.py:6262) (3 samples, 0.14%)</title><rect x="85.3497%" y="212" width="0.1418%" height="15" fill="rgb(251,171,36)" fg:x="1806" fg:w="3"/><text x="85.5997%" y="222.50"></text></g><g><title>seterr (numpy/core/_ufunc_config.py:111) (3 samples, 0.14%)</title><rect x="85.9168%" y="260" width="0.1418%" height="15" fill="rgb(230,62,22)" fg:x="1818" fg:w="3"/><text x="86.1668%" y="270.50"></text></g><g><title>__exit__ (numpy/core/_ufunc_config.py:436) (5 samples, 0.24%)</title><rect x="85.8696%" y="244" width="0.2363%" height="15" fill="rgb(225,114,35)" fg:x="1817" fg:w="5"/><text x="86.1196%" y="254.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (7 samples, 0.33%)</title><rect x="85.8696%" y="228" width="0.3308%" height="15" fill="rgb(215,118,42)" fg:x="1817" fg:w="7"/><text x="86.1196%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (3 samples, 0.14%)</title><rect x="86.4367%" y="260" width="0.1418%" height="15" fill="rgb(243,119,21)" fg:x="1829" fg:w="3"/><text x="86.6867%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (3 samples, 0.14%)</title><rect x="86.7202%" y="260" width="0.1418%" height="15" fill="rgb(252,177,53)" fg:x="1835" fg:w="3"/><text x="86.9702%" y="270.50"></text></g><g><title>_inplace_method (pandas/core/generic.py:12689) (27 samples, 1.28%)</title><rect x="85.6805%" y="164" width="1.2760%" height="15" fill="rgb(237,209,29)" fg:x="1813" fg:w="27"/><text x="85.9305%" y="174.50"></text></g><g><title>new_method (pandas/core/ops/common.py:76) (27 samples, 1.28%)</title><rect x="85.6805%" y="180" width="1.2760%" height="15" fill="rgb(212,65,23)" fg:x="1813" fg:w="27"/><text x="85.9305%" y="190.50"></text></g><g><title>__add__ (pandas/core/arraylike.py:186) (26 samples, 1.23%)</title><rect x="85.7278%" y="196" width="1.2287%" height="15" fill="rgb(230,222,46)" fg:x="1814" fg:w="26"/><text x="85.9778%" y="206.50"></text></g><g><title>_arith_method (pandas/core/series.py:6135) (25 samples, 1.18%)</title><rect x="85.7750%" y="212" width="1.1815%" height="15" fill="rgb(215,135,32)" fg:x="1815" fg:w="25"/><text x="86.0250%" y="222.50"></text></g><g><title>_arith_method (pandas/core/base.py:1384) (16 samples, 0.76%)</title><rect x="86.2004%" y="228" width="0.7561%" height="15" fill="rgb(246,101,22)" fg:x="1824" fg:w="16"/><text x="86.4504%" y="238.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (16 samples, 0.76%)</title><rect x="86.2004%" y="244" width="0.7561%" height="15" fill="rgb(206,107,13)" fg:x="1824" fg:w="16"/><text x="86.4504%" y="254.50"></text></g><g><title>__iadd__ (pandas/core/generic.py:12719) (37 samples, 1.75%)</title><rect x="85.4915%" y="148" width="1.7486%" height="15" fill="rgb(250,100,44)" fg:x="1809" fg:w="37"/><text x="85.7415%" y="158.50"></text></g><g><title>_inplace_method (pandas/core/generic.py:12701) (3 samples, 0.14%)</title><rect x="87.0983%" y="164" width="0.1418%" height="15" fill="rgb(231,147,38)" fg:x="1843" fg:w="3"/><text x="87.3483%" y="174.50"></text></g><g><title>_cmp_method (pandas/core/series.py:6119) (4 samples, 0.19%)</title><rect x="87.3346%" y="180" width="0.1890%" height="15" fill="rgb(229,8,40)" fg:x="1848" fg:w="4"/><text x="87.5846%" y="190.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (9 samples, 0.43%)</title><rect x="87.5236%" y="196" width="0.4253%" height="15" fill="rgb(221,135,30)" fg:x="1852" fg:w="9"/><text x="87.7736%" y="206.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (5 samples, 0.24%)</title><rect x="87.7127%" y="212" width="0.2363%" height="15" fill="rgb(249,193,18)" fg:x="1856" fg:w="5"/><text x="87.9627%" y="222.50"></text></g><g><title>__setattr__ (pandas/core/generic.py:6320) (3 samples, 0.14%)</title><rect x="87.8072%" y="228" width="0.1418%" height="15" fill="rgb(209,133,39)" fg:x="1858" fg:w="3"/><text x="88.0572%" y="238.50"></text></g><g><title>__eq__ (pandas/core/arraylike.py:40) (16 samples, 0.76%)</title><rect x="87.2401%" y="164" width="0.7561%" height="15" fill="rgb(232,100,14)" fg:x="1846" fg:w="16"/><text x="87.4901%" y="174.50"></text></g><g><title>_cmp_method (pandas/core/series.py:6121) (10 samples, 0.47%)</title><rect x="87.5236%" y="180" width="0.4726%" height="15" fill="rgb(224,185,1)" fg:x="1852" fg:w="10"/><text x="87.7736%" y="190.50"></text></g><g><title>_arith_method (pandas/core/base.py:1381) (3 samples, 0.14%)</title><rect x="88.2325%" y="196" width="0.1418%" height="15" fill="rgb(223,139,8)" fg:x="1867" fg:w="3"/><text x="88.4825%" y="206.50"></text></g><g><title>_arith_method (pandas/core/base.py:1382) (6 samples, 0.28%)</title><rect x="88.3743%" y="196" width="0.2836%" height="15" fill="rgb(232,213,38)" fg:x="1870" fg:w="6"/><text x="88.6243%" y="206.50"></text></g><g><title>arithmetic_op (pandas/core/ops/array_ops.py:283) (5 samples, 0.24%)</title><rect x="88.4216%" y="212" width="0.2363%" height="15" fill="rgb(207,94,22)" fg:x="1871" fg:w="5"/><text x="88.6716%" y="222.50"></text></g><g><title>_na_arithmetic_op (pandas/core/ops/array_ops.py:218) (5 samples, 0.24%)</title><rect x="88.4216%" y="228" width="0.2363%" height="15" fill="rgb(219,183,54)" fg:x="1871" fg:w="5"/><text x="88.6716%" y="238.50"></text></g><g><title>evaluate (pandas/core/computation/expressions.py:242) (4 samples, 0.19%)</title><rect x="88.4688%" y="244" width="0.1890%" height="15" fill="rgb(216,185,54)" fg:x="1872" fg:w="4"/><text x="88.7188%" y="254.50"></text></g><g><title>_evaluate_standard (pandas/core/computation/expressions.py:73) (4 samples, 0.19%)</title><rect x="88.4688%" y="260" width="0.1890%" height="15" fill="rgb(254,217,39)" fg:x="1872" fg:w="4"/><text x="88.7188%" y="270.50"></text></g><g><title>__init__ (pandas/core/series.py:584) (4 samples, 0.19%)</title><rect x="88.7524%" y="228" width="0.1890%" height="15" fill="rgb(240,178,23)" fg:x="1878" fg:w="4"/><text x="89.0024%" y="238.50"></text></g><g><title>__init__ (pandas/core/series.py:593) (3 samples, 0.14%)</title><rect x="89.0832%" y="228" width="0.1418%" height="15" fill="rgb(218,11,47)" fg:x="1885" fg:w="3"/><text x="89.3332%" y="238.50"></text></g><g><title>_construct_result (pandas/core/series.py:6231) (12 samples, 0.57%)</title><rect x="88.7051%" y="212" width="0.5671%" height="15" fill="rgb(218,51,51)" fg:x="1877" fg:w="12"/><text x="88.9551%" y="222.50"></text></g><g><title>get_cost (evaluation_diff_quantity.py:173) (125 samples, 5.91%)</title><rect x="83.5066%" y="132" width="5.9074%" height="15" fill="rgb(238,126,27)" fg:x="1767" fg:w="125"/><text x="83.7566%" y="142.50">get_cost..</text></g><g><title>new_method (pandas/core/ops/common.py:76) (46 samples, 2.17%)</title><rect x="87.2401%" y="148" width="2.1739%" height="15" fill="rgb(249,202,22)" fg:x="1846" fg:w="46"/><text x="87.4901%" y="158.50">n..</text></g><g><title>__mul__ (pandas/core/arraylike.py:202) (30 samples, 1.42%)</title><rect x="87.9962%" y="164" width="1.4178%" height="15" fill="rgb(254,195,49)" fg:x="1862" fg:w="30"/><text x="88.2462%" y="174.50"></text></g><g><title>_arith_method (pandas/core/series.py:6135) (29 samples, 1.37%)</title><rect x="88.0435%" y="180" width="1.3705%" height="15" fill="rgb(208,123,14)" fg:x="1863" fg:w="29"/><text x="88.2935%" y="190.50"></text></g><g><title>_arith_method (pandas/core/base.py:1384) (16 samples, 0.76%)</title><rect x="88.6578%" y="196" width="0.7561%" height="15" fill="rgb(224,200,8)" fg:x="1876" fg:w="16"/><text x="88.9078%" y="206.50"></text></g><g><title>_isna_array (pandas/core/dtypes/missing.py:292) (4 samples, 0.19%)</title><rect x="90.1229%" y="340" width="0.1890%" height="15" fill="rgb(217,61,36)" fg:x="1907" fg:w="4"/><text x="90.3729%" y="350.50"></text></g><g><title>_isna_string_dtype (pandas/core/dtypes/missing.py:313) (4 samples, 0.19%)</title><rect x="90.1229%" y="356" width="0.1890%" height="15" fill="rgb(206,35,45)" fg:x="1907" fg:w="4"/><text x="90.3729%" y="366.50"></text></g><g><title>_get_values (pandas/core/nanops.py:294) (9 samples, 0.43%)</title><rect x="89.9338%" y="276" width="0.4253%" height="15" fill="rgb(217,65,33)" fg:x="1903" fg:w="9"/><text x="90.1838%" y="286.50"></text></g><g><title>_maybe_get_mask (pandas/core/nanops.py:248) (9 samples, 0.43%)</title><rect x="89.9338%" y="292" width="0.4253%" height="15" fill="rgb(222,158,48)" fg:x="1903" fg:w="9"/><text x="90.1838%" y="302.50"></text></g><g><title>isna (pandas/core/dtypes/missing.py:178) (9 samples, 0.43%)</title><rect x="89.9338%" y="308" width="0.4253%" height="15" fill="rgb(254,2,54)" fg:x="1903" fg:w="9"/><text x="90.1838%" y="318.50"></text></g><g><title>_isna (pandas/core/dtypes/missing.py:207) (8 samples, 0.38%)</title><rect x="89.9811%" y="324" width="0.3781%" height="15" fill="rgb(250,143,38)" fg:x="1904" fg:w="8"/><text x="90.2311%" y="334.50"></text></g><g><title>nansum (pandas/core/nanops.py:639) (13 samples, 0.61%)</title><rect x="89.8866%" y="260" width="0.6144%" height="15" fill="rgb(248,25,0)" fg:x="1902" fg:w="13"/><text x="90.1366%" y="270.50"></text></g><g><title>sum (pandas/core/generic.py:12506) (26 samples, 1.23%)</title><rect x="89.4140%" y="164" width="1.2287%" height="15" fill="rgb(206,152,27)" fg:x="1892" fg:w="26"/><text x="89.6640%" y="174.50"></text></g><g><title>_min_count_stat_function (pandas/core/generic.py:12489) (24 samples, 1.13%)</title><rect x="89.5085%" y="180" width="1.1342%" height="15" fill="rgb(240,77,30)" fg:x="1894" fg:w="24"/><text x="89.7585%" y="190.50"></text></g><g><title>_reduce (pandas/core/series.py:6457) (20 samples, 0.95%)</title><rect x="89.6975%" y="196" width="0.9452%" height="15" fill="rgb(231,5,3)" fg:x="1898" fg:w="20"/><text x="89.9475%" y="206.50"></text></g><g><title>_f (pandas/core/nanops.py:85) (17 samples, 0.80%)</title><rect x="89.8393%" y="212" width="0.8034%" height="15" fill="rgb(207,226,32)" fg:x="1901" fg:w="17"/><text x="90.0893%" y="222.50"></text></g><g><title>new_func (pandas/core/nanops.py:404) (17 samples, 0.80%)</title><rect x="89.8393%" y="228" width="0.8034%" height="15" fill="rgb(222,207,47)" fg:x="1901" fg:w="17"/><text x="90.0893%" y="238.50"></text></g><g><title>newfunc (pandas/core/nanops.py:477) (16 samples, 0.76%)</title><rect x="89.8866%" y="244" width="0.7561%" height="15" fill="rgb(229,115,45)" fg:x="1902" fg:w="16"/><text x="90.1366%" y="254.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:386) (794 samples, 37.52%)</title><rect x="53.1664%" y="100" width="37.5236%" height="15" fill="rgb(224,191,6)" fg:x="1125" fg:w="794"/><text x="53.4164%" y="110.50">SA_evaluation_function (evaluation_diff_quantity.py:386)</text></g><g><title>get_profit (evaluation_diff_quantity.py:183) (595 samples, 28.12%)</title><rect x="62.5709%" y="116" width="28.1191%" height="15" fill="rgb(230,227,24)" fg:x="1324" fg:w="595"/><text x="62.8209%" y="126.50">get_profit (evaluation_diff_quantity.py:183)</text></g><g><title>get_cost (evaluation_diff_quantity.py:178) (27 samples, 1.28%)</title><rect x="89.4140%" y="132" width="1.2760%" height="15" fill="rgb(228,80,19)" fg:x="1892" fg:w="27"/><text x="89.6640%" y="142.50"></text></g><g><title>sum (pandas/core/series.py:6528) (27 samples, 1.28%)</title><rect x="89.4140%" y="148" width="1.2760%" height="15" fill="rgb(247,229,0)" fg:x="1892" fg:w="27"/><text x="89.6640%" y="158.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2578) (3 samples, 0.14%)</title><rect x="90.7372%" y="116" width="0.1418%" height="15" fill="rgb(237,194,15)" fg:x="1920" fg:w="3"/><text x="90.9872%" y="126.50"></text></g><g><title>iget (pandas/core/internals/managers.py:1017) (3 samples, 0.14%)</title><rect x="91.2098%" y="180" width="0.1418%" height="15" fill="rgb(219,203,20)" fg:x="1930" fg:w="3"/><text x="91.4598%" y="190.50"></text></g><g><title>iget (pandas/core/internals/managers.py:1020) (3 samples, 0.14%)</title><rect x="91.3516%" y="180" width="0.1418%" height="15" fill="rgb(234,128,8)" fg:x="1933" fg:w="3"/><text x="91.6016%" y="190.50"></text></g><g><title>column_setitem (pandas/core/internals/managers.py:1333) (9 samples, 0.43%)</title><rect x="91.1153%" y="164" width="0.4253%" height="15" fill="rgb(248,202,8)" fg:x="1928" fg:w="9"/><text x="91.3653%" y="174.50"></text></g><g><title>_set_value (pandas/core/frame.py:4563) (13 samples, 0.61%)</title><rect x="91.1153%" y="148" width="0.6144%" height="15" fill="rgb(206,104,37)" fg:x="1928" fg:w="13"/><text x="91.3653%" y="158.50"></text></g><g><title>column_setitem (pandas/core/internals/managers.py:1335) (4 samples, 0.19%)</title><rect x="91.5406%" y="164" width="0.1890%" height="15" fill="rgb(223,8,27)" fg:x="1937" fg:w="4"/><text x="91.7906%" y="174.50"></text></g><g><title>setitem_inplace (pandas/core/internals/managers.py:2044) (4 samples, 0.19%)</title><rect x="91.5406%" y="180" width="0.1890%" height="15" fill="rgb(216,217,28)" fg:x="1937" fg:w="4"/><text x="91.7906%" y="190.50"></text></g><g><title>setitem_inplace (pandas/core/internals/base.py:357) (3 samples, 0.14%)</title><rect x="91.5879%" y="196" width="0.1418%" height="15" fill="rgb(249,199,1)" fg:x="1938" fg:w="3"/><text x="91.8379%" y="206.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:389) (23 samples, 1.09%)</title><rect x="90.6900%" y="100" width="1.0870%" height="15" fill="rgb(240,85,17)" fg:x="1919" fg:w="23"/><text x="90.9400%" y="110.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2586) (19 samples, 0.90%)</title><rect x="90.8790%" y="116" width="0.8979%" height="15" fill="rgb(206,108,45)" fg:x="1923" fg:w="19"/><text x="91.1290%" y="126.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2542) (16 samples, 0.76%)</title><rect x="91.0208%" y="132" width="0.7561%" height="15" fill="rgb(245,210,41)" fg:x="1926" fg:w="16"/><text x="91.2708%" y="142.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:390) (9 samples, 0.43%)</title><rect x="91.7769%" y="100" width="0.4253%" height="15" fill="rgb(206,13,37)" fg:x="1942" fg:w="9"/><text x="92.0269%" y="110.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2586) (9 samples, 0.43%)</title><rect x="91.7769%" y="116" width="0.4253%" height="15" fill="rgb(250,61,18)" fg:x="1942" fg:w="9"/><text x="92.0269%" y="126.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2542) (6 samples, 0.28%)</title><rect x="91.9187%" y="132" width="0.2836%" height="15" fill="rgb(235,172,48)" fg:x="1945" fg:w="6"/><text x="92.1687%" y="142.50"></text></g><g><title>_set_value (pandas/core/frame.py:4563) (5 samples, 0.24%)</title><rect x="91.9660%" y="148" width="0.2363%" height="15" fill="rgb(249,201,17)" fg:x="1946" fg:w="5"/><text x="92.2160%" y="158.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:391) (3 samples, 0.14%)</title><rect x="92.2023%" y="100" width="0.1418%" height="15" fill="rgb(219,208,6)" fg:x="1951" fg:w="3"/><text x="92.4523%" y="110.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2586) (3 samples, 0.14%)</title><rect x="92.2023%" y="116" width="0.1418%" height="15" fill="rgb(248,31,23)" fg:x="1951" fg:w="3"/><text x="92.4523%" y="126.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2542) (3 samples, 0.14%)</title><rect x="92.2023%" y="132" width="0.1418%" height="15" fill="rgb(245,15,42)" fg:x="1951" fg:w="3"/><text x="92.4523%" y="142.50"></text></g><g><title>_set_value (pandas/core/frame.py:4563) (3 samples, 0.14%)</title><rect x="92.2023%" y="148" width="0.1418%" height="15" fill="rgb(222,217,39)" fg:x="1951" fg:w="3"/><text x="92.4523%" y="158.50"></text></g><g><title>column_setitem (pandas/core/internals/managers.py:1335) (3 samples, 0.14%)</title><rect x="92.2023%" y="164" width="0.1418%" height="15" fill="rgb(210,219,27)" fg:x="1951" fg:w="3"/><text x="92.4523%" y="174.50"></text></g><g><title>setitem_inplace (pandas/core/internals/managers.py:2044) (3 samples, 0.14%)</title><rect x="92.2023%" y="180" width="0.1418%" height="15" fill="rgb(252,166,36)" fg:x="1951" fg:w="3"/><text x="92.4523%" y="190.50"></text></g><g><title>SA_evaluation_function (evaluation_diff_quantity.py:397) (3 samples, 0.14%)</title><rect x="92.4386%" y="100" width="0.1418%" height="15" fill="rgb(245,132,34)" fg:x="1956" fg:w="3"/><text x="92.6886%" y="110.50"></text></g><g><title>run (SA_quantity_new.py:360) (1,928 samples, 91.12%)</title><rect x="1.5123%" y="84" width="91.1153%" height="15" fill="rgb(236,54,3)" fg:x="32" fg:w="1928"/><text x="1.7623%" y="94.50">run (SA_quantity_new.py:360)</text></g><g><title>__getitem__ (pandas/core/indexing.py:2575) (3 samples, 0.14%)</title><rect x="92.6276%" y="116" width="0.1418%" height="15" fill="rgb(241,173,43)" fg:x="1960" fg:w="3"/><text x="92.8776%" y="126.50"></text></g><g><title>__getitem__ (pandas/core/indexing.py:2527) (3 samples, 0.14%)</title><rect x="92.6276%" y="132" width="0.1418%" height="15" fill="rgb(215,190,9)" fg:x="1960" fg:w="3"/><text x="92.8776%" y="142.50"></text></g><g><title>_get_value (pandas/core/frame.py:4214) (3 samples, 0.14%)</title><rect x="92.6276%" y="148" width="0.1418%" height="15" fill="rgb(242,101,16)" fg:x="1960" fg:w="3"/><text x="92.8776%" y="158.50"></text></g><g><title>_get_item_cache (pandas/core/frame.py:4639) (3 samples, 0.14%)</title><rect x="92.6276%" y="164" width="0.1418%" height="15" fill="rgb(223,190,21)" fg:x="1960" fg:w="3"/><text x="92.8776%" y="174.50"></text></g><g><title>run (SA_quantity_new.py:372) (9 samples, 0.43%)</title><rect x="92.6276%" y="84" width="0.4253%" height="15" fill="rgb(215,228,25)" fg:x="1960" fg:w="9"/><text x="92.8776%" y="94.50"></text></g><g><title>update_slots (SA_quantity_new.py:51) (9 samples, 0.43%)</title><rect x="92.6276%" y="100" width="0.4253%" height="15" fill="rgb(225,36,22)" fg:x="1960" fg:w="9"/><text x="92.8776%" y="110.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2586) (6 samples, 0.28%)</title><rect x="92.7694%" y="116" width="0.2836%" height="15" fill="rgb(251,106,46)" fg:x="1963" fg:w="6"/><text x="93.0194%" y="126.50"></text></g><g><title>__setitem__ (pandas/core/indexing.py:2542) (4 samples, 0.19%)</title><rect x="92.8639%" y="132" width="0.1890%" height="15" fill="rgb(208,90,1)" fg:x="1965" fg:w="4"/><text x="93.1139%" y="142.50"></text></g><g><title>_set_value (pandas/core/frame.py:4563) (3 samples, 0.14%)</title><rect x="92.9112%" y="148" width="0.1418%" height="15" fill="rgb(243,10,4)" fg:x="1966" fg:w="3"/><text x="93.1612%" y="158.50"></text></g><g><title>&lt;module&gt; (SA_quantity_new.py:415) (1,944 samples, 91.87%)</title><rect x="1.2287%" y="68" width="91.8715%" height="15" fill="rgb(212,137,27)" fg:x="26" fg:w="1944"/><text x="1.4787%" y="78.50">&lt;module&gt; (SA_quantity_new.py:415)</text></g><g><title>copy (pandas/core/internals/managers.py:586) (3 samples, 0.14%)</title><rect x="93.1002%" y="100" width="0.1418%" height="15" fill="rgb(231,220,49)" fg:x="1970" fg:w="3"/><text x="93.3502%" y="110.50"></text></g><g><title>&lt;listcomp&gt; (pandas/core/internals/managers.py:586) (3 samples, 0.14%)</title><rect x="93.1002%" y="116" width="0.1418%" height="15" fill="rgb(237,96,20)" fg:x="1970" fg:w="3"/><text x="93.3502%" y="126.50"></text></g><g><title>copy_func (pandas/core/internals/managers.py:584) (3 samples, 0.14%)</title><rect x="93.1002%" y="132" width="0.1418%" height="15" fill="rgb(239,229,30)" fg:x="1970" fg:w="3"/><text x="93.3502%" y="142.50"></text></g><g><title>view (pandas/core/indexes/base.py:1040) (3 samples, 0.14%)</title><rect x="93.1002%" y="148" width="0.1418%" height="15" fill="rgb(219,65,33)" fg:x="1970" fg:w="3"/><text x="93.3502%" y="158.50"></text></g><g><title>_view (pandas/core/indexes/base.py:777) (3 samples, 0.14%)</title><rect x="93.1002%" y="164" width="0.1418%" height="15" fill="rgb(243,134,7)" fg:x="1970" fg:w="3"/><text x="93.3502%" y="174.50"></text></g><g><title>copy (pandas/core/generic.py:6811) (6 samples, 0.28%)</title><rect x="93.1002%" y="84" width="0.2836%" height="15" fill="rgb(216,177,54)" fg:x="1970" fg:w="6"/><text x="93.3502%" y="94.50"></text></g><g><title>copy (pandas/core/internals/managers.py:593) (3 samples, 0.14%)</title><rect x="93.2420%" y="100" width="0.1418%" height="15" fill="rgb(211,160,20)" fg:x="1973" fg:w="3"/><text x="93.4920%" y="110.50"></text></g><g><title>apply (pandas/core/internals/managers.py:363) (3 samples, 0.14%)</title><rect x="93.2420%" y="116" width="0.1418%" height="15" fill="rgb(239,85,39)" fg:x="1973" fg:w="3"/><text x="93.4920%" y="126.50"></text></g><g><title>_constructor_from_mgr (pandas/core/series.py:665) (3 samples, 0.14%)</title><rect x="93.3837%" y="100" width="0.1418%" height="15" fill="rgb(232,125,22)" fg:x="1976" fg:w="3"/><text x="93.6337%" y="110.50"></text></g><g><title>copy (pandas/core/generic.py:6813) (4 samples, 0.19%)</title><rect x="93.3837%" y="84" width="0.1890%" height="15" fill="rgb(244,57,34)" fg:x="1976" fg:w="4"/><text x="93.6337%" y="94.50"></text></g><g><title>drop (pandas/core/indexes/base.py:7064) (4 samples, 0.19%)</title><rect x="93.9981%" y="132" width="0.1890%" height="15" fill="rgb(214,203,32)" fg:x="1989" fg:w="4"/><text x="94.2481%" y="142.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:483) (3 samples, 0.14%)</title><rect x="94.2344%" y="212" width="0.1418%" height="15" fill="rgb(207,58,43)" fg:x="1994" fg:w="3"/><text x="94.4844%" y="222.50"></text></g><g><title>__new__ (pandas/core/indexes/base.py:565) (5 samples, 0.24%)</title><rect x="94.4234%" y="212" width="0.2363%" height="15" fill="rgb(215,193,15)" fg:x="1998" fg:w="5"/><text x="94.6734%" y="222.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3880) (15 samples, 0.71%)</title><rect x="94.2344%" y="164" width="0.7089%" height="15" fill="rgb(232,15,44)" fg:x="1994" fg:w="15"/><text x="94.4844%" y="174.50"></text></g><g><title>_maybe_cast_listlike_indexer (pandas/core/indexes/base.py:6683) (15 samples, 0.71%)</title><rect x="94.2344%" y="180" width="0.7089%" height="15" fill="rgb(212,3,48)" fg:x="1994" fg:w="15"/><text x="94.4844%" y="190.50"></text></g><g><title>ensure_index (pandas/core/indexes/base.py:7649) (15 samples, 0.71%)</title><rect x="94.2344%" y="196" width="0.7089%" height="15" fill="rgb(218,128,7)" fg:x="1994" fg:w="15"/><text x="94.4844%" y="206.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3890) (5 samples, 0.24%)</title><rect x="95.0378%" y="164" width="0.2363%" height="15" fill="rgb(226,216,39)" fg:x="2011" fg:w="5"/><text x="95.2878%" y="174.50"></text></g><g><title>_should_compare (pandas/core/indexes/base.py:6403) (5 samples, 0.24%)</title><rect x="95.0378%" y="180" width="0.2363%" height="15" fill="rgb(243,47,51)" fg:x="2011" fg:w="5"/><text x="95.2878%" y="190.50"></text></g><g><title>inferred_type (pandas/core/indexes/base.py:2757) (5 samples, 0.24%)</title><rect x="95.0378%" y="196" width="0.2363%" height="15" fill="rgb(241,183,40)" fg:x="2011" fg:w="5"/><text x="95.2878%" y="206.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3932) (4 samples, 0.19%)</title><rect x="95.2741%" y="164" width="0.1890%" height="15" fill="rgb(231,217,32)" fg:x="2016" fg:w="4"/><text x="95.5241%" y="174.50"></text></g><g><title>drop (pandas/core/indexes/base.py:7066) (30 samples, 1.42%)</title><rect x="94.1871%" y="132" width="1.4178%" height="15" fill="rgb(229,61,38)" fg:x="1993" fg:w="30"/><text x="94.4371%" y="142.50"></text></g><g><title>get_indexer_for (pandas/core/indexes/base.py:6182) (29 samples, 1.37%)</title><rect x="94.2344%" y="148" width="1.3705%" height="15" fill="rgb(225,210,5)" fg:x="1994" fg:w="29"/><text x="94.4844%" y="158.50"></text></g><g><title>_drop_axis (pandas/core/generic.py:4830) (44 samples, 2.08%)</title><rect x="93.8563%" y="116" width="2.0794%" height="15" fill="rgb(231,79,45)" fg:x="1986" fg:w="44"/><text x="94.1063%" y="126.50">_..</text></g><g><title>drop (pandas/core/indexes/base.py:7072) (5 samples, 0.24%)</title><rect x="95.6994%" y="132" width="0.2363%" height="15" fill="rgb(224,100,7)" fg:x="2025" fg:w="5"/><text x="95.9494%" y="142.50"></text></g><g><title>delete (pandas/core/indexes/base.py:6949) (5 samples, 0.24%)</title><rect x="95.6994%" y="148" width="0.2363%" height="15" fill="rgb(241,198,18)" fg:x="2025" fg:w="5"/><text x="95.9494%" y="158.50"></text></g><g><title>get_indexer (pandas/core/indexes/base.py:3890) (6 samples, 0.28%)</title><rect x="95.9830%" y="132" width="0.2836%" height="15" fill="rgb(252,97,53)" fg:x="2031" fg:w="6"/><text x="96.2330%" y="142.50"></text></g><g><title>_should_compare (pandas/core/indexes/base.py:6403) (6 samples, 0.28%)</title><rect x="95.9830%" y="148" width="0.2836%" height="15" fill="rgb(220,88,7)" fg:x="2031" fg:w="6"/><text x="96.2330%" y="158.50"></text></g><g><title>inferred_type (pandas/core/indexes/base.py:2757) (4 samples, 0.19%)</title><rect x="96.0775%" y="164" width="0.1890%" height="15" fill="rgb(213,176,14)" fg:x="2033" fg:w="4"/><text x="96.3275%" y="174.50"></text></g><g><title>_drop_axis (pandas/core/generic.py:4831) (10 samples, 0.47%)</title><rect x="95.9357%" y="116" width="0.4726%" height="15" fill="rgb(246,73,7)" fg:x="2030" fg:w="10"/><text x="96.1857%" y="126.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:741) (11 samples, 0.52%)</title><rect x="96.4556%" y="148" width="0.5198%" height="15" fill="rgb(245,64,36)" fg:x="2041" fg:w="11"/><text x="96.7056%" y="158.50"></text></g><g><title>shape (pandas/core/internals/base.py:84) (11 samples, 0.52%)</title><rect x="96.4556%" y="164" width="0.5198%" height="15" fill="rgb(245,80,10)" fg:x="2041" fg:w="11"/><text x="96.7056%" y="174.50"></text></g><g><title>_take_nd_ndarray (pandas/core/array_algos/take.py:133) (3 samples, 0.14%)</title><rect x="96.9754%" y="196" width="0.1418%" height="15" fill="rgb(232,107,50)" fg:x="2052" fg:w="3"/><text x="97.2254%" y="206.50"></text></g><g><title>_take_preprocess_indexer_and_fill_value (pandas/core/array_algos/take.py:579) (3 samples, 0.14%)</title><rect x="96.9754%" y="212" width="0.1418%" height="15" fill="rgb(253,3,0)" fg:x="2052" fg:w="3"/><text x="97.2254%" y="222.50"></text></g><g><title>_drop_axis (pandas/core/generic.py:4869) (16 samples, 0.76%)</title><rect x="96.4083%" y="116" width="0.7561%" height="15" fill="rgb(212,99,53)" fg:x="2040" fg:w="16"/><text x="96.6583%" y="126.50"></text></g><g><title>reindex_indexer (pandas/core/internals/managers.py:680) (15 samples, 0.71%)</title><rect x="96.4556%" y="132" width="0.7089%" height="15" fill="rgb(249,111,54)" fg:x="2041" fg:w="15"/><text x="96.7056%" y="142.50"></text></g><g><title>_slice_take_blocks_ax0 (pandas/core/internals/managers.py:773) (4 samples, 0.19%)</title><rect x="96.9754%" y="148" width="0.1890%" height="15" fill="rgb(249,55,30)" fg:x="2052" fg:w="4"/><text x="97.2254%" y="158.50"></text></g><g><title>take_nd (pandas/core/internals/blocks.py:1307) (4 samples, 0.19%)</title><rect x="96.9754%" y="164" width="0.1890%" height="15" fill="rgb(237,47,42)" fg:x="2052" fg:w="4"/><text x="97.2254%" y="174.50"></text></g><g><title>take_nd (pandas/core/array_algos/take.py:117) (4 samples, 0.19%)</title><rect x="96.9754%" y="180" width="0.1890%" height="15" fill="rgb(211,20,18)" fg:x="2052" fg:w="4"/><text x="97.2254%" y="190.50"></text></g><g><title>_drop_axis (pandas/core/generic.py:4877) (3 samples, 0.14%)</title><rect x="97.1645%" y="116" width="0.1418%" height="15" fill="rgb(231,203,46)" fg:x="2056" fg:w="3"/><text x="97.4145%" y="126.50"></text></g><g><title>&lt;module&gt; (SA_quantity_new.py:422) (90 samples, 4.25%)</title><rect x="93.1002%" y="68" width="4.2533%" height="15" fill="rgb(237,142,3)" fg:x="1970" fg:w="90"/><text x="93.3502%" y="78.50">&lt;modu..</text></g><g><title>drop (pandas/core/series.py:5356) (80 samples, 3.78%)</title><rect x="93.5728%" y="84" width="3.7807%" height="15" fill="rgb(241,107,1)" fg:x="1980" fg:w="80"/><text x="93.8228%" y="94.50">drop..</text></g><g><title>drop (pandas/core/generic.py:4788) (80 samples, 3.78%)</title><rect x="93.5728%" y="100" width="3.7807%" height="15" fill="rgb(229,83,13)" fg:x="1980" fg:w="80"/><text x="93.8228%" y="110.50">drop..</text></g><g><title>equals (pandas/core/indexes/base.py:5629) (3 samples, 0.14%)</title><rect x="97.5898%" y="212" width="0.1418%" height="15" fill="rgb(241,91,40)" fg:x="2065" fg:w="3"/><text x="97.8398%" y="222.50"></text></g><g><title>is_object_dtype (pandas/core/dtypes/common.py:165) (3 samples, 0.14%)</title><rect x="97.5898%" y="228" width="0.1418%" height="15" fill="rgb(225,3,45)" fg:x="2065" fg:w="3"/><text x="97.8398%" y="238.50"></text></g><g><title>union_indexes (pandas/core/indexes/api.py:318) (5 samples, 0.24%)</title><rect x="97.5425%" y="180" width="0.2363%" height="15" fill="rgb(244,223,14)" fg:x="2064" fg:w="5"/><text x="97.7925%" y="190.50"></text></g><g><title>&lt;genexpr&gt; (pandas/core/indexes/api.py:318) (5 samples, 0.24%)</title><rect x="97.5425%" y="196" width="0.2363%" height="15" fill="rgb(224,124,37)" fg:x="2064" fg:w="5"/><text x="97.7925%" y="206.50"></text></g><g><title>_list_of_series_to_arrays (pandas/core/internals/construction.py:869) (8 samples, 0.38%)</title><rect x="97.5425%" y="132" width="0.3781%" height="15" fill="rgb(251,171,30)" fg:x="2064" fg:w="8"/><text x="97.7925%" y="142.50"></text></g><g><title>get_objs_combined_axis (pandas/core/indexes/api.py:103) (8 samples, 0.38%)</title><rect x="97.5425%" y="148" width="0.3781%" height="15" fill="rgb(236,46,54)" fg:x="2064" fg:w="8"/><text x="97.7925%" y="158.50"></text></g><g><title>_get_combined_index (pandas/core/indexes/api.py:156) (8 samples, 0.38%)</title><rect x="97.5425%" y="164" width="0.3781%" height="15" fill="rgb(245,213,5)" fg:x="2064" fg:w="8"/><text x="97.7925%" y="174.50"></text></g><g><title>union_indexes (pandas/core/indexes/api.py:321) (3 samples, 0.14%)</title><rect x="97.7788%" y="180" width="0.1418%" height="15" fill="rgb(230,144,27)" fg:x="2069" fg:w="3"/><text x="98.0288%" y="190.50"></text></g><g><title>get_unanimous_names (pandas/core/indexes/base.py:7718) (3 samples, 0.14%)</title><rect x="97.7788%" y="196" width="0.1418%" height="15" fill="rgb(220,86,6)" fg:x="2069" fg:w="3"/><text x="98.0288%" y="206.50"></text></g><g><title>_list_of_series_to_arrays (pandas/core/internals/construction.py:882) (5 samples, 0.24%)</title><rect x="97.9206%" y="132" width="0.2363%" height="15" fill="rgb(240,20,13)" fg:x="2072" fg:w="5"/><text x="98.1706%" y="142.50"></text></g><g><title>nested_data_to_arrays (pandas/core/internals/construction.py:520) (16 samples, 0.76%)</title><rect x="97.4480%" y="100" width="0.7561%" height="15" fill="rgb(217,89,34)" fg:x="2062" fg:w="16"/><text x="97.6980%" y="110.50"></text></g><g><title>to_arrays (pandas/core/internals/construction.py:839) (16 samples, 0.76%)</title><rect x="97.4480%" y="116" width="0.7561%" height="15" fill="rgb(229,13,5)" fg:x="2062" fg:w="16"/><text x="97.6980%" y="126.50"></text></g><g><title>&lt;module&gt; (SA_quantity_new.py:427) (17 samples, 0.80%)</title><rect x="97.4480%" y="68" width="0.8034%" height="15" fill="rgb(244,67,35)" fg:x="2062" fg:w="17"/><text x="97.6980%" y="78.50"></text></g><g><title>__init__ (pandas/core/frame.py:851) (17 samples, 0.80%)</title><rect x="97.4480%" y="84" width="0.8034%" height="15" fill="rgb(221,40,2)" fg:x="2062" fg:w="17"/><text x="97.6980%" y="94.50"></text></g><g><title>save_solution (utils.py:25) (3 samples, 0.14%)</title><rect x="98.2514%" y="84" width="0.1418%" height="15" fill="rgb(237,157,21)" fg:x="2079" fg:w="3"/><text x="98.5014%" y="94.50"></text></g><g><title>wrapper (pandas/util/_decorators.py:333) (3 samples, 0.14%)</title><rect x="98.2514%" y="100" width="0.1418%" height="15" fill="rgb(222,94,11)" fg:x="2079" fg:w="3"/><text x="98.5014%" y="110.50"></text></g><g><title>to_dict (pandas/core/frame.py:2178) (3 samples, 0.14%)</title><rect x="98.2514%" y="116" width="0.1418%" height="15" fill="rgb(249,113,6)" fg:x="2079" fg:w="3"/><text x="98.5014%" y="126.50"></text></g><g><title>dump (json/__init__.py:179) (4 samples, 0.19%)</title><rect x="98.3932%" y="116" width="0.1890%" height="15" fill="rgb(238,137,36)" fg:x="2082" fg:w="4"/><text x="98.6432%" y="126.50"></text></g><g><title>_iterencode (json/encoder.py:429) (4 samples, 0.19%)</title><rect x="98.3932%" y="132" width="0.1890%" height="15" fill="rgb(210,102,26)" fg:x="2082" fg:w="4"/><text x="98.6432%" y="142.50"></text></g><g><title>_iterencode_list (json/encoder.py:325) (3 samples, 0.14%)</title><rect x="98.4405%" y="148" width="0.1418%" height="15" fill="rgb(218,30,30)" fg:x="2083" fg:w="3"/><text x="98.6905%" y="158.50"></text></g><g><title>&lt;module&gt; (SA_quantity_new.py:429) (8 samples, 0.38%)</title><rect x="98.2514%" y="68" width="0.3781%" height="15" fill="rgb(214,67,26)" fg:x="2079" fg:w="8"/><text x="98.5014%" y="78.50"></text></g><g><title>save_solution (utils.py:26) (5 samples, 0.24%)</title><rect x="98.3932%" y="84" width="0.2363%" height="15" fill="rgb(251,9,53)" fg:x="2082" fg:w="5"/><text x="98.6432%" y="94.50"></text></g><g><title>save_json (utils.py:14) (5 samples, 0.24%)</title><rect x="98.3932%" y="100" width="0.2363%" height="15" fill="rgb(228,204,25)" fg:x="2082" fg:w="5"/><text x="98.6432%" y="110.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/__init__.py:215) (3 samples, 0.14%)</title><rect x="98.7713%" y="1124" width="0.1418%" height="15" fill="rgb(207,153,8)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1134.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (3 samples, 0.14%)</title><rect x="98.7713%" y="1140" width="0.1418%" height="15" fill="rgb(242,9,16)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1150.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (3 samples, 0.14%)</title><rect x="98.7713%" y="1156" width="0.1418%" height="15" fill="rgb(217,211,10)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1166.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (3 samples, 0.14%)</title><rect x="98.7713%" y="1172" width="0.1418%" height="15" fill="rgb(219,228,52)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1182.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (3 samples, 0.14%)</title><rect x="98.7713%" y="1188" width="0.1418%" height="15" fill="rgb(231,92,29)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1198.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.14%)</title><rect x="98.7713%" y="1204" width="0.1418%" height="15" fill="rgb(232,8,23)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1214.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/_matfuncs.py:17) (3 samples, 0.14%)</title><rect x="98.7713%" y="1220" width="0.1418%" height="15" fill="rgb(216,211,34)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1230.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (3 samples, 0.14%)</title><rect x="98.7713%" y="1236" width="0.1418%" height="15" fill="rgb(236,151,0)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1246.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (3 samples, 0.14%)</title><rect x="98.7713%" y="1252" width="0.1418%" height="15" fill="rgb(209,168,3)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1262.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (3 samples, 0.14%)</title><rect x="98.7713%" y="1268" width="0.1418%" height="15" fill="rgb(208,129,28)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1278.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (3 samples, 0.14%)</title><rect x="98.7713%" y="1284" width="0.1418%" height="15" fill="rgb(229,78,22)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1294.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.14%)</title><rect x="98.7713%" y="1300" width="0.1418%" height="15" fill="rgb(228,187,13)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1310.50"></text></g><g><title>&lt;module&gt; (scipy/linalg/_matfuncs_sqrtm.py:24) (3 samples, 0.14%)</title><rect x="98.7713%" y="1316" width="0.1418%" height="15" fill="rgb(240,119,24)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1326.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (3 samples, 0.14%)</title><rect x="98.7713%" y="1332" width="0.1418%" height="15" fill="rgb(209,194,42)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1342.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (3 samples, 0.14%)</title><rect x="98.7713%" y="1348" width="0.1418%" height="15" fill="rgb(247,200,46)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1358.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:666) (3 samples, 0.14%)</title><rect x="98.7713%" y="1364" width="0.1418%" height="15" fill="rgb(218,76,16)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1374.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:565) (3 samples, 0.14%)</title><rect x="98.7713%" y="1380" width="0.1418%" height="15" fill="rgb(225,21,48)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1390.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1173) (3 samples, 0.14%)</title><rect x="98.7713%" y="1396" width="0.1418%" height="15" fill="rgb(239,223,50)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1406.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.14%)</title><rect x="98.7713%" y="1412" width="0.1418%" height="15" fill="rgb(244,45,21)" fg:x="2090" fg:w="3"/><text x="99.0213%" y="1422.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/__init__.py:129) (7 samples, 0.33%)</title><rect x="98.6767%" y="836" width="0.3308%" height="15" fill="rgb(232,33,43)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="846.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.33%)</title><rect x="98.6767%" y="852" width="0.3308%" height="15" fill="rgb(209,8,3)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="862.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.33%)</title><rect x="98.6767%" y="868" width="0.3308%" height="15" fill="rgb(214,25,53)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="878.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.33%)</title><rect x="98.6767%" y="884" width="0.3308%" height="15" fill="rgb(254,186,54)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="894.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (7 samples, 0.33%)</title><rect x="98.6767%" y="900" width="0.3308%" height="15" fill="rgb(208,174,49)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="910.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.33%)</title><rect x="98.6767%" y="916" width="0.3308%" height="15" fill="rgb(233,191,51)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="926.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/_isolve/__init__.py:4) (7 samples, 0.33%)</title><rect x="98.6767%" y="932" width="0.3308%" height="15" fill="rgb(222,134,10)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="942.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.33%)</title><rect x="98.6767%" y="948" width="0.3308%" height="15" fill="rgb(230,226,20)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="958.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.33%)</title><rect x="98.6767%" y="964" width="0.3308%" height="15" fill="rgb(251,111,25)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="974.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.33%)</title><rect x="98.6767%" y="980" width="0.3308%" height="15" fill="rgb(224,40,46)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="990.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (7 samples, 0.33%)</title><rect x="98.6767%" y="996" width="0.3308%" height="15" fill="rgb(236,108,47)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="1006.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.33%)</title><rect x="98.6767%" y="1012" width="0.3308%" height="15" fill="rgb(234,93,0)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="1022.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/linalg/_isolve/iterative.py:5) (7 samples, 0.33%)</title><rect x="98.6767%" y="1028" width="0.3308%" height="15" fill="rgb(224,213,32)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="1038.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.33%)</title><rect x="98.6767%" y="1044" width="0.3308%" height="15" fill="rgb(251,11,48)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="1054.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.33%)</title><rect x="98.6767%" y="1060" width="0.3308%" height="15" fill="rgb(236,173,5)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="1070.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.33%)</title><rect x="98.6767%" y="1076" width="0.3308%" height="15" fill="rgb(230,95,12)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="1086.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (7 samples, 0.33%)</title><rect x="98.6767%" y="1092" width="0.3308%" height="15" fill="rgb(232,209,1)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="1102.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.33%)</title><rect x="98.6767%" y="1108" width="0.3308%" height="15" fill="rgb(232,6,1)" fg:x="2088" fg:w="7"/><text x="98.9267%" y="1118.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_stats_py.py:37) (8 samples, 0.38%)</title><rect x="98.6767%" y="356" width="0.3781%" height="15" fill="rgb(210,224,50)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="366.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1055) (8 samples, 0.38%)</title><rect x="98.6767%" y="372" width="0.3781%" height="15" fill="rgb(228,127,35)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="382.50"></text></g><g><title>__getattr__ (scipy/__init__.py:134) (8 samples, 0.38%)</title><rect x="98.6767%" y="388" width="0.3781%" height="15" fill="rgb(245,102,45)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="398.50"></text></g><g><title>import_module (importlib/__init__.py:127) (8 samples, 0.38%)</title><rect x="98.6767%" y="404" width="0.3781%" height="15" fill="rgb(214,1,49)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="414.50"></text></g><g><title>_gcd_import (&lt;frozen importlib._bootstrap&gt;:1030) (8 samples, 0.38%)</title><rect x="98.6767%" y="420" width="0.3781%" height="15" fill="rgb(226,163,40)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="430.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (8 samples, 0.38%)</title><rect x="98.6767%" y="436" width="0.3781%" height="15" fill="rgb(239,212,28)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="446.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (8 samples, 0.38%)</title><rect x="98.6767%" y="452" width="0.3781%" height="15" fill="rgb(220,20,13)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="462.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (8 samples, 0.38%)</title><rect x="98.6767%" y="468" width="0.3781%" height="15" fill="rgb(210,164,35)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="478.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (8 samples, 0.38%)</title><rect x="98.6767%" y="484" width="0.3781%" height="15" fill="rgb(248,109,41)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="494.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (8 samples, 0.38%)</title><rect x="98.6767%" y="500" width="0.3781%" height="15" fill="rgb(238,23,50)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="510.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/__init__.py:308) (8 samples, 0.38%)</title><rect x="98.6767%" y="516" width="0.3781%" height="15" fill="rgb(211,48,49)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="526.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (8 samples, 0.38%)</title><rect x="98.6767%" y="532" width="0.3781%" height="15" fill="rgb(223,36,21)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="542.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (8 samples, 0.38%)</title><rect x="98.6767%" y="548" width="0.3781%" height="15" fill="rgb(207,123,46)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="558.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (8 samples, 0.38%)</title><rect x="98.6767%" y="564" width="0.3781%" height="15" fill="rgb(240,218,32)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="574.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (8 samples, 0.38%)</title><rect x="98.6767%" y="580" width="0.3781%" height="15" fill="rgb(252,5,43)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="590.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (8 samples, 0.38%)</title><rect x="98.6767%" y="596" width="0.3781%" height="15" fill="rgb(252,84,19)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="606.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (8 samples, 0.38%)</title><rect x="98.6767%" y="612" width="0.3781%" height="15" fill="rgb(243,152,39)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="622.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (8 samples, 0.38%)</title><rect x="98.6767%" y="628" width="0.3781%" height="15" fill="rgb(234,160,15)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="638.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csgraph/__init__.py:185) (8 samples, 0.38%)</title><rect x="98.6767%" y="644" width="0.3781%" height="15" fill="rgb(237,34,20)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="654.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (8 samples, 0.38%)</title><rect x="98.6767%" y="660" width="0.3781%" height="15" fill="rgb(229,97,13)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="670.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (8 samples, 0.38%)</title><rect x="98.6767%" y="676" width="0.3781%" height="15" fill="rgb(234,71,50)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="686.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (8 samples, 0.38%)</title><rect x="98.6767%" y="692" width="0.3781%" height="15" fill="rgb(253,155,4)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="702.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (8 samples, 0.38%)</title><rect x="98.6767%" y="708" width="0.3781%" height="15" fill="rgb(222,185,37)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="718.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (8 samples, 0.38%)</title><rect x="98.6767%" y="724" width="0.3781%" height="15" fill="rgb(251,177,13)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="734.50"></text></g><g><title>&lt;module&gt; (scipy/sparse/csgraph/_laplacian.py:7) (8 samples, 0.38%)</title><rect x="98.6767%" y="740" width="0.3781%" height="15" fill="rgb(250,179,40)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="750.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (8 samples, 0.38%)</title><rect x="98.6767%" y="756" width="0.3781%" height="15" fill="rgb(242,44,2)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="766.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (8 samples, 0.38%)</title><rect x="98.6767%" y="772" width="0.3781%" height="15" fill="rgb(216,177,13)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="782.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (8 samples, 0.38%)</title><rect x="98.6767%" y="788" width="0.3781%" height="15" fill="rgb(216,106,43)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="798.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (8 samples, 0.38%)</title><rect x="98.6767%" y="804" width="0.3781%" height="15" fill="rgb(216,183,2)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (8 samples, 0.38%)</title><rect x="98.6767%" y="820" width="0.3781%" height="15" fill="rgb(249,75,3)" fg:x="2088" fg:w="8"/><text x="98.9267%" y="830.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/__init__.py:116) (5 samples, 0.24%)</title><rect x="99.1021%" y="500" width="0.2363%" height="15" fill="rgb(219,67,39)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="510.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (5 samples, 0.24%)</title><rect x="99.1021%" y="516" width="0.2363%" height="15" fill="rgb(253,228,2)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="526.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (5 samples, 0.24%)</title><rect x="99.1021%" y="532" width="0.2363%" height="15" fill="rgb(235,138,27)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="542.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (5 samples, 0.24%)</title><rect x="99.1021%" y="548" width="0.2363%" height="15" fill="rgb(236,97,51)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="558.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (5 samples, 0.24%)</title><rect x="99.1021%" y="564" width="0.2363%" height="15" fill="rgb(240,80,30)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="574.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.24%)</title><rect x="99.1021%" y="580" width="0.2363%" height="15" fill="rgb(230,178,19)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="590.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/_geometric_slerp.py:9) (5 samples, 0.24%)</title><rect x="99.1021%" y="596" width="0.2363%" height="15" fill="rgb(210,190,27)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="606.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (5 samples, 0.24%)</title><rect x="99.1021%" y="612" width="0.2363%" height="15" fill="rgb(222,107,31)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="622.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (5 samples, 0.24%)</title><rect x="99.1021%" y="628" width="0.2363%" height="15" fill="rgb(216,127,34)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="638.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (5 samples, 0.24%)</title><rect x="99.1021%" y="644" width="0.2363%" height="15" fill="rgb(234,116,52)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="654.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (5 samples, 0.24%)</title><rect x="99.1021%" y="660" width="0.2363%" height="15" fill="rgb(222,124,15)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="670.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.24%)</title><rect x="99.1021%" y="676" width="0.2363%" height="15" fill="rgb(231,179,28)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="686.50"></text></g><g><title>&lt;module&gt; (scipy/spatial/distance.py:121) (5 samples, 0.24%)</title><rect x="99.1021%" y="692" width="0.2363%" height="15" fill="rgb(226,93,45)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="702.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (5 samples, 0.24%)</title><rect x="99.1021%" y="708" width="0.2363%" height="15" fill="rgb(215,8,51)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="718.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (5 samples, 0.24%)</title><rect x="99.1021%" y="724" width="0.2363%" height="15" fill="rgb(223,106,5)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="734.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (5 samples, 0.24%)</title><rect x="99.1021%" y="740" width="0.2363%" height="15" fill="rgb(250,191,5)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="750.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (5 samples, 0.24%)</title><rect x="99.1021%" y="756" width="0.2363%" height="15" fill="rgb(242,132,44)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="766.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.24%)</title><rect x="99.1021%" y="772" width="0.2363%" height="15" fill="rgb(251,152,29)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="782.50"></text></g><g><title>&lt;module&gt; (scipy/special/__init__.py:777) (5 samples, 0.24%)</title><rect x="99.1021%" y="788" width="0.2363%" height="15" fill="rgb(218,179,5)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="798.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (5 samples, 0.24%)</title><rect x="99.1021%" y="804" width="0.2363%" height="15" fill="rgb(227,67,19)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="814.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.24%)</title><rect x="99.1021%" y="820" width="0.2363%" height="15" fill="rgb(233,119,31)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="830.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (5 samples, 0.24%)</title><rect x="99.1021%" y="836" width="0.2363%" height="15" fill="rgb(241,120,22)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="846.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (5 samples, 0.24%)</title><rect x="99.1021%" y="852" width="0.2363%" height="15" fill="rgb(224,102,30)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="862.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (5 samples, 0.24%)</title><rect x="99.1021%" y="868" width="0.2363%" height="15" fill="rgb(210,164,37)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="878.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:1181) (5 samples, 0.24%)</title><rect x="99.1021%" y="884" width="0.2363%" height="15" fill="rgb(226,191,16)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="894.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.24%)</title><rect x="99.1021%" y="900" width="0.2363%" height="15" fill="rgb(214,40,45)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="910.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (5 samples, 0.24%)</title><rect x="99.1021%" y="916" width="0.2363%" height="15" fill="rgb(244,29,26)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="926.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (5 samples, 0.24%)</title><rect x="99.1021%" y="932" width="0.2363%" height="15" fill="rgb(216,16,5)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="942.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:666) (5 samples, 0.24%)</title><rect x="99.1021%" y="948" width="0.2363%" height="15" fill="rgb(249,76,35)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="958.50"></text></g><g><title>module_from_spec (&lt;frozen importlib._bootstrap&gt;:565) (5 samples, 0.24%)</title><rect x="99.1021%" y="964" width="0.2363%" height="15" fill="rgb(207,11,44)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="974.50"></text></g><g><title>create_module (&lt;frozen importlib._bootstrap_external&gt;:1173) (5 samples, 0.24%)</title><rect x="99.1021%" y="980" width="0.2363%" height="15" fill="rgb(228,190,49)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="990.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (5 samples, 0.24%)</title><rect x="99.1021%" y="996" width="0.2363%" height="15" fill="rgb(214,173,12)" fg:x="2097" fg:w="5"/><text x="99.3521%" y="1006.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_stats_py.py:38) (7 samples, 0.33%)</title><rect x="99.0548%" y="356" width="0.3308%" height="15" fill="rgb(218,26,35)" fg:x="2096" fg:w="7"/><text x="99.3048%" y="366.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.33%)</title><rect x="99.0548%" y="372" width="0.3308%" height="15" fill="rgb(220,200,19)" fg:x="2096" fg:w="7"/><text x="99.3048%" y="382.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:972) (7 samples, 0.33%)</title><rect x="99.0548%" y="388" width="0.3308%" height="15" fill="rgb(239,95,49)" fg:x="2096" fg:w="7"/><text x="99.3048%" y="398.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.33%)</title><rect x="99.0548%" y="404" width="0.3308%" height="15" fill="rgb(235,85,53)" fg:x="2096" fg:w="7"/><text x="99.3048%" y="414.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.33%)</title><rect x="99.0548%" y="420" width="0.3308%" height="15" fill="rgb(233,133,31)" fg:x="2096" fg:w="7"/><text x="99.3048%" y="430.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.33%)</title><rect x="99.0548%" y="436" width="0.3308%" height="15" fill="rgb(218,25,20)" fg:x="2096" fg:w="7"/><text x="99.3048%" y="446.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.33%)</title><rect x="99.0548%" y="452" width="0.3308%" height="15" fill="rgb(252,210,38)" fg:x="2096" fg:w="7"/><text x="99.3048%" y="462.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (7 samples, 0.33%)</title><rect x="99.0548%" y="468" width="0.3308%" height="15" fill="rgb(242,134,21)" fg:x="2096" fg:w="7"/><text x="99.3048%" y="478.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.33%)</title><rect x="99.0548%" y="484" width="0.3308%" height="15" fill="rgb(213,28,48)" fg:x="2096" fg:w="7"/><text x="99.3048%" y="494.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_continuous_distns.py:33) (3 samples, 0.14%)</title><rect x="99.5274%" y="612" width="0.1418%" height="15" fill="rgb(250,196,2)" fg:x="2106" fg:w="3"/><text x="99.7774%" y="622.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (3 samples, 0.14%)</title><rect x="99.5274%" y="628" width="0.1418%" height="15" fill="rgb(227,5,17)" fg:x="2106" fg:w="3"/><text x="99.7774%" y="638.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (3 samples, 0.14%)</title><rect x="99.5274%" y="644" width="0.1418%" height="15" fill="rgb(221,226,24)" fg:x="2106" fg:w="3"/><text x="99.7774%" y="654.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (3 samples, 0.14%)</title><rect x="99.5274%" y="660" width="0.1418%" height="15" fill="rgb(211,5,48)" fg:x="2106" fg:w="3"/><text x="99.7774%" y="670.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (3 samples, 0.14%)</title><rect x="99.5274%" y="676" width="0.1418%" height="15" fill="rgb(219,150,6)" fg:x="2106" fg:w="3"/><text x="99.7774%" y="686.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (3 samples, 0.14%)</title><rect x="99.5274%" y="692" width="0.1418%" height="15" fill="rgb(251,46,16)" fg:x="2106" fg:w="3"/><text x="99.7774%" y="702.50"></text></g><g><title>&lt;module&gt; (scipy/stats/distributions.py:10) (7 samples, 0.33%)</title><rect x="99.4802%" y="484" width="0.3308%" height="15" fill="rgb(220,204,40)" fg:x="2105" fg:w="7"/><text x="99.7302%" y="494.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (7 samples, 0.33%)</title><rect x="99.4802%" y="500" width="0.3308%" height="15" fill="rgb(211,85,2)" fg:x="2105" fg:w="7"/><text x="99.7302%" y="510.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.33%)</title><rect x="99.4802%" y="516" width="0.3308%" height="15" fill="rgb(229,17,7)" fg:x="2105" fg:w="7"/><text x="99.7302%" y="526.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (7 samples, 0.33%)</title><rect x="99.4802%" y="532" width="0.3308%" height="15" fill="rgb(239,72,28)" fg:x="2105" fg:w="7"/><text x="99.7302%" y="542.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (7 samples, 0.33%)</title><rect x="99.4802%" y="548" width="0.3308%" height="15" fill="rgb(230,47,54)" fg:x="2105" fg:w="7"/><text x="99.7302%" y="558.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (7 samples, 0.33%)</title><rect x="99.4802%" y="564" width="0.3308%" height="15" fill="rgb(214,50,8)" fg:x="2105" fg:w="7"/><text x="99.7302%" y="574.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (7 samples, 0.33%)</title><rect x="99.4802%" y="580" width="0.3308%" height="15" fill="rgb(216,198,43)" fg:x="2105" fg:w="7"/><text x="99.7302%" y="590.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (7 samples, 0.33%)</title><rect x="99.4802%" y="596" width="0.3308%" height="15" fill="rgb(234,20,35)" fg:x="2105" fg:w="7"/><text x="99.7302%" y="606.50"></text></g><g><title>&lt;module&gt; (scipy/stats/__init__.py:606) (26 samples, 1.23%)</title><rect x="98.6295%" y="260" width="1.2287%" height="15" fill="rgb(254,45,19)" fg:x="2087" fg:w="26"/><text x="98.8795%" y="270.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (26 samples, 1.23%)</title><rect x="98.6295%" y="276" width="1.2287%" height="15" fill="rgb(219,14,44)" fg:x="2087" fg:w="26"/><text x="98.8795%" y="286.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (26 samples, 1.23%)</title><rect x="98.6295%" y="292" width="1.2287%" height="15" fill="rgb(217,220,26)" fg:x="2087" fg:w="26"/><text x="98.8795%" y="302.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (26 samples, 1.23%)</title><rect x="98.6295%" y="308" width="1.2287%" height="15" fill="rgb(213,158,28)" fg:x="2087" fg:w="26"/><text x="98.8795%" y="318.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (26 samples, 1.23%)</title><rect x="98.6295%" y="324" width="1.2287%" height="15" fill="rgb(252,51,52)" fg:x="2087" fg:w="26"/><text x="98.8795%" y="334.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (26 samples, 1.23%)</title><rect x="98.6295%" y="340" width="1.2287%" height="15" fill="rgb(246,89,16)" fg:x="2087" fg:w="26"/><text x="98.8795%" y="350.50"></text></g><g><title>&lt;module&gt; (scipy/stats/_stats_py.py:49) (8 samples, 0.38%)</title><rect x="99.4802%" y="356" width="0.3781%" height="15" fill="rgb(216,158,49)" fg:x="2105" fg:w="8"/><text x="99.7302%" y="366.50"></text></g><g><title>_handle_fromlist (&lt;frozen importlib._bootstrap&gt;:1058) (8 samples, 0.38%)</title><rect x="99.4802%" y="372" width="0.3781%" height="15" fill="rgb(236,107,19)" fg:x="2105" fg:w="8"/><text x="99.7302%" y="382.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (8 samples, 0.38%)</title><rect x="99.4802%" y="388" width="0.3781%" height="15" fill="rgb(228,185,30)" fg:x="2105" fg:w="8"/><text x="99.7302%" y="398.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (8 samples, 0.38%)</title><rect x="99.4802%" y="404" width="0.3781%" height="15" fill="rgb(246,134,8)" fg:x="2105" fg:w="8"/><text x="99.7302%" y="414.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (8 samples, 0.38%)</title><rect x="99.4802%" y="420" width="0.3781%" height="15" fill="rgb(214,143,50)" fg:x="2105" fg:w="8"/><text x="99.7302%" y="430.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (8 samples, 0.38%)</title><rect x="99.4802%" y="436" width="0.3781%" height="15" fill="rgb(228,75,8)" fg:x="2105" fg:w="8"/><text x="99.7302%" y="446.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (8 samples, 0.38%)</title><rect x="99.4802%" y="452" width="0.3781%" height="15" fill="rgb(207,175,4)" fg:x="2105" fg:w="8"/><text x="99.7302%" y="462.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (8 samples, 0.38%)</title><rect x="99.4802%" y="468" width="0.3781%" height="15" fill="rgb(205,108,24)" fg:x="2105" fg:w="8"/><text x="99.7302%" y="478.50"></text></g><g><title>&lt;module&gt; (SA_quantity_new.py:7) (28 samples, 1.32%)</title><rect x="98.6295%" y="68" width="1.3233%" height="15" fill="rgb(244,120,49)" fg:x="2087" fg:w="28"/><text x="98.8795%" y="78.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (28 samples, 1.32%)</title><rect x="98.6295%" y="84" width="1.3233%" height="15" fill="rgb(223,47,38)" fg:x="2087" fg:w="28"/><text x="98.8795%" y="94.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (28 samples, 1.32%)</title><rect x="98.6295%" y="100" width="1.3233%" height="15" fill="rgb(229,179,11)" fg:x="2087" fg:w="28"/><text x="98.8795%" y="110.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (28 samples, 1.32%)</title><rect x="98.6295%" y="116" width="1.3233%" height="15" fill="rgb(231,122,1)" fg:x="2087" fg:w="28"/><text x="98.8795%" y="126.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (28 samples, 1.32%)</title><rect x="98.6295%" y="132" width="1.3233%" height="15" fill="rgb(245,119,9)" fg:x="2087" fg:w="28"/><text x="98.8795%" y="142.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (28 samples, 1.32%)</title><rect x="98.6295%" y="148" width="1.3233%" height="15" fill="rgb(241,163,25)" fg:x="2087" fg:w="28"/><text x="98.8795%" y="158.50"></text></g><g><title>&lt;module&gt; (evaluation_diff_quantity.py:10) (28 samples, 1.32%)</title><rect x="98.6295%" y="164" width="1.3233%" height="15" fill="rgb(217,214,3)" fg:x="2087" fg:w="28"/><text x="98.8795%" y="174.50"></text></g><g><title>_find_and_load (&lt;frozen importlib._bootstrap&gt;:1007) (28 samples, 1.32%)</title><rect x="98.6295%" y="180" width="1.3233%" height="15" fill="rgb(240,86,28)" fg:x="2087" fg:w="28"/><text x="98.8795%" y="190.50"></text></g><g><title>_find_and_load_unlocked (&lt;frozen importlib._bootstrap&gt;:986) (28 samples, 1.32%)</title><rect x="98.6295%" y="196" width="1.3233%" height="15" fill="rgb(215,47,9)" fg:x="2087" fg:w="28"/><text x="98.8795%" y="206.50"></text></g><g><title>_load_unlocked (&lt;frozen importlib._bootstrap&gt;:680) (28 samples, 1.32%)</title><rect x="98.6295%" y="212" width="1.3233%" height="15" fill="rgb(252,25,45)" fg:x="2087" fg:w="28"/><text x="98.8795%" y="222.50"></text></g><g><title>exec_module (&lt;frozen importlib._bootstrap_external&gt;:850) (28 samples, 1.32%)</title><rect x="98.6295%" y="228" width="1.3233%" height="15" fill="rgb(251,164,9)" fg:x="2087" fg:w="28"/><text x="98.8795%" y="238.50"></text></g><g><title>_call_with_frames_removed (&lt;frozen importlib._bootstrap&gt;:228) (28 samples, 1.32%)</title><rect x="98.6295%" y="244" width="1.3233%" height="15" fill="rgb(233,194,0)" fg:x="2087" fg:w="28"/><text x="98.8795%" y="254.50"></text></g><g><title>all (2,116 samples, 100%)</title><rect x="0.0000%" y="52" width="100.0000%" height="15" fill="rgb(249,111,24)" fg:x="0" fg:w="2116"/><text x="0.2500%" y="62.50"></text></g></svg></svg>